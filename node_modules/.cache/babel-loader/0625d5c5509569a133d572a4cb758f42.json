{"ast":null,"code":"var _assertThisInitialized = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _get = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _toConsumableArray = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _slicedToArray = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _inherits = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _regeneratorRuntime = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/michelcharles/Documents/Code/com-michel-master/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\n/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __w_pdfjs_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __w_pdfjs_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __w_pdfjs_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __w_pdfjs_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __w_pdfjs_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __w_pdfjs_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"addLinkAttributes\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.addLinkAttributes;\n        }\n      });\n      Object.defineProperty(exports, \"getFilenameFromUrl\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.getFilenameFromUrl;\n        }\n      });\n      Object.defineProperty(exports, \"LinkTarget\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.LinkTarget;\n        }\n      });\n      Object.defineProperty(exports, \"loadScript\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.loadScript;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDateString\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.PDFDateString;\n        }\n      });\n      Object.defineProperty(exports, \"RenderingCancelledException\", {\n        enumerable: true,\n        get: function get() {\n          return _display_utils.RenderingCancelledException;\n        }\n      });\n      Object.defineProperty(exports, \"build\", {\n        enumerable: true,\n        get: function get() {\n          return _api.build;\n        }\n      });\n      Object.defineProperty(exports, \"getDocument\", {\n        enumerable: true,\n        get: function get() {\n          return _api.getDocument;\n        }\n      });\n      Object.defineProperty(exports, \"LoopbackPort\", {\n        enumerable: true,\n        get: function get() {\n          return _api.LoopbackPort;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n        enumerable: true,\n        get: function get() {\n          return _api.PDFDataRangeTransport;\n        }\n      });\n      Object.defineProperty(exports, \"PDFWorker\", {\n        enumerable: true,\n        get: function get() {\n          return _api.PDFWorker;\n        }\n      });\n      Object.defineProperty(exports, \"version\", {\n        enumerable: true,\n        get: function get() {\n          return _api.version;\n        }\n      });\n      Object.defineProperty(exports, \"CMapCompressionType\", {\n        enumerable: true,\n        get: function get() {\n          return _util.CMapCompressionType;\n        }\n      });\n      Object.defineProperty(exports, \"createObjectURL\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createObjectURL;\n        }\n      });\n      Object.defineProperty(exports, \"createPromiseCapability\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createPromiseCapability;\n        }\n      });\n      Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n        enumerable: true,\n        get: function get() {\n          return _util.createValidAbsoluteUrl;\n        }\n      });\n      Object.defineProperty(exports, \"InvalidPDFException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.InvalidPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"MissingPDFException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.MissingPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"OPS\", {\n        enumerable: true,\n        get: function get() {\n          return _util.OPS;\n        }\n      });\n      Object.defineProperty(exports, \"PasswordResponses\", {\n        enumerable: true,\n        get: function get() {\n          return _util.PasswordResponses;\n        }\n      });\n      Object.defineProperty(exports, \"PermissionFlag\", {\n        enumerable: true,\n        get: function get() {\n          return _util.PermissionFlag;\n        }\n      });\n      Object.defineProperty(exports, \"removeNullCharacters\", {\n        enumerable: true,\n        get: function get() {\n          return _util.removeNullCharacters;\n        }\n      });\n      Object.defineProperty(exports, \"shadow\", {\n        enumerable: true,\n        get: function get() {\n          return _util.shadow;\n        }\n      });\n      Object.defineProperty(exports, \"UnexpectedResponseException\", {\n        enumerable: true,\n        get: function get() {\n          return _util.UnexpectedResponseException;\n        }\n      });\n      Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n        enumerable: true,\n        get: function get() {\n          return _util.UNSUPPORTED_FEATURES;\n        }\n      });\n      Object.defineProperty(exports, \"Util\", {\n        enumerable: true,\n        get: function get() {\n          return _util.Util;\n        }\n      });\n      Object.defineProperty(exports, \"VerbosityLevel\", {\n        enumerable: true,\n        get: function get() {\n          return _util.VerbosityLevel;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _annotation_layer.AnnotationLayer;\n        }\n      });\n      Object.defineProperty(exports, \"apiCompatibilityParams\", {\n        enumerable: true,\n        get: function get() {\n          return _api_compatibility.apiCompatibilityParams;\n        }\n      });\n      Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n        enumerable: true,\n        get: function get() {\n          return _worker_options.GlobalWorkerOptions;\n        }\n      });\n      Object.defineProperty(exports, \"renderTextLayer\", {\n        enumerable: true,\n        get: function get() {\n          return _text_layer.renderTextLayer;\n        }\n      });\n      Object.defineProperty(exports, \"SVGGraphics\", {\n        enumerable: true,\n        get: function get() {\n          return _svg.SVGGraphics;\n        }\n      });\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _api = __w_pdfjs_require__(5);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _annotation_layer = __w_pdfjs_require__(16);\n\n      var _api_compatibility = __w_pdfjs_require__(7);\n\n      var _worker_options = __w_pdfjs_require__(10);\n\n      var _text_layer = __w_pdfjs_require__(17);\n\n      var _svg = __w_pdfjs_require__(18);\n\n      var pdfjsVersion = '2.5.207';\n      var pdfjsBuild = '0974d605';\n      {\n        var _w_pdfjs_require__ = __w_pdfjs_require__(4),\n            isNodeJS = _w_pdfjs_require__.isNodeJS;\n\n        if (isNodeJS) {\n          var PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n\n          (0, _api.setPDFNetworkStreamFactory)(function (params) {\n            return new PDFNodeStream(params);\n          });\n        } else {\n          var PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n\n          var PDFFetchStream;\n\n          if ((0, _display_utils.isFetchSupported)()) {\n            PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n          }\n\n          (0, _api.setPDFNetworkStreamFactory)(function (params) {\n            if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n              return new PDFFetchStream(params);\n            }\n\n            return new PDFNetworkStream(params);\n          });\n        }\n      }\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.addLinkAttributes = addLinkAttributes;\n      exports.getFilenameFromUrl = getFilenameFromUrl;\n      exports.isFetchSupported = isFetchSupported;\n      exports.isValidFetchUrl = isValidFetchUrl;\n      exports.loadScript = loadScript;\n      exports.deprecated = deprecated;\n      exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n      exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n      var SVG_NS = \"http://www.w3.org/2000/svg\";\n\n      var DOMCanvasFactory = /*#__PURE__*/function () {\n        function DOMCanvasFactory() {\n          _classCallCheck(this, DOMCanvasFactory);\n        }\n\n        _createClass(DOMCanvasFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n            canvas.width = width;\n            canvas.height = height;\n            return {\n              canvas: canvas,\n              context: context\n            };\n          }\n        }, {\n          key: \"reset\",\n          value: function reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n        }]);\n\n        return DOMCanvasFactory;\n      }();\n\n      exports.DOMCanvasFactory = DOMCanvasFactory;\n\n      var DOMCMapReaderFactory = /*#__PURE__*/function () {\n        function DOMCMapReaderFactory(_ref) {\n          var _ref$baseUrl = _ref.baseUrl,\n              baseUrl = _ref$baseUrl === void 0 ? null : _ref$baseUrl,\n              _ref$isCompressed = _ref.isCompressed,\n              isCompressed = _ref$isCompressed === void 0 ? false : _ref$isCompressed;\n\n          _classCallCheck(this, DOMCMapReaderFactory);\n\n          this.baseUrl = baseUrl;\n          this.isCompressed = isCompressed;\n        }\n\n        _createClass(DOMCMapReaderFactory, [{\n          key: \"fetch\",\n          value: function (_fetch) {\n            function fetch(_x) {\n              return _fetch.apply(this, arguments);\n            }\n\n            fetch.toString = function () {\n              return _fetch.toString();\n            };\n\n            return fetch;\n          }( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n              var _this = this;\n\n              var name, url, compressionType;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      name = _ref2.name;\n\n                      if (this.baseUrl) {\n                        _context2.next = 3;\n                        break;\n                      }\n\n                      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n\n                    case 3:\n                      if (name) {\n                        _context2.next = 5;\n                        break;\n                      }\n\n                      throw new Error(\"CMap name must be specified.\");\n\n                    case 5:\n                      url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n                      compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n\n                      if (!(isFetchSupported() && isValidFetchUrl(url, document.baseURI))) {\n                        _context2.next = 9;\n                        break;\n                      }\n\n                      return _context2.abrupt(\"return\", fetch(url).then( /*#__PURE__*/function () {\n                        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                          var cMapData;\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  if (response.ok) {\n                                    _context.next = 2;\n                                    break;\n                                  }\n\n                                  throw new Error(response.statusText);\n\n                                case 2:\n                                  if (!_this.isCompressed) {\n                                    _context.next = 10;\n                                    break;\n                                  }\n\n                                  _context.t0 = Uint8Array;\n                                  _context.next = 6;\n                                  return response.arrayBuffer();\n\n                                case 6:\n                                  _context.t1 = _context.sent;\n                                  cMapData = new _context.t0(_context.t1);\n                                  _context.next = 15;\n                                  break;\n\n                                case 10:\n                                  _context.t2 = (0, _util.stringToBytes);\n                                  _context.next = 13;\n                                  return response.text();\n\n                                case 13:\n                                  _context.t3 = _context.sent;\n                                  cMapData = (0, _context.t2)(_context.t3);\n\n                                case 15:\n                                  return _context.abrupt(\"return\", {\n                                    cMapData: cMapData,\n                                    compressionType: compressionType\n                                  });\n\n                                case 16:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        return function (_x3) {\n                          return _ref4.apply(this, arguments);\n                        };\n                      }()).catch(function (reason) {\n                        throw new Error(\"Unable to load \".concat(_this.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                      }));\n\n                    case 9:\n                      return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                        var request = new XMLHttpRequest();\n                        request.open(\"GET\", url, true);\n\n                        if (_this.isCompressed) {\n                          request.responseType = \"arraybuffer\";\n                        }\n\n                        request.onreadystatechange = function () {\n                          if (request.readyState !== XMLHttpRequest.DONE) {\n                            return;\n                          }\n\n                          if (request.status === 200 || request.status === 0) {\n                            var cMapData;\n\n                            if (_this.isCompressed && request.response) {\n                              cMapData = new Uint8Array(request.response);\n                            } else if (!_this.isCompressed && request.responseText) {\n                              cMapData = (0, _util.stringToBytes)(request.responseText);\n                            }\n\n                            if (cMapData) {\n                              resolve({\n                                cMapData: cMapData,\n                                compressionType: compressionType\n                              });\n                              return;\n                            }\n                          }\n\n                          reject(new Error(request.statusText));\n                        };\n\n                        request.send(null);\n                      }).catch(function (reason) {\n                        throw new Error(\"Unable to load \".concat(_this.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                      }));\n\n                    case 10:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n\n            return function (_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }())\n        }]);\n\n        return DOMCMapReaderFactory;\n      }();\n\n      exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n      var DOMSVGFactory = /*#__PURE__*/function () {\n        function DOMSVGFactory() {\n          _classCallCheck(this, DOMSVGFactory);\n        }\n\n        _createClass(DOMSVGFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n            var svg = document.createElementNS(SVG_NS, \"svg:svg\");\n            svg.setAttribute(\"version\", \"1.1\");\n            svg.setAttribute(\"width\", width + \"px\");\n            svg.setAttribute(\"height\", height + \"px\");\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n            return svg;\n          }\n        }, {\n          key: \"createElement\",\n          value: function createElement(type) {\n            (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n            return document.createElementNS(SVG_NS, type);\n          }\n        }]);\n\n        return DOMSVGFactory;\n      }();\n\n      exports.DOMSVGFactory = DOMSVGFactory;\n\n      var PageViewport = /*#__PURE__*/function () {\n        function PageViewport(_ref5) {\n          var viewBox = _ref5.viewBox,\n              scale = _ref5.scale,\n              rotation = _ref5.rotation,\n              _ref5$offsetX = _ref5.offsetX,\n              offsetX = _ref5$offsetX === void 0 ? 0 : _ref5$offsetX,\n              _ref5$offsetY = _ref5.offsetY,\n              offsetY = _ref5$offsetY === void 0 ? 0 : _ref5$offsetY,\n              _ref5$dontFlip = _ref5.dontFlip,\n              dontFlip = _ref5$dontFlip === void 0 ? false : _ref5$dontFlip;\n\n          _classCallCheck(this, PageViewport);\n\n          this.viewBox = viewBox;\n          this.scale = scale;\n          this.rotation = rotation;\n          this.offsetX = offsetX;\n          this.offsetY = offsetY;\n          var centerX = (viewBox[2] + viewBox[0]) / 2;\n          var centerY = (viewBox[3] + viewBox[1]) / 2;\n          var rotateA, rotateB, rotateC, rotateD;\n          rotation = rotation % 360;\n          rotation = rotation < 0 ? rotation + 360 : rotation;\n\n          switch (rotation) {\n            case 180:\n              rotateA = -1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = 1;\n              break;\n\n            case 90:\n              rotateA = 0;\n              rotateB = 1;\n              rotateC = 1;\n              rotateD = 0;\n              break;\n\n            case 270:\n              rotateA = 0;\n              rotateB = -1;\n              rotateC = -1;\n              rotateD = 0;\n              break;\n\n            case 0:\n              rotateA = 1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = -1;\n              break;\n\n            default:\n              throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n          }\n\n          if (dontFlip) {\n            rotateC = -rotateC;\n            rotateD = -rotateD;\n          }\n\n          var offsetCanvasX, offsetCanvasY;\n          var width, height;\n\n          if (rotateA === 0) {\n            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n            width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          } else {\n            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n            width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          }\n\n          this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n          this.width = width;\n          this.height = height;\n        }\n\n        _createClass(PageViewport, [{\n          key: \"clone\",\n          value: function clone() {\n            var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref6$scale = _ref6.scale,\n                scale = _ref6$scale === void 0 ? this.scale : _ref6$scale,\n                _ref6$rotation = _ref6.rotation,\n                rotation = _ref6$rotation === void 0 ? this.rotation : _ref6$rotation,\n                _ref6$offsetX = _ref6.offsetX,\n                offsetX = _ref6$offsetX === void 0 ? this.offsetX : _ref6$offsetX,\n                _ref6$offsetY = _ref6.offsetY,\n                offsetY = _ref6$offsetY === void 0 ? this.offsetY : _ref6$offsetY,\n                _ref6$dontFlip = _ref6.dontFlip,\n                dontFlip = _ref6$dontFlip === void 0 ? false : _ref6$dontFlip;\n\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"convertToViewportPoint\",\n          value: function convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n        }, {\n          key: \"convertToViewportRectangle\",\n          value: function convertToViewportRectangle(rect) {\n            var topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n            var bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n        }, {\n          key: \"convertToPdfPoint\",\n          value: function convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n        }]);\n\n        return PageViewport;\n      }();\n\n      exports.PageViewport = PageViewport;\n\n      var RenderingCancelledException = /*#__PURE__*/function (_util$BaseException) {\n        _inherits(RenderingCancelledException, _util$BaseException);\n\n        var _super = _createSuper(RenderingCancelledException);\n\n        function RenderingCancelledException(msg, type) {\n          var _this2;\n\n          _classCallCheck(this, RenderingCancelledException);\n\n          _this2 = _super.call(this, msg);\n          _this2.type = type;\n          return _this2;\n        }\n\n        return _createClass(RenderingCancelledException);\n      }(_util.BaseException);\n\n      exports.RenderingCancelledException = RenderingCancelledException;\n      var LinkTarget = {\n        NONE: 0,\n        SELF: 1,\n        BLANK: 2,\n        PARENT: 3,\n        TOP: 4\n      };\n      exports.LinkTarget = LinkTarget;\n\n      function addLinkAttributes(link) {\n        var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            url = _ref7.url,\n            target = _ref7.target,\n            rel = _ref7.rel,\n            _ref7$enabled = _ref7.enabled,\n            enabled = _ref7$enabled === void 0 ? true : _ref7$enabled;\n\n        (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n        var urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n        if (enabled) {\n          link.href = link.title = urlNullRemoved;\n        } else {\n          link.href = \"\";\n          link.title = \"Disabled: \".concat(urlNullRemoved);\n\n          link.onclick = function () {\n            return false;\n          };\n        }\n\n        var targetStr = \"\";\n\n        switch (target) {\n          case LinkTarget.NONE:\n            break;\n\n          case LinkTarget.SELF:\n            targetStr = \"_self\";\n            break;\n\n          case LinkTarget.BLANK:\n            targetStr = \"_blank\";\n            break;\n\n          case LinkTarget.PARENT:\n            targetStr = \"_parent\";\n            break;\n\n          case LinkTarget.TOP:\n            targetStr = \"_top\";\n            break;\n        }\n\n        link.target = targetStr;\n        link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n      }\n\n      function getFilenameFromUrl(url) {\n        var anchor = url.indexOf(\"#\");\n        var query = url.indexOf(\"?\");\n        var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n      }\n\n      var StatTimer = /*#__PURE__*/function () {\n        function StatTimer() {\n          _classCallCheck(this, StatTimer);\n\n          this.started = Object.create(null);\n          this.times = [];\n        }\n\n        _createClass(StatTimer, [{\n          key: \"time\",\n          value: function time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(\"Timer is already running for \".concat(name));\n            }\n\n            this.started[name] = Date.now();\n          }\n        }, {\n          key: \"timeEnd\",\n          value: function timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(\"Timer has not been started for \".concat(name));\n            }\n\n            this.times.push({\n              name: name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n        }, {\n          key: \"toString\",\n          value: function toString() {\n            var outBuf = [];\n            var longest = 0;\n\n            var _iterator = _createForOfIteratorHelper(this.times),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var time = _step.value;\n                var name = time.name;\n\n                if (name.length > longest) {\n                  longest = name.length;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            var _iterator2 = _createForOfIteratorHelper(this.times),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _time = _step2.value;\n                var duration = _time.end - _time.start;\n                outBuf.push(\"\".concat(_time.name.padEnd(longest), \" \").concat(duration, \"ms\\n\"));\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            return outBuf.join(\"\");\n          }\n        }]);\n\n        return StatTimer;\n      }();\n\n      exports.StatTimer = StatTimer;\n\n      function isFetchSupported() {\n        return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n      }\n\n      function isValidFetchUrl(url, baseUrl) {\n        try {\n          var _ref8 = baseUrl ? new URL(url, baseUrl) : new URL(url),\n              protocol = _ref8.protocol;\n\n          return protocol === \"http:\" || protocol === \"https:\";\n        } catch (ex) {\n          return false;\n        }\n      }\n\n      function loadScript(src) {\n        return new Promise(function (resolve, reject) {\n          var script = document.createElement(\"script\");\n          script.src = src;\n          script.onload = resolve;\n\n          script.onerror = function () {\n            reject(new Error(\"Cannot load script at: \".concat(script.src)));\n          };\n\n          (document.head || document.documentElement).appendChild(script);\n        });\n      }\n\n      function deprecated(details) {\n        console.log(\"Deprecated API usage: \" + details);\n      }\n\n      var pdfDateStringRegex;\n\n      var PDFDateString = /*#__PURE__*/function () {\n        function PDFDateString() {\n          _classCallCheck(this, PDFDateString);\n        }\n\n        _createClass(PDFDateString, null, [{\n          key: \"toDateObject\",\n          value: function toDateObject(input) {\n            if (!input || !(0, _util.isString)(input)) {\n              return null;\n            }\n\n            if (!pdfDateStringRegex) {\n              pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            }\n\n            var matches = pdfDateStringRegex.exec(input);\n\n            if (!matches) {\n              return null;\n            }\n\n            var year = parseInt(matches[1], 10);\n            var month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            var day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            var hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            var minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            var second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            var universalTimeRelation = matches[7] || \"Z\";\n            var offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            var offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n        }]);\n\n        return PDFDateString;\n      }();\n\n      exports.PDFDateString = PDFDateString;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isBool = isBool;\n      exports.isEmptyObj = isEmptyObj;\n      exports.isNum = isNum;\n      exports.isString = isString;\n      exports.isSameOrigin = isSameOrigin;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.removeNullCharacters = removeNullCharacters;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      exports.unreachable = unreachable;\n      exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n\n      __w_pdfjs_require__(3);\n\n      var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      var PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      var TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      var ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      var AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      var AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      var AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      var AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      var AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      var AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      var AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      var AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      var StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      var FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      var VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      var CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      var OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      var UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\",\n        errorTilingPattern: \"errorTilingPattern\",\n        errorExtGState: \"errorExtGState\",\n        errorXObject: \"errorXObject\",\n        errorFontLoadType3: \"errorFontLoadType3\",\n        errorFontState: \"errorFontState\",\n        errorFontMissing: \"errorFontMissing\",\n        errorFontTranslate: \"errorFontTranslate\",\n        errorColorSpace: \"errorColorSpace\",\n        errorOperatorList: \"errorOperatorList\",\n        errorFontToUnicode: \"errorFontToUnicode\",\n        errorFontLoadNative: \"errorFontLoadNative\",\n        errorFontGetPath: \"errorFontGetPath\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      var PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      var verbosity = VerbosityLevel.WARNINGS;\n\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(\"Info: \".concat(msg));\n        }\n      }\n\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(\"Warning: \".concat(msg));\n        }\n      }\n\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n\n      function isSameOrigin(baseUrl, otherUrl) {\n        var base;\n\n        try {\n          base = new URL(baseUrl);\n\n          if (!base.origin || base.origin === \"null\") {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n\n        var other = new URL(otherUrl, base);\n        return base.origin === other.origin;\n      }\n\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n\n          default:\n            return false;\n        }\n      }\n\n      function createValidAbsoluteUrl(url, baseUrl) {\n        if (!url) {\n          return null;\n        }\n\n        try {\n          var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n\n        return null;\n      }\n\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n\n      var BaseException = function BaseExceptionClosure() {\n        function BaseException(message) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n\n          this.message = message;\n          this.name = this.constructor.name;\n        }\n\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n\n      exports.BaseException = BaseException;\n\n      var PasswordException = /*#__PURE__*/function (_BaseException) {\n        _inherits(PasswordException, _BaseException);\n\n        var _super2 = _createSuper(PasswordException);\n\n        function PasswordException(msg, code) {\n          var _this3;\n\n          _classCallCheck(this, PasswordException);\n\n          _this3 = _super2.call(this, msg);\n          _this3.code = code;\n          return _this3;\n        }\n\n        return _createClass(PasswordException);\n      }(BaseException);\n\n      exports.PasswordException = PasswordException;\n\n      var UnknownErrorException = /*#__PURE__*/function (_BaseException2) {\n        _inherits(UnknownErrorException, _BaseException2);\n\n        var _super3 = _createSuper(UnknownErrorException);\n\n        function UnknownErrorException(msg, details) {\n          var _this4;\n\n          _classCallCheck(this, UnknownErrorException);\n\n          _this4 = _super3.call(this, msg);\n          _this4.details = details;\n          return _this4;\n        }\n\n        return _createClass(UnknownErrorException);\n      }(BaseException);\n\n      exports.UnknownErrorException = UnknownErrorException;\n\n      var InvalidPDFException = /*#__PURE__*/function (_BaseException3) {\n        _inherits(InvalidPDFException, _BaseException3);\n\n        var _super4 = _createSuper(InvalidPDFException);\n\n        function InvalidPDFException() {\n          _classCallCheck(this, InvalidPDFException);\n\n          return _super4.apply(this, arguments);\n        }\n\n        return _createClass(InvalidPDFException);\n      }(BaseException);\n\n      exports.InvalidPDFException = InvalidPDFException;\n\n      var MissingPDFException = /*#__PURE__*/function (_BaseException4) {\n        _inherits(MissingPDFException, _BaseException4);\n\n        var _super5 = _createSuper(MissingPDFException);\n\n        function MissingPDFException() {\n          _classCallCheck(this, MissingPDFException);\n\n          return _super5.apply(this, arguments);\n        }\n\n        return _createClass(MissingPDFException);\n      }(BaseException);\n\n      exports.MissingPDFException = MissingPDFException;\n\n      var UnexpectedResponseException = /*#__PURE__*/function (_BaseException5) {\n        _inherits(UnexpectedResponseException, _BaseException5);\n\n        var _super6 = _createSuper(UnexpectedResponseException);\n\n        function UnexpectedResponseException(msg, status) {\n          var _this5;\n\n          _classCallCheck(this, UnexpectedResponseException);\n\n          _this5 = _super6.call(this, msg);\n          _this5.status = status;\n          return _this5;\n        }\n\n        return _createClass(UnexpectedResponseException);\n      }(BaseException);\n\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n\n      var FormatError = /*#__PURE__*/function (_BaseException6) {\n        _inherits(FormatError, _BaseException6);\n\n        var _super7 = _createSuper(FormatError);\n\n        function FormatError() {\n          _classCallCheck(this, FormatError);\n\n          return _super7.apply(this, arguments);\n        }\n\n        return _createClass(FormatError);\n      }(BaseException);\n\n      exports.FormatError = FormatError;\n\n      var AbortException = /*#__PURE__*/function (_BaseException7) {\n        _inherits(AbortException, _BaseException7);\n\n        var _super8 = _createSuper(AbortException);\n\n        function AbortException() {\n          _classCallCheck(this, AbortException);\n\n          return _super8.apply(this, arguments);\n        }\n\n        return _createClass(AbortException);\n      }(BaseException);\n\n      exports.AbortException = AbortException;\n      var NullCharactersRegExp = /\\x00/g;\n\n      function removeNullCharacters(str) {\n        if (typeof str !== \"string\") {\n          warn(\"The argument for removeNullCharacters must be a string.\");\n          return str;\n        }\n\n        return str.replace(NullCharactersRegExp, \"\");\n      }\n\n      function bytesToString(bytes) {\n        assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n        var length = bytes.length;\n        var MAX_ARGUMENT_COUNT = 8192;\n\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n\n        var strBuf = [];\n\n        for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          var chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function stringToBytes(str) {\n        assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n        var length = str.length;\n        var bytes = new Uint8Array(length);\n\n        for (var i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n\n        return bytes;\n      }\n\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n\n        assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n        return arr.byteLength;\n      }\n\n      function arraysToBytes(arr) {\n        var length = arr.length;\n\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n\n        var resultLength = 0;\n\n        for (var i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n\n        var pos = 0;\n        var data = new Uint8Array(resultLength);\n\n        for (var _i = 0; _i < length; _i++) {\n          var item = arr[_i];\n\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n\n          var itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n\n        return data;\n      }\n\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n\n      function isLittleEndian() {\n        var buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n\n      var IsLittleEndianCached = {\n        get value() {\n          return shadow(this, \"value\", isLittleEndian());\n        }\n\n      };\n      exports.IsLittleEndianCached = IsLittleEndianCached;\n\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      var IsEvalSupportedCached = {\n        get value() {\n          return shadow(this, \"value\", isEvalSupported());\n        }\n\n      };\n      exports.IsEvalSupportedCached = IsEvalSupportedCached;\n      var rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\n      var Util = /*#__PURE__*/function () {\n        function Util() {\n          _classCallCheck(this, Util);\n        }\n\n        _createClass(Util, null, [{\n          key: \"makeCssRgb\",\n          value: function makeCssRgb(r, g, b) {\n            rgbBuf[1] = r;\n            rgbBuf[3] = g;\n            rgbBuf[5] = b;\n            return rgbBuf.join(\"\");\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n        }, {\n          key: \"applyTransform\",\n          value: function applyTransform(p, m) {\n            var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n        }, {\n          key: \"applyInverseTransform\",\n          value: function applyInverseTransform(p, m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n        }, {\n          key: \"getAxialAlignedBoundingBox\",\n          value: function getAxialAlignedBoundingBox(r, m) {\n            var p1 = Util.applyTransform(r, m);\n            var p2 = Util.applyTransform(r.slice(2, 4), m);\n            var p3 = Util.applyTransform([r[0], r[3]], m);\n            var p4 = Util.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n        }, {\n          key: \"inverseTransform\",\n          value: function inverseTransform(m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n        }, {\n          key: \"apply3dTransform\",\n          value: function apply3dTransform(m, v) {\n            return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n          }\n        }, {\n          key: \"singularValueDecompose2dScale\",\n          value: function singularValueDecompose2dScale(m) {\n            var transpose = [m[0], m[2], m[1], m[3]];\n            var a = m[0] * transpose[0] + m[1] * transpose[2];\n            var b = m[0] * transpose[1] + m[1] * transpose[3];\n            var c = m[2] * transpose[0] + m[3] * transpose[2];\n            var d = m[2] * transpose[1] + m[3] * transpose[3];\n            var first = (a + d) / 2;\n            var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n            var sx = first + second || 1;\n            var sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n        }, {\n          key: \"normalizeRect\",\n          value: function normalizeRect(rect) {\n            var r = rect.slice(0);\n\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n\n            return r;\n          }\n        }, {\n          key: \"intersect\",\n          value: function intersect(rect1, rect2) {\n            function compare(a, b) {\n              return a - b;\n            }\n\n            var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n            var orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n            var result = [];\n            rect1 = Util.normalizeRect(rect1);\n            rect2 = Util.normalizeRect(rect2);\n\n            if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n              result[0] = orderedX[1];\n              result[2] = orderedX[2];\n            } else {\n              return null;\n            }\n\n            if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n              result[1] = orderedY[1];\n              result[3] = orderedY[2];\n            } else {\n              return null;\n            }\n\n            return result;\n          }\n        }]);\n\n        return Util;\n      }();\n\n      exports.Util = Util;\n      var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\n      function stringToPDFString(str) {\n        var length = str.length,\n            strBuf = [];\n\n        if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n          for (var i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n          }\n        } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n          for (var _i2 = 2; _i2 < length; _i2 += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(_i2 + 1) << 8 | str.charCodeAt(_i2)));\n          }\n        } else {\n          for (var _i3 = 0; _i3 < length; ++_i3) {\n            var code = PDFStringTranslateTable[str.charCodeAt(_i3)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(_i3));\n          }\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n\n      function isEmptyObj(obj) {\n        for (var key in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isBool(v) {\n        return typeof v === \"boolean\";\n      }\n\n      function isNum(v) {\n        return typeof v === \"number\";\n      }\n\n      function isString(v) {\n        return typeof v === \"string\";\n      }\n\n      function isArrayBuffer(v) {\n        return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n\n        return arr1.every(function (element, index) {\n          return element === arr2[index];\n        });\n      }\n\n      function createPromiseCapability() {\n        var capability = Object.create(null);\n        var isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get: function get() {\n            return isSettled;\n          }\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n\n      var createObjectURL = function createObjectURLClosure() {\n        var digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        return function createObjectURL(data, contentType) {\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          if (!forceDataSchema && URL.createObjectURL) {\n            var blob = new Blob([data], {\n              type: contentType\n            });\n            return URL.createObjectURL(blob);\n          }\n\n          var buffer = \"data:\".concat(contentType, \";base64,\");\n\n          for (var i = 0, ii = data.length; i < ii; i += 3) {\n            var b1 = data[i] & 0xff;\n            var b2 = data[i + 1] & 0xff;\n            var b3 = data[i + 2] & 0xff;\n            var d1 = b1 >> 2,\n                d2 = (b1 & 3) << 4 | b2 >> 4;\n            var d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            var d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n\n          return buffer;\n        };\n      }();\n\n      exports.createObjectURL = createObjectURL;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      ;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      var isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !process.versions.electron;\n      exports.isNodeJS = isNodeJS;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getDocument = getDocument;\n      exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n      exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _font_loader = __w_pdfjs_require__(6);\n\n      var _api_compatibility = __w_pdfjs_require__(7);\n\n      var _canvas = __w_pdfjs_require__(8);\n\n      var _worker_options = __w_pdfjs_require__(10);\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      var _message_handler = __w_pdfjs_require__(11);\n\n      var _metadata = __w_pdfjs_require__(12);\n\n      var _transport_stream = __w_pdfjs_require__(14);\n\n      var _webgl = __w_pdfjs_require__(15);\n\n      var DEFAULT_RANGE_CHUNK_SIZE = 65536;\n      var RENDERING_CANCELLED_TIMEOUT = 100;\n      var createPDFNetworkStream;\n\n      function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n        createPDFNetworkStream = pdfNetworkStreamFactory;\n      }\n\n      function getDocument(src) {\n        var task = new PDFDocumentLoadingTask();\n        var source;\n\n        if (typeof src === \"string\") {\n          source = {\n            url: src\n          };\n        } else if ((0, _util.isArrayBuffer)(src)) {\n          source = {\n            data: src\n          };\n        } else if (src instanceof PDFDataRangeTransport) {\n          source = {\n            range: src\n          };\n        } else {\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n          }\n\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n\n          source = src;\n        }\n\n        var params = Object.create(null);\n        var rangeTransport = null,\n            worker = null;\n\n        for (var key in source) {\n          if (key === \"url\" && typeof window !== \"undefined\") {\n            params[key] = new URL(source[key], window.location).href;\n            continue;\n          } else if (key === \"range\") {\n            rangeTransport = source[key];\n            continue;\n          } else if (key === \"worker\") {\n            worker = source[key];\n            continue;\n          } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n            var pdfBytes = source[key];\n\n            if (typeof pdfBytes === \"string\") {\n              params[key] = (0, _util.stringToBytes)(pdfBytes);\n            } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else {\n              throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n            }\n\n            continue;\n          }\n\n          params[key] = source[key];\n        }\n\n        params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n        params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n        params.ignoreErrors = params.stopAtErrors !== true;\n        params.fontExtraProperties = params.fontExtraProperties === true;\n        params.pdfBug = params.pdfBug === true;\n\n        if (!Number.isInteger(params.maxImageSize)) {\n          params.maxImageSize = -1;\n        }\n\n        if (typeof params.isEvalSupported !== \"boolean\") {\n          params.isEvalSupported = true;\n        }\n\n        if (typeof params.disableFontFace !== \"boolean\") {\n          params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n        }\n\n        if (typeof params.disableRange !== \"boolean\") {\n          params.disableRange = false;\n        }\n\n        if (typeof params.disableStream !== \"boolean\") {\n          params.disableStream = false;\n        }\n\n        if (typeof params.disableAutoFetch !== \"boolean\") {\n          params.disableAutoFetch = false;\n        }\n\n        (0, _util.setVerbosityLevel)(params.verbosity);\n\n        if (!worker) {\n          var workerParams = {\n            verbosity: params.verbosity,\n            port: _worker_options.GlobalWorkerOptions.workerPort\n          };\n          worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n          task._worker = worker;\n        }\n\n        var docId = task.docId;\n        worker.promise.then(function () {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          var workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n          var networkStreamPromise = new Promise(function (resolve) {\n            var networkStream;\n\n            if (rangeTransport) {\n              networkStream = new _transport_stream.PDFDataTransportStream({\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              }, rangeTransport);\n            } else if (!params.data) {\n              networkStream = createPDFNetworkStream({\n                url: params.url,\n                length: params.length,\n                httpHeaders: params.httpHeaders,\n                withCredentials: params.withCredentials,\n                rangeChunkSize: params.rangeChunkSize,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              });\n            }\n\n            resolve(networkStream);\n          });\n          return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref9) {\n            var _ref10 = _slicedToArray(_ref9, 2),\n                workerId = _ref10[0],\n                networkStream = _ref10[1];\n\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n\n            var messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n            messageHandler.postMessageTransfers = worker.postMessageTransfers;\n            var transport = new WorkerTransport(messageHandler, task, networkStream, params);\n            task._transport = transport;\n            messageHandler.send(\"Ready\", null);\n          });\n        }).catch(task._capability.reject);\n        return task;\n      }\n\n      function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n        if (worker.destroyed) {\n          return Promise.reject(new Error(\"Worker was destroyed\"));\n        }\n\n        if (pdfDataRangeTransport) {\n          source.length = pdfDataRangeTransport.length;\n          source.initialData = pdfDataRangeTransport.initialData;\n          source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n        }\n\n        return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n          docId: docId,\n          apiVersion: '2.5.207',\n          source: {\n            data: source.data,\n            url: source.url,\n            password: source.password,\n            disableAutoFetch: source.disableAutoFetch,\n            rangeChunkSize: source.rangeChunkSize,\n            length: source.length\n          },\n          maxImageSize: source.maxImageSize,\n          disableFontFace: source.disableFontFace,\n          postMessageTransfers: worker.postMessageTransfers,\n          docBaseUrl: source.docBaseUrl,\n          ignoreErrors: source.ignoreErrors,\n          isEvalSupported: source.isEvalSupported,\n          fontExtraProperties: source.fontExtraProperties\n        }).then(function (workerId) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          return workerId;\n        });\n      }\n\n      var PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n        var nextDocumentId = 0;\n\n        var PDFDocumentLoadingTask = /*#__PURE__*/function () {\n          function PDFDocumentLoadingTask() {\n            _classCallCheck(this, PDFDocumentLoadingTask);\n\n            this._capability = (0, _util.createPromiseCapability)();\n            this._transport = null;\n            this._worker = null;\n            this.docId = \"d\" + nextDocumentId++;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n            this.onUnsupportedFeature = null;\n          }\n\n          _createClass(PDFDocumentLoadingTask, [{\n            key: \"promise\",\n            get: function get() {\n              return this._capability.promise;\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              var _this6 = this;\n\n              this.destroyed = true;\n              var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n              return transportDestroyed.then(function () {\n                _this6._transport = null;\n\n                if (_this6._worker) {\n                  _this6._worker.destroy();\n\n                  _this6._worker = null;\n                }\n              });\n            }\n          }]);\n\n          return PDFDocumentLoadingTask;\n        }();\n\n        return PDFDocumentLoadingTask;\n      }();\n\n      var PDFDataRangeTransport = /*#__PURE__*/function () {\n        function PDFDataRangeTransport(length, initialData) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          _classCallCheck(this, PDFDataRangeTransport);\n\n          this.length = length;\n          this.initialData = initialData;\n          this.progressiveDone = progressiveDone;\n          this._rangeListeners = [];\n          this._progressListeners = [];\n          this._progressiveReadListeners = [];\n          this._progressiveDoneListeners = [];\n          this._readyCapability = (0, _util.createPromiseCapability)();\n        }\n\n        _createClass(PDFDataRangeTransport, [{\n          key: \"addRangeListener\",\n          value: function addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressListener\",\n          value: function addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveReadListener\",\n          value: function addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveDoneListener\",\n          value: function addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n        }, {\n          key: \"onDataRange\",\n          value: function onDataRange(begin, chunk) {\n            var _iterator3 = _createForOfIteratorHelper(this._rangeListeners),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var listener = _step3.value;\n                listener(begin, chunk);\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }, {\n          key: \"onDataProgress\",\n          value: function onDataProgress(loaded, total) {\n            var _this7 = this;\n\n            this._readyCapability.promise.then(function () {\n              var _iterator4 = _createForOfIteratorHelper(_this7._progressListeners),\n                  _step4;\n\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var listener = _step4.value;\n                  listener(loaded, total);\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveRead\",\n          value: function onDataProgressiveRead(chunk) {\n            var _this8 = this;\n\n            this._readyCapability.promise.then(function () {\n              var _iterator5 = _createForOfIteratorHelper(_this8._progressiveReadListeners),\n                  _step5;\n\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var listener = _step5.value;\n                  listener(chunk);\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveDone\",\n          value: function onDataProgressiveDone() {\n            var _this9 = this;\n\n            this._readyCapability.promise.then(function () {\n              var _iterator6 = _createForOfIteratorHelper(_this9._progressiveDoneListeners),\n                  _step6;\n\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  var listener = _step6.value;\n                  listener();\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n            });\n          }\n        }, {\n          key: \"transportReady\",\n          value: function transportReady() {\n            this._readyCapability.resolve();\n          }\n        }, {\n          key: \"requestDataRange\",\n          value: function requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n        }, {\n          key: \"abort\",\n          value: function abort() {}\n        }]);\n\n        return PDFDataRangeTransport;\n      }();\n\n      exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n      var PDFDocumentProxy = /*#__PURE__*/function () {\n        function PDFDocumentProxy(pdfInfo, transport) {\n          _classCallCheck(this, PDFDocumentProxy);\n\n          this._pdfInfo = pdfInfo;\n          this._transport = transport;\n        }\n\n        _createClass(PDFDocumentProxy, [{\n          key: \"numPages\",\n          get: function get() {\n            return this._pdfInfo.numPages;\n          }\n        }, {\n          key: \"fingerprint\",\n          get: function get() {\n            return this._pdfInfo.fingerprint;\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this._transport.getDestinations();\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this._transport.getPageMode();\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n        }, {\n          key: \"getOpenActionDestination\",\n          value: function getOpenActionDestination() {\n            (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n            return this.getOpenAction().then(function (openAction) {\n              return openAction && openAction.dest ? openAction.dest : null;\n            });\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this._transport.getAttachments();\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this._transport.getJavaScript();\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this._transport.getOutline();\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this._transport.getPermissions();\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            return this._transport.getMetadata();\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this._transport.getData();\n          }\n        }, {\n          key: \"getDownloadInfo\",\n          value: function getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n        }, {\n          key: \"getStats\",\n          value: function getStats() {\n            return this._transport.getStats();\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            return this._transport.startCleanup();\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            return this.loadingTask.destroy();\n          }\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            return this._transport.loadingParams;\n          }\n        }, {\n          key: \"loadingTask\",\n          get: function get() {\n            return this._transport.loadingTask;\n          }\n        }]);\n\n        return PDFDocumentProxy;\n      }();\n\n      exports.PDFDocumentProxy = PDFDocumentProxy;\n\n      var PDFPageProxy = /*#__PURE__*/function () {\n        function PDFPageProxy(pageIndex, pageInfo, transport) {\n          var pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n          _classCallCheck(this, PDFPageProxy);\n\n          this._pageIndex = pageIndex;\n          this._pageInfo = pageInfo;\n          this._transport = transport;\n          this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n          this._pdfBug = pdfBug;\n          this.commonObjs = transport.commonObjs;\n          this.objs = new PDFObjects();\n          this.cleanupAfterRender = false;\n          this.pendingCleanup = false;\n          this.intentStates = Object.create(null);\n          this.destroyed = false;\n        }\n\n        _createClass(PDFPageProxy, [{\n          key: \"pageNumber\",\n          get: function get() {\n            return this._pageIndex + 1;\n          }\n        }, {\n          key: \"rotate\",\n          get: function get() {\n            return this._pageInfo.rotate;\n          }\n        }, {\n          key: \"ref\",\n          get: function get() {\n            return this._pageInfo.ref;\n          }\n        }, {\n          key: \"userUnit\",\n          get: function get() {\n            return this._pageInfo.userUnit;\n          }\n        }, {\n          key: \"view\",\n          get: function get() {\n            return this._pageInfo.view;\n          }\n        }, {\n          key: \"getViewport\",\n          value: function getViewport() {\n            var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                scale = _ref11.scale,\n                _ref11$rotation = _ref11.rotation,\n                rotation = _ref11$rotation === void 0 ? this.rotate : _ref11$rotation,\n                _ref11$offsetX = _ref11.offsetX,\n                offsetX = _ref11$offsetX === void 0 ? 0 : _ref11$offsetX,\n                _ref11$offsetY = _ref11.offsetY,\n                offsetY = _ref11$offsetY === void 0 ? 0 : _ref11$offsetY,\n                _ref11$dontFlip = _ref11.dontFlip,\n                dontFlip = _ref11$dontFlip === void 0 ? false : _ref11$dontFlip;\n\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations() {\n            var _ref12 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref12$intent = _ref12.intent,\n                intent = _ref12$intent === void 0 ? null : _ref12$intent;\n\n            if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n              this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n              this.annotationsIntent = intent;\n            }\n\n            return this.annotationsPromise;\n          }\n        }, {\n          key: \"render\",\n          value: function render(_ref13) {\n            var _this10 = this;\n\n            var canvasContext = _ref13.canvasContext,\n                viewport = _ref13.viewport,\n                _ref13$intent = _ref13.intent,\n                intent = _ref13$intent === void 0 ? \"display\" : _ref13$intent,\n                _ref13$enableWebGL = _ref13.enableWebGL,\n                enableWebGL = _ref13$enableWebGL === void 0 ? false : _ref13$enableWebGL,\n                _ref13$renderInteract = _ref13.renderInteractiveForms,\n                renderInteractiveForms = _ref13$renderInteract === void 0 ? false : _ref13$renderInteract,\n                _ref13$transform = _ref13.transform,\n                transform = _ref13$transform === void 0 ? null : _ref13$transform,\n                _ref13$imageLayer = _ref13.imageLayer,\n                imageLayer = _ref13$imageLayer === void 0 ? null : _ref13$imageLayer,\n                _ref13$canvasFactory = _ref13.canvasFactory,\n                canvasFactory = _ref13$canvasFactory === void 0 ? null : _ref13$canvasFactory,\n                _ref13$background = _ref13.background,\n                background = _ref13$background === void 0 ? null : _ref13$background;\n\n            if (this._stats) {\n              this._stats.time(\"Overall\");\n            }\n\n            var renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n            this.pendingCleanup = false;\n\n            if (!this.intentStates[renderingIntent]) {\n              this.intentStates[renderingIntent] = Object.create(null);\n            }\n\n            var intentState = this.intentStates[renderingIntent];\n\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n\n            var canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n            var webGLContext = new _webgl.WebGLContext({\n              enable: enableWebGL\n            });\n\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n\n              this._pumpOperatorList({\n                pageIndex: this._pageIndex,\n                intent: renderingIntent,\n                renderInteractiveForms: renderInteractiveForms === true\n              });\n            }\n\n            var complete = function complete(error) {\n              var i = intentState.renderTasks.indexOf(internalRenderTask);\n\n              if (i >= 0) {\n                intentState.renderTasks.splice(i, 1);\n              }\n\n              if (_this10.cleanupAfterRender || renderingIntent === \"print\") {\n                _this10.pendingCleanup = true;\n              }\n\n              _this10._tryCleanup();\n\n              if (error) {\n                internalRenderTask.capability.reject(error);\n\n                _this10._abortOperatorList({\n                  intentState: intentState,\n                  reason: error\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n\n              if (_this10._stats) {\n                _this10._stats.timeEnd(\"Rendering\");\n\n                _this10._stats.timeEnd(\"Overall\");\n              }\n            };\n\n            var internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext: canvasContext,\n                viewport: viewport,\n                transform: transform,\n                imageLayer: imageLayer,\n                background: background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: canvasFactoryInstance,\n              webGLContext: webGLContext,\n              useRequestAnimationFrame: renderingIntent !== \"print\",\n              pdfBug: this._pdfBug\n            });\n\n            if (!intentState.renderTasks) {\n              intentState.renderTasks = [];\n            }\n\n            intentState.renderTasks.push(internalRenderTask);\n            var renderTask = internalRenderTask.task;\n            intentState.displayReadyCapability.promise.then(function (transparency) {\n              if (_this10.pendingCleanup) {\n                complete();\n                return;\n              }\n\n              if (_this10._stats) {\n                _this10._stats.time(\"Rendering\");\n              }\n\n              internalRenderTask.initializeGraphics(transparency);\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList() {\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                var i = intentState.renderTasks.indexOf(opListTask);\n\n                if (i >= 0) {\n                  intentState.renderTasks.splice(i, 1);\n                }\n              }\n            }\n\n            var renderingIntent = \"oplist\";\n\n            if (!this.intentStates[renderingIntent]) {\n              this.intentStates[renderingIntent] = Object.create(null);\n            }\n\n            var intentState = this.intentStates[renderingIntent];\n            var opListTask;\n\n            if (!intentState.opListReadCapability) {\n              opListTask = {};\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n              intentState.renderTasks = [];\n              intentState.renderTasks.push(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n\n              this._pumpOperatorList({\n                pageIndex: this._pageIndex,\n                intent: renderingIntent\n              });\n            }\n\n            return intentState.opListReadCapability.promise;\n          }\n        }, {\n          key: \"streamTextContent\",\n          value: function streamTextContent() {\n            var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref14$normalizeWhite = _ref14.normalizeWhitespace,\n                normalizeWhitespace = _ref14$normalizeWhite === void 0 ? false : _ref14$normalizeWhite,\n                _ref14$disableCombine = _ref14.disableCombineTextItems,\n                disableCombineTextItems = _ref14$disableCombine === void 0 ? false : _ref14$disableCombine;\n\n            var TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              normalizeWhitespace: normalizeWhitespace === true,\n              combineTextItems: disableCombineTextItems !== true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n              size: function size(textContent) {\n                return textContent.items.length;\n              }\n            });\n          }\n        }, {\n          key: \"getTextContent\",\n          value: function getTextContent() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref15) {\n                  var _textContent$items;\n\n                  var value = _ref15.value,\n                      done = _ref15.done;\n\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n\n                  Object.assign(textContent.styles, value.styles);\n\n                  (_textContent$items = textContent.items).push.apply(_textContent$items, _toConsumableArray(value.items));\n\n                  pump();\n                }, reject);\n              }\n\n              var reader = readableStream.getReader();\n              var textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n        }, {\n          key: \"_destroy\",\n          value: function _destroy() {\n            var _this11 = this;\n\n            this.destroyed = true;\n            this._transport.pageCache[this._pageIndex] = null;\n            var waitOn = [];\n            Object.keys(this.intentStates).forEach(function (intent) {\n              var intentState = _this11.intentStates[intent];\n\n              _this11._abortOperatorList({\n                intentState: intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n\n              if (intent === \"oplist\") {\n                return;\n              }\n\n              intentState.renderTasks.forEach(function (renderTask) {\n                var renderCompleted = renderTask.capability.promise.catch(function () {});\n                waitOn.push(renderCompleted);\n                renderTask.cancel();\n              });\n            });\n            this.objs.clear();\n            this.annotationsPromise = null;\n            this.pendingCleanup = false;\n            return Promise.all(waitOn);\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.pendingCleanup = true;\n            return this._tryCleanup(resetStats);\n          }\n        }, {\n          key: \"_tryCleanup\",\n          value: function _tryCleanup() {\n            var _this12 = this;\n\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.pendingCleanup || Object.keys(this.intentStates).some(function (intent) {\n              var intentState = _this12.intentStates[intent];\n              return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n            })) {\n              return false;\n            }\n\n            Object.keys(this.intentStates).forEach(function (intent) {\n              delete _this12.intentStates[intent];\n            });\n            this.objs.clear();\n            this.annotationsPromise = null;\n\n            if (resetStats && this._stats) {\n              this._stats = new _display_utils.StatTimer();\n            }\n\n            this.pendingCleanup = false;\n            return true;\n          }\n        }, {\n          key: \"_startRenderPage\",\n          value: function _startRenderPage(transparency, intent) {\n            var intentState = this.intentStates[intent];\n\n            if (!intentState) {\n              return;\n            }\n\n            if (this._stats) {\n              this._stats.timeEnd(\"Page Request\");\n            }\n\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.resolve(transparency);\n            }\n          }\n        }, {\n          key: \"_renderPageChunk\",\n          value: function _renderPageChunk(operatorListChunk, intentState) {\n            for (var i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n            for (var _i4 = 0; _i4 < intentState.renderTasks.length; _i4++) {\n              intentState.renderTasks[_i4].operatorListChanged();\n            }\n\n            if (operatorListChunk.lastChunk) {\n              this._tryCleanup();\n            }\n          }\n        }, {\n          key: \"_pumpOperatorList\",\n          value: function _pumpOperatorList(args) {\n            var _this13 = this;\n\n            (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n            var readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n            var reader = readableStream.getReader();\n            var intentState = this.intentStates[args.intent];\n            intentState.streamReader = reader;\n\n            var pump = function pump() {\n              reader.read().then(function (_ref16) {\n                var value = _ref16.value,\n                    done = _ref16.done;\n\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n\n                if (_this13._transport.destroyed) {\n                  return;\n                }\n\n                _this13._renderPageChunk(value, intentState);\n\n                pump();\n              }, function (reason) {\n                intentState.streamReader = null;\n\n                if (_this13._transport.destroyed) {\n                  return;\n                }\n\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n\n                  for (var i = 0; i < intentState.renderTasks.length; i++) {\n                    intentState.renderTasks[i].operatorListChanged();\n                  }\n\n                  _this13._tryCleanup();\n                }\n\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n\n            pump();\n          }\n        }, {\n          key: \"_abortOperatorList\",\n          value: function _abortOperatorList(_ref17) {\n            var _this14 = this;\n\n            var intentState = _ref17.intentState,\n                reason = _ref17.reason,\n                _ref17$force = _ref17.force,\n                force = _ref17$force === void 0 ? false : _ref17$force;\n            (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n            if (!intentState.streamReader) {\n              return;\n            }\n\n            if (!force) {\n              if (intentState.renderTasks.length !== 0) {\n                return;\n              }\n\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                intentState.streamReaderCancelTimeout = setTimeout(function () {\n                  _this14._abortOperatorList({\n                    intentState: intentState,\n                    reason: reason,\n                    force: true\n                  });\n\n                  intentState.streamReaderCancelTimeout = null;\n                }, RENDERING_CANCELLED_TIMEOUT);\n                return;\n              }\n            }\n\n            intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n            intentState.streamReader = null;\n\n            if (this._transport.destroyed) {\n              return;\n            }\n\n            Object.keys(this.intentStates).some(function (intent) {\n              if (_this14.intentStates[intent] === intentState) {\n                delete _this14.intentStates[intent];\n                return true;\n              }\n\n              return false;\n            });\n            this.cleanup();\n          }\n        }, {\n          key: \"stats\",\n          get: function get() {\n            return this._stats;\n          }\n        }]);\n\n        return PDFPageProxy;\n      }();\n\n      exports.PDFPageProxy = PDFPageProxy;\n\n      var LoopbackPort = /*#__PURE__*/function () {\n        function LoopbackPort() {\n          var defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n          _classCallCheck(this, LoopbackPort);\n\n          this._listeners = [];\n          this._defer = defer;\n          this._deferred = Promise.resolve(undefined);\n        }\n\n        _createClass(LoopbackPort, [{\n          key: \"postMessage\",\n          value: function postMessage(obj, transfers) {\n            var _this15 = this;\n\n            function cloneValue(value) {\n              if (typeof value !== \"object\" || value === null) {\n                return value;\n              }\n\n              if (cloned.has(value)) {\n                return cloned.get(value);\n              }\n\n              var buffer, result;\n\n              if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n                var transferable = transfers && transfers.includes(buffer);\n\n                if (transferable) {\n                  result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n                } else {\n                  result = new value.constructor(value);\n                }\n\n                cloned.set(value, result);\n                return result;\n              }\n\n              result = Array.isArray(value) ? [] : {};\n              cloned.set(value, result);\n\n              for (var i in value) {\n                var desc = void 0,\n                    p = value;\n\n                while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n                  p = Object.getPrototypeOf(p);\n                }\n\n                if (typeof desc.value === \"undefined\") {\n                  continue;\n                }\n\n                if (typeof desc.value === \"function\") {\n                  if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                    throw new Error(\"LoopbackPort.postMessage - cannot clone: \".concat(value[i]));\n                  }\n\n                  continue;\n                }\n\n                result[i] = cloneValue(desc.value);\n              }\n\n              return result;\n            }\n\n            if (!this._defer) {\n              this._listeners.forEach(function (listener) {\n                listener.call(_this15, {\n                  data: obj\n                });\n              });\n\n              return;\n            }\n\n            var cloned = new WeakMap();\n            var e = {\n              data: cloneValue(obj)\n            };\n\n            this._deferred.then(function () {\n              _this15._listeners.forEach(function (listener) {\n                listener.call(_this15, e);\n              });\n            });\n          }\n        }, {\n          key: \"addEventListener\",\n          value: function addEventListener(name, listener) {\n            this._listeners.push(listener);\n          }\n        }, {\n          key: \"removeEventListener\",\n          value: function removeEventListener(name, listener) {\n            var i = this._listeners.indexOf(listener);\n\n            this._listeners.splice(i, 1);\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate() {\n            this._listeners.length = 0;\n          }\n        }]);\n\n        return LoopbackPort;\n      }();\n\n      exports.LoopbackPort = LoopbackPort;\n\n      var PDFWorker = function PDFWorkerClosure() {\n        var pdfWorkerPorts = new WeakMap();\n        var isWorkerDisabled = false;\n        var fallbackWorkerSrc;\n        var nextFakeWorkerId = 0;\n        var fakeWorkerCapability;\n\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          isWorkerDisabled = true;\n          fallbackWorkerSrc = \"./pdf.worker.js\";\n        } else if (typeof document === \"object\" && \"currentScript\" in document) {\n          var pdfjsFilePath = document.currentScript && document.currentScript.src;\n\n          if (pdfjsFilePath) {\n            fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n          }\n        }\n\n        function _getWorkerSrc() {\n          if (_worker_options.GlobalWorkerOptions.workerSrc) {\n            return _worker_options.GlobalWorkerOptions.workerSrc;\n          }\n\n          if (typeof fallbackWorkerSrc !== \"undefined\") {\n            if (!_is_node.isNodeJS) {\n              (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n            }\n\n            return fallbackWorkerSrc;\n          }\n\n          throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n\n        function getMainThreadWorkerMessageHandler() {\n          var mainWorkerMessageHandler;\n\n          try {\n            mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n          } catch (ex) {}\n\n          return mainWorkerMessageHandler || null;\n        }\n\n        function setupFakeWorkerGlobal() {\n          if (fakeWorkerCapability) {\n            return fakeWorkerCapability.promise;\n          }\n\n          fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n          var loader = /*#__PURE__*/function () {\n            var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n              var mainWorkerMessageHandler, worker;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n                      if (!mainWorkerMessageHandler) {\n                        _context3.next = 3;\n                        break;\n                      }\n\n                      return _context3.abrupt(\"return\", mainWorkerMessageHandler);\n\n                    case 3:\n                      if (!(_is_node.isNodeJS && typeof require === \"function\")) {\n                        _context3.next = 6;\n                        break;\n                      }\n\n                      worker = eval(\"require\")(_getWorkerSrc());\n                      return _context3.abrupt(\"return\", worker.WorkerMessageHandler);\n\n                    case 6:\n                      _context3.next = 8;\n                      return (0, _display_utils.loadScript)(_getWorkerSrc());\n\n                    case 8:\n                      return _context3.abrupt(\"return\", window.pdfjsWorker.WorkerMessageHandler);\n\n                    case 9:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            return function loader() {\n              return _ref18.apply(this, arguments);\n            };\n          }();\n\n          loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n          return fakeWorkerCapability.promise;\n        }\n\n        function createCDNWrapper(url) {\n          var wrapper = \"importScripts('\" + url + \"');\";\n          return URL.createObjectURL(new Blob([wrapper]));\n        }\n\n        var PDFWorker = /*#__PURE__*/function () {\n          function PDFWorker() {\n            var _ref19 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref19$name = _ref19.name,\n                name = _ref19$name === void 0 ? null : _ref19$name,\n                _ref19$port = _ref19.port,\n                port = _ref19$port === void 0 ? null : _ref19$port,\n                _ref19$verbosity = _ref19.verbosity,\n                verbosity = _ref19$verbosity === void 0 ? (0, _util.getVerbosityLevel)() : _ref19$verbosity;\n\n            _classCallCheck(this, PDFWorker);\n\n            if (port && pdfWorkerPorts.has(port)) {\n              throw new Error(\"Cannot use more than one PDFWorker per port\");\n            }\n\n            this.name = name;\n            this.destroyed = false;\n            this.postMessageTransfers = true;\n            this.verbosity = verbosity;\n            this._readyCapability = (0, _util.createPromiseCapability)();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n\n            if (port) {\n              pdfWorkerPorts.set(port, this);\n\n              this._initializeFromPort(port);\n\n              return;\n            }\n\n            this._initialize();\n          }\n\n          _createClass(PDFWorker, [{\n            key: \"promise\",\n            get: function get() {\n              return this._readyCapability.promise;\n            }\n          }, {\n            key: \"port\",\n            get: function get() {\n              return this._port;\n            }\n          }, {\n            key: \"messageHandler\",\n            get: function get() {\n              return this._messageHandler;\n            }\n          }, {\n            key: \"_initializeFromPort\",\n            value: function _initializeFromPort(port) {\n              this._port = port;\n              this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n              this._messageHandler.on(\"ready\", function () {});\n\n              this._readyCapability.resolve();\n            }\n          }, {\n            key: \"_initialize\",\n            value: function _initialize() {\n              var _this16 = this;\n\n              if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n                var workerSrc = _getWorkerSrc();\n\n                try {\n                  if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                    workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n                  }\n\n                  var worker = new Worker(workerSrc);\n                  var messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n                  var terminateEarly = function terminateEarly() {\n                    worker.removeEventListener(\"error\", onWorkerError);\n                    messageHandler.destroy();\n                    worker.terminate();\n\n                    if (_this16.destroyed) {\n                      _this16._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                    } else {\n                      _this16._setupFakeWorker();\n                    }\n                  };\n\n                  var onWorkerError = function onWorkerError() {\n                    if (!_this16._webWorker) {\n                      terminateEarly();\n                    }\n                  };\n\n                  worker.addEventListener(\"error\", onWorkerError);\n                  messageHandler.on(\"test\", function (data) {\n                    worker.removeEventListener(\"error\", onWorkerError);\n\n                    if (_this16.destroyed) {\n                      terminateEarly();\n                      return;\n                    }\n\n                    if (data) {\n                      _this16._messageHandler = messageHandler;\n                      _this16._port = worker;\n                      _this16._webWorker = worker;\n\n                      if (!data.supportTransfers) {\n                        _this16.postMessageTransfers = false;\n                      }\n\n                      _this16._readyCapability.resolve();\n\n                      messageHandler.send(\"configure\", {\n                        verbosity: _this16.verbosity\n                      });\n                    } else {\n                      _this16._setupFakeWorker();\n\n                      messageHandler.destroy();\n                      worker.terminate();\n                    }\n                  });\n                  messageHandler.on(\"ready\", function (data) {\n                    worker.removeEventListener(\"error\", onWorkerError);\n\n                    if (_this16.destroyed) {\n                      terminateEarly();\n                      return;\n                    }\n\n                    try {\n                      sendTest();\n                    } catch (e) {\n                      _this16._setupFakeWorker();\n                    }\n                  });\n\n                  var sendTest = function sendTest() {\n                    var testObj = new Uint8Array([_this16.postMessageTransfers ? 255 : 0]);\n\n                    try {\n                      messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                    } catch (ex) {\n                      (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                      testObj[0] = 0;\n                      messageHandler.send(\"test\", testObj);\n                    }\n                  };\n\n                  sendTest();\n                  return;\n                } catch (e) {\n                  (0, _util.info)(\"The worker has been disabled.\");\n                }\n              }\n\n              this._setupFakeWorker();\n            }\n          }, {\n            key: \"_setupFakeWorker\",\n            value: function _setupFakeWorker() {\n              var _this17 = this;\n\n              if (!isWorkerDisabled) {\n                (0, _util.warn)(\"Setting up fake worker.\");\n                isWorkerDisabled = true;\n              }\n\n              setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {\n                if (_this17.destroyed) {\n                  _this17._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n                  return;\n                }\n\n                var port = new LoopbackPort();\n                _this17._port = port;\n                var id = \"fake\" + nextFakeWorkerId++;\n                var workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n                WorkerMessageHandler.setup(workerHandler, port);\n                var messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n                _this17._messageHandler = messageHandler;\n\n                _this17._readyCapability.resolve();\n\n                messageHandler.send(\"configure\", {\n                  verbosity: _this17.verbosity\n                });\n              }).catch(function (reason) {\n                _this17._readyCapability.reject(new Error(\"Setting up fake worker failed: \\\"\".concat(reason.message, \"\\\".\")));\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.destroyed = true;\n\n              if (this._webWorker) {\n                this._webWorker.terminate();\n\n                this._webWorker = null;\n              }\n\n              pdfWorkerPorts.delete(this._port);\n              this._port = null;\n\n              if (this._messageHandler) {\n                this._messageHandler.destroy();\n\n                this._messageHandler = null;\n              }\n            }\n          }], [{\n            key: \"fromPort\",\n            value: function fromPort(params) {\n              if (!params || !params.port) {\n                throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n              }\n\n              if (pdfWorkerPorts.has(params.port)) {\n                return pdfWorkerPorts.get(params.port);\n              }\n\n              return new PDFWorker(params);\n            }\n          }, {\n            key: \"getWorkerSrc\",\n            value: function getWorkerSrc() {\n              return _getWorkerSrc();\n            }\n          }]);\n\n          return PDFWorker;\n        }();\n\n        return PDFWorker;\n      }();\n\n      exports.PDFWorker = PDFWorker;\n\n      var WorkerTransport = /*#__PURE__*/function () {\n        function WorkerTransport(messageHandler, loadingTask, networkStream, params) {\n          _classCallCheck(this, WorkerTransport);\n\n          this.messageHandler = messageHandler;\n          this.loadingTask = loadingTask;\n          this.commonObjs = new PDFObjects();\n          this.fontLoader = new _font_loader.FontLoader({\n            docId: loadingTask.docId,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n          });\n          this._params = params;\n          this.CMapReaderFactory = new params.CMapReaderFactory({\n            baseUrl: params.cMapUrl,\n            isCompressed: params.cMapPacked\n          });\n          this.destroyed = false;\n          this.destroyCapability = null;\n          this._passwordCapability = null;\n          this._networkStream = networkStream;\n          this._fullReader = null;\n          this._lastProgress = null;\n          this.pageCache = [];\n          this.pagePromises = [];\n          this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n          this.setupMessageHandler();\n        }\n\n        _createClass(WorkerTransport, [{\n          key: \"destroy\",\n          value: function destroy() {\n            var _this18 = this;\n\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n\n            this.destroyed = true;\n            this.destroyCapability = (0, _util.createPromiseCapability)();\n\n            if (this._passwordCapability) {\n              this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            }\n\n            var waitOn = [];\n            this.pageCache.forEach(function (page) {\n              if (page) {\n                waitOn.push(page._destroy());\n              }\n            });\n            this.pageCache.length = 0;\n            this.pagePromises.length = 0;\n            var terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(function () {\n              _this18.fontLoader.clear();\n\n              if (_this18._networkStream) {\n                _this18._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              }\n\n              if (_this18.messageHandler) {\n                _this18.messageHandler.destroy();\n\n                _this18.messageHandler = null;\n              }\n\n              _this18.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n        }, {\n          key: \"setupMessageHandler\",\n          value: function setupMessageHandler() {\n            var _this19 = this;\n\n            var messageHandler = this.messageHandler,\n                loadingTask = this.loadingTask;\n            messageHandler.on(\"GetReader\", function (data, sink) {\n              (0, _util.assert)(_this19._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              _this19._fullReader = _this19._networkStream.getFullReader();\n\n              _this19._fullReader.onProgress = function (evt) {\n                _this19._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n\n              sink.onPull = function () {\n                _this19._fullReader.read().then(function (_ref20) {\n                  var value = _ref20.value,\n                      done = _ref20.done;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = function (reason) {\n                _this19._fullReader.cancel(reason);\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", function (data) {\n              var headersCapability = (0, _util.createPromiseCapability)();\n              var fullReader = _this19._fullReader;\n              fullReader.headersReady.then(function () {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (_this19._lastProgress && loadingTask.onProgress) {\n                    loadingTask.onProgress(_this19._lastProgress);\n                  }\n\n                  fullReader.onProgress = function (evt) {\n                    if (loadingTask.onProgress) {\n                      loadingTask.onProgress({\n                        loaded: evt.loaded,\n                        total: evt.total\n                      });\n                    }\n                  };\n                }\n\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", function (data, sink) {\n              (0, _util.assert)(_this19._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n              var rangeReader = _this19._networkStream.getRangeReader(data.begin, data.end);\n\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n\n              sink.onPull = function () {\n                rangeReader.read().then(function (_ref21) {\n                  var value = _ref21.value,\n                      done = _ref21.done;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = function (reason) {\n                rangeReader.cancel(reason);\n              };\n            });\n            messageHandler.on(\"GetDoc\", function (_ref22) {\n              var pdfInfo = _ref22.pdfInfo;\n              _this19._numPages = pdfInfo.numPages;\n\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, _this19));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              var reason;\n\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n              }\n\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", function (exception) {\n              _this19._passwordCapability = (0, _util.createPromiseCapability)();\n\n              if (loadingTask.onPassword) {\n                var updatePassword = function updatePassword(password) {\n                  _this19._passwordCapability.resolve({\n                    password: password\n                  });\n                };\n\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  _this19._passwordCapability.reject(ex);\n                }\n              } else {\n                _this19._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n\n              return _this19._passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", function (data) {\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: data.length,\n                  total: data.length\n                });\n              }\n\n              _this19.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", function (data) {\n              if (_this19.destroyed) {\n                return;\n              }\n\n              var page = _this19.pageCache[data.pageIndex];\n\n              page._startRenderPage(data.transparency, data.intent);\n            });\n            messageHandler.on(\"commonobj\", function (data) {\n              if (_this19.destroyed) {\n                return;\n              }\n\n              var _data = _slicedToArray(data, 3),\n                  id = _data[0],\n                  type = _data[1],\n                  exportedData = _data[2];\n\n              if (_this19.commonObjs.has(id)) {\n                return;\n              }\n\n              switch (type) {\n                case \"Font\":\n                  var params = _this19._params;\n\n                  if (\"error\" in exportedData) {\n                    var exportedError = exportedData.error;\n                    (0, _util.warn)(\"Error during font loading: \".concat(exportedError));\n\n                    _this19.commonObjs.resolve(id, exportedError);\n\n                    break;\n                  }\n\n                  var fontRegistry = null;\n\n                  if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                    fontRegistry = {\n                      registerFont: function registerFont(font, url) {\n                        globalThis.FontInspector.fontAdded(font, url);\n                      }\n                    };\n                  }\n\n                  var font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    onUnsupportedFeature: _this19._onUnsupportedFeature.bind(_this19),\n                    fontRegistry: fontRegistry\n                  });\n\n                  _this19.fontLoader.bind(font).catch(function (reason) {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id: id\n                    });\n                  }).finally(function () {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n\n                    _this19.commonObjs.resolve(id, font);\n                  });\n\n                  break;\n\n                case \"FontPath\":\n                case \"FontType3Res\":\n                case \"Image\":\n                  _this19.commonObjs.resolve(id, exportedData);\n\n                  break;\n\n                default:\n                  throw new Error(\"Got unknown common object type \".concat(type));\n              }\n            });\n            messageHandler.on(\"obj\", function (data) {\n              if (_this19.destroyed) {\n                return undefined;\n              }\n\n              var _data2 = _slicedToArray(data, 4),\n                  id = _data2[0],\n                  pageIndex = _data2[1],\n                  type = _data2[2],\n                  imageData = _data2[3];\n\n              var pageProxy = _this19.pageCache[pageIndex];\n\n              if (pageProxy.objs.has(id)) {\n                return undefined;\n              }\n\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n                  if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                    pageProxy.cleanupAfterRender = true;\n                  }\n\n                  break;\n\n                default:\n                  throw new Error(\"Got unknown object type \".concat(type));\n              }\n\n              return undefined;\n            });\n            messageHandler.on(\"DocProgress\", function (data) {\n              if (_this19.destroyed) {\n                return;\n              }\n\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: data.loaded,\n                  total: data.total\n                });\n              }\n            });\n            messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n            messageHandler.on(\"FetchBuiltInCMap\", function (data, sink) {\n              if (_this19.destroyed) {\n                sink.error(new Error(\"Worker was destroyed\"));\n                return;\n              }\n\n              var fetched = false;\n\n              sink.onPull = function () {\n                if (fetched) {\n                  sink.close();\n                  return;\n                }\n\n                fetched = true;\n\n                _this19.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n                  sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n            });\n          }\n        }, {\n          key: \"_onUnsupportedFeature\",\n          value: function _onUnsupportedFeature(_ref23) {\n            var featureId = _ref23.featureId;\n\n            if (this.destroyed) {\n              return;\n            }\n\n            if (this.loadingTask.onUnsupportedFeature) {\n              this.loadingTask.onUnsupportedFeature(featureId);\n            }\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            var _this20 = this;\n\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request\"));\n            }\n\n            var pageIndex = pageNumber - 1;\n\n            if (pageIndex in this.pagePromises) {\n              return this.pagePromises[pageIndex];\n            }\n\n            var promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex: pageIndex\n            }).then(function (pageInfo) {\n              if (_this20.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n\n              var page = new PDFPageProxy(pageIndex, pageInfo, _this20, _this20._params.pdfBug);\n              _this20.pageCache[pageIndex] = page;\n              return page;\n            });\n            this.pagePromises[pageIndex] = promise;\n            return promise;\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              ref: ref\n            }).catch(function (reason) {\n              return Promise.reject(new Error(reason));\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex: pageIndex,\n              intent: intent\n            });\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id: id\n            });\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            var _this21 = this;\n\n            return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(function (results) {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: _this21._fullReader ? _this21._fullReader.filename : null\n              };\n            });\n          }\n        }, {\n          key: \"getStats\",\n          value: function getStats() {\n            return this.messageHandler.sendWithPromise(\"GetStats\", null);\n          }\n        }, {\n          key: \"startCleanup\",\n          value: function startCleanup() {\n            var _this22 = this;\n\n            return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(function () {\n              for (var i = 0, ii = _this22.pageCache.length; i < ii; i++) {\n                var page = _this22.pageCache[i];\n\n                if (page) {\n                  var cleanupSuccessful = page.cleanup();\n\n                  if (!cleanupSuccessful) {\n                    throw new Error(\"startCleanup: Page \".concat(i + 1, \" is currently rendering.\"));\n                  }\n                }\n              }\n\n              _this22.commonObjs.clear();\n\n              _this22.fontLoader.clear();\n            });\n          }\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            var params = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch: params.disableAutoFetch,\n              disableFontFace: params.disableFontFace\n            });\n          }\n        }]);\n\n        return WorkerTransport;\n      }();\n\n      var PDFObjects = /*#__PURE__*/function () {\n        function PDFObjects() {\n          _classCallCheck(this, PDFObjects);\n\n          this._objs = Object.create(null);\n        }\n\n        _createClass(PDFObjects, [{\n          key: \"_ensureObj\",\n          value: function _ensureObj(objId) {\n            if (this._objs[objId]) {\n              return this._objs[objId];\n            }\n\n            return this._objs[objId] = {\n              capability: (0, _util.createPromiseCapability)(),\n              data: null,\n              resolved: false\n            };\n          }\n        }, {\n          key: \"get\",\n          value: function get(objId) {\n            var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (callback) {\n              this._ensureObj(objId).capability.promise.then(callback);\n\n              return null;\n            }\n\n            var obj = this._objs[objId];\n\n            if (!obj || !obj.resolved) {\n              throw new Error(\"Requesting object that isn't resolved yet \".concat(objId, \".\"));\n            }\n\n            return obj.data;\n          }\n        }, {\n          key: \"has\",\n          value: function has(objId) {\n            var obj = this._objs[objId];\n            return obj ? obj.resolved : false;\n          }\n        }, {\n          key: \"resolve\",\n          value: function resolve(objId, data) {\n            var obj = this._ensureObj(objId);\n\n            obj.resolved = true;\n            obj.data = data;\n            obj.capability.resolve(data);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this._objs = Object.create(null);\n          }\n        }]);\n\n        return PDFObjects;\n      }();\n\n      var RenderTask = /*#__PURE__*/function () {\n        function RenderTask(internalRenderTask) {\n          _classCallCheck(this, RenderTask);\n\n          this._internalRenderTask = internalRenderTask;\n          this.onContinue = null;\n        }\n\n        _createClass(RenderTask, [{\n          key: \"promise\",\n          get: function get() {\n            return this._internalRenderTask.capability.promise;\n          }\n        }, {\n          key: \"cancel\",\n          value: function cancel() {\n            this._internalRenderTask.cancel();\n          }\n        }]);\n\n        return RenderTask;\n      }();\n\n      var InternalRenderTask = function InternalRenderTaskClosure() {\n        var canvasInRendering = new WeakSet();\n\n        var InternalRenderTask = /*#__PURE__*/function () {\n          function InternalRenderTask(_ref24) {\n            var callback = _ref24.callback,\n                params = _ref24.params,\n                objs = _ref24.objs,\n                commonObjs = _ref24.commonObjs,\n                operatorList = _ref24.operatorList,\n                pageIndex = _ref24.pageIndex,\n                canvasFactory = _ref24.canvasFactory,\n                webGLContext = _ref24.webGLContext,\n                _ref24$useRequestAnim = _ref24.useRequestAnimationFrame,\n                useRequestAnimationFrame = _ref24$useRequestAnim === void 0 ? false : _ref24$useRequestAnim,\n                _ref24$pdfBug = _ref24.pdfBug,\n                pdfBug = _ref24$pdfBug === void 0 ? false : _ref24$pdfBug;\n\n            _classCallCheck(this, InternalRenderTask);\n\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.webGLContext = webGLContext;\n            this._pdfBug = pdfBug;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = (0, _util.createPromiseCapability)();\n            this.task = new RenderTask(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n\n          _createClass(InternalRenderTask, [{\n            key: \"initializeGraphics\",\n            value: function initializeGraphics() {\n              var transparency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n              if (this.cancelled) {\n                return;\n              }\n\n              if (this._canvas) {\n                if (canvasInRendering.has(this._canvas)) {\n                  throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n                }\n\n                canvasInRendering.add(this._canvas);\n              }\n\n              if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n                this.stepper = globalThis.StepperManager.create(this._pageIndex);\n                this.stepper.init(this.operatorList);\n                this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n              }\n\n              var _this$params = this.params,\n                  canvasContext = _this$params.canvasContext,\n                  viewport = _this$params.viewport,\n                  transform = _this$params.transform,\n                  imageLayer = _this$params.imageLayer,\n                  background = _this$params.background;\n              this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n              this.gfx.beginDrawing({\n                transform: transform,\n                viewport: viewport,\n                transparency: transparency,\n                background: background\n              });\n              this.operatorListIdx = 0;\n              this.graphicsReady = true;\n\n              if (this.graphicsReadyCallback) {\n                this.graphicsReadyCallback();\n              }\n            }\n          }, {\n            key: \"cancel\",\n            value: function cancel() {\n              var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n              this.running = false;\n              this.cancelled = true;\n\n              if (this.gfx) {\n                this.gfx.endDrawing();\n              }\n\n              if (this._canvas) {\n                canvasInRendering.delete(this._canvas);\n              }\n\n              this.callback(error || new _display_utils.RenderingCancelledException(\"Rendering cancelled, page \".concat(this._pageIndex + 1), \"canvas\"));\n            }\n          }, {\n            key: \"operatorListChanged\",\n            value: function operatorListChanged() {\n              if (!this.graphicsReady) {\n                if (!this.graphicsReadyCallback) {\n                  this.graphicsReadyCallback = this._continueBound;\n                }\n\n                return;\n              }\n\n              if (this.stepper) {\n                this.stepper.updateOperatorList(this.operatorList);\n              }\n\n              if (this.running) {\n                return;\n              }\n\n              this._continue();\n            }\n          }, {\n            key: \"_continue\",\n            value: function _continue() {\n              this.running = true;\n\n              if (this.cancelled) {\n                return;\n              }\n\n              if (this.task.onContinue) {\n                this.task.onContinue(this._scheduleNextBound);\n              } else {\n                this._scheduleNext();\n              }\n            }\n          }, {\n            key: \"_scheduleNext\",\n            value: function _scheduleNext() {\n              var _this23 = this;\n\n              if (this._useRequestAnimationFrame) {\n                window.requestAnimationFrame(function () {\n                  _this23._nextBound().catch(_this23.cancel.bind(_this23));\n                });\n              } else {\n                Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n              }\n            }\n          }, {\n            key: \"_next\",\n            value: function () {\n              var _next2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (!this.cancelled) {\n                          _context4.next = 2;\n                          break;\n                        }\n\n                        return _context4.abrupt(\"return\");\n\n                      case 2:\n                        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n                        if (this.operatorListIdx === this.operatorList.argsArray.length) {\n                          this.running = false;\n\n                          if (this.operatorList.lastChunk) {\n                            this.gfx.endDrawing();\n\n                            if (this._canvas) {\n                              canvasInRendering.delete(this._canvas);\n                            }\n\n                            this.callback();\n                          }\n                        }\n\n                      case 4:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, this);\n              }));\n\n              function _next() {\n                return _next2.apply(this, arguments);\n              }\n\n              return _next;\n            }()\n          }]);\n\n          return InternalRenderTask;\n        }();\n\n        return InternalRenderTask;\n      }();\n\n      var version = '2.5.207';\n      exports.version = version;\n      var build = '0974d605';\n      exports.build = build;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontLoader = exports.FontFaceObject = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var BaseFontLoader = /*#__PURE__*/function () {\n        function BaseFontLoader(_ref25) {\n          var docId = _ref25.docId,\n              onUnsupportedFeature = _ref25.onUnsupportedFeature;\n\n          _classCallCheck(this, BaseFontLoader);\n\n          if (this.constructor === BaseFontLoader) {\n            (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n          }\n\n          this.docId = docId;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.nativeFontFaces = [];\n          this.styleElement = null;\n        }\n\n        _createClass(BaseFontLoader, [{\n          key: \"addNativeFontFace\",\n          value: function addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.push(nativeFontFace);\n            document.fonts.add(nativeFontFace);\n          }\n        }, {\n          key: \"insertRule\",\n          value: function insertRule(rule) {\n            var styleElement = this.styleElement;\n\n            if (!styleElement) {\n              styleElement = this.styleElement = document.createElement(\"style\");\n              styleElement.id = \"PDFJS_FONT_STYLE_TAG_\".concat(this.docId);\n              document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n            }\n\n            var styleSheet = styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this.nativeFontFaces.forEach(function (nativeFontFace) {\n              document.fonts.delete(nativeFontFace);\n            });\n            this.nativeFontFaces.length = 0;\n\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n        }, {\n          key: \"bind\",\n          value: function () {\n            var _bind = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(font) {\n              var _this24 = this;\n\n              var nativeFontFace, rule;\n              return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      if (!(font.attached || font.missingFile)) {\n                        _context5.next = 2;\n                        break;\n                      }\n\n                      return _context5.abrupt(\"return\");\n\n                    case 2:\n                      font.attached = true;\n\n                      if (!this.isFontLoadingAPISupported) {\n                        _context5.next = 19;\n                        break;\n                      }\n\n                      nativeFontFace = font.createNativeFontFace();\n\n                      if (!nativeFontFace) {\n                        _context5.next = 18;\n                        break;\n                      }\n\n                      this.addNativeFontFace(nativeFontFace);\n                      _context5.prev = 7;\n                      _context5.next = 10;\n                      return nativeFontFace.loaded;\n\n                    case 10:\n                      _context5.next = 18;\n                      break;\n\n                    case 12:\n                      _context5.prev = 12;\n                      _context5.t0 = _context5[\"catch\"](7);\n\n                      this._onUnsupportedFeature({\n                        featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                      });\n\n                      (0, _util.warn)(\"Failed to load font '\".concat(nativeFontFace.family, \"': '\").concat(_context5.t0, \"'.\"));\n                      font.disableFontFace = true;\n                      throw _context5.t0;\n\n                    case 18:\n                      return _context5.abrupt(\"return\");\n\n                    case 19:\n                      rule = font.createFontFaceRule();\n\n                      if (!rule) {\n                        _context5.next = 26;\n                        break;\n                      }\n\n                      this.insertRule(rule);\n\n                      if (!this.isSyncFontLoadingSupported) {\n                        _context5.next = 24;\n                        break;\n                      }\n\n                      return _context5.abrupt(\"return\");\n\n                    case 24:\n                      _context5.next = 26;\n                      return new Promise(function (resolve) {\n                        var request = _this24._queueLoadingCallback(resolve);\n\n                        _this24._prepareFontLoadEvent([rule], [font], request);\n                      });\n\n                    case 26:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, this, [[7, 12]]);\n            }));\n\n            function bind(_x4) {\n              return _bind.apply(this, arguments);\n            }\n\n            return bind;\n          }()\n        }, {\n          key: \"_queueLoadingCallback\",\n          value: function _queueLoadingCallback(callback) {\n            (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n          }\n        }, {\n          key: \"isFontLoadingAPISupported\",\n          get: function get() {\n            var supported = typeof document !== \"undefined\" && !!document.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n          }\n        }, {\n          key: \"isSyncFontLoadingSupported\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n          }\n        }, {\n          key: \"_loadTestFont\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n          }\n        }, {\n          key: \"_prepareFontLoadEvent\",\n          value: function _prepareFontLoadEvent(rules, fontsToLoad, request) {\n            (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n          }\n        }]);\n\n        return BaseFontLoader;\n      }();\n\n      var FontLoader;\n      exports.FontLoader = FontLoader;\n      {\n        exports.FontLoader = FontLoader = /*#__PURE__*/function (_BaseFontLoader) {\n          _inherits(GenericFontLoader, _BaseFontLoader);\n\n          var _super9 = _createSuper(GenericFontLoader);\n\n          function GenericFontLoader(docId) {\n            var _this25;\n\n            _classCallCheck(this, GenericFontLoader);\n\n            _this25 = _super9.call(this, docId);\n            _this25.loadingContext = {\n              requests: [],\n              nextRequestId: 0\n            };\n            _this25.loadTestFontId = 0;\n            return _this25;\n          }\n\n          _createClass(GenericFontLoader, [{\n            key: \"isSyncFontLoadingSupported\",\n            get: function get() {\n              var supported = false;\n\n              if (typeof navigator === \"undefined\") {\n                supported = true;\n              } else {\n                var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n                if (m && m[1] >= 14) {\n                  supported = true;\n                }\n              }\n\n              return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n            }\n          }, {\n            key: \"_queueLoadingCallback\",\n            value: function _queueLoadingCallback(callback) {\n              function completeRequest() {\n                (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                request.done = true;\n\n                while (context.requests.length > 0 && context.requests[0].done) {\n                  var otherRequest = context.requests.shift();\n                  setTimeout(otherRequest.callback, 0);\n                }\n              }\n\n              var context = this.loadingContext;\n              var request = {\n                id: \"pdfjs-font-loading-\".concat(context.nextRequestId++),\n                done: false,\n                complete: completeRequest,\n                callback: callback\n              };\n              context.requests.push(request);\n              return request;\n            }\n          }, {\n            key: \"_loadTestFont\",\n            get: function get() {\n              var getLoadTestFont = function getLoadTestFont() {\n                return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n              };\n\n              return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n            }\n          }, {\n            key: \"_prepareFontLoadEvent\",\n            value: function _prepareFontLoadEvent(rules, fonts, request) {\n              function int32(data, offset) {\n                return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n              }\n\n              function spliceString(s, offset, remove, insert) {\n                var chunk1 = s.substring(0, offset);\n                var chunk2 = s.substring(offset + remove);\n                return chunk1 + insert + chunk2;\n              }\n\n              var i, ii;\n              var canvas = document.createElement(\"canvas\");\n              canvas.width = 1;\n              canvas.height = 1;\n              var ctx = canvas.getContext(\"2d\");\n              var called = 0;\n\n              function isFontReady(name, callback) {\n                called++;\n\n                if (called > 30) {\n                  (0, _util.warn)(\"Load test font never loaded.\");\n                  callback();\n                  return;\n                }\n\n                ctx.font = \"30px \" + name;\n                ctx.fillText(\".\", 0, 20);\n                var imageData = ctx.getImageData(0, 0, 1, 1);\n\n                if (imageData.data[3] > 0) {\n                  callback();\n                  return;\n                }\n\n                setTimeout(isFontReady.bind(null, name, callback));\n              }\n\n              var loadTestFontId = \"lt\".concat(Date.now()).concat(this.loadTestFontId++);\n              var data = this._loadTestFont;\n              var COMMENT_OFFSET = 976;\n              data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n              var CFF_CHECKSUM_OFFSET = 16;\n              var XXXX_VALUE = 0x58585858;\n              var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n              for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n              }\n\n              if (i < loadTestFontId.length) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n              }\n\n              data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n              var url = \"url(data:font/opentype;base64,\".concat(btoa(data), \");\");\n              var rule = \"@font-face {font-family:\\\"\".concat(loadTestFontId, \"\\\";src:\").concat(url, \"}\");\n              this.insertRule(rule);\n              var names = [];\n\n              for (i = 0, ii = fonts.length; i < ii; i++) {\n                names.push(fonts[i].loadedName);\n              }\n\n              names.push(loadTestFontId);\n              var div = document.createElement(\"div\");\n              div.style.visibility = \"hidden\";\n              div.style.width = div.style.height = \"10px\";\n              div.style.position = \"absolute\";\n              div.style.top = div.style.left = \"0px\";\n\n              for (i = 0, ii = names.length; i < ii; ++i) {\n                var span = document.createElement(\"span\");\n                span.textContent = \"Hi\";\n                span.style.fontFamily = names[i];\n                div.appendChild(span);\n              }\n\n              document.body.appendChild(div);\n              isFontReady(loadTestFontId, function () {\n                document.body.removeChild(div);\n                request.complete();\n              });\n            }\n          }]);\n\n          return GenericFontLoader;\n        }(BaseFontLoader);\n      }\n\n      var FontFaceObject = /*#__PURE__*/function () {\n        function FontFaceObject(translatedData, _ref26) {\n          var _ref26$isEvalSupporte = _ref26.isEvalSupported,\n              isEvalSupported = _ref26$isEvalSupporte === void 0 ? true : _ref26$isEvalSupporte,\n              _ref26$disableFontFac = _ref26.disableFontFace,\n              disableFontFace = _ref26$disableFontFac === void 0 ? false : _ref26$disableFontFac,\n              _ref26$ignoreErrors = _ref26.ignoreErrors,\n              ignoreErrors = _ref26$ignoreErrors === void 0 ? false : _ref26$ignoreErrors,\n              _ref26$onUnsupportedF = _ref26.onUnsupportedFeature,\n              onUnsupportedFeature = _ref26$onUnsupportedF === void 0 ? null : _ref26$onUnsupportedF,\n              _ref26$fontRegistry = _ref26.fontRegistry,\n              fontRegistry = _ref26$fontRegistry === void 0 ? null : _ref26$fontRegistry;\n\n          _classCallCheck(this, FontFaceObject);\n\n          this.compiledGlyphs = Object.create(null);\n\n          for (var i in translatedData) {\n            this[i] = translatedData[i];\n          }\n\n          this.isEvalSupported = isEvalSupported !== false;\n          this.disableFontFace = disableFontFace === true;\n          this.ignoreErrors = ignoreErrors === true;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.fontRegistry = fontRegistry;\n        }\n\n        _createClass(FontFaceObject, [{\n          key: \"createNativeFontFace\",\n          value: function createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            var nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this);\n            }\n\n            return nativeFontFace;\n          }\n        }, {\n          key: \"createFontFaceRule\",\n          value: function createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            var data = (0, _util.bytesToString)(new Uint8Array(this.data));\n            var url = \"url(data:\".concat(this.mimetype, \";base64,\").concat(btoa(data), \");\");\n            var rule = \"@font-face {font-family:\\\"\".concat(this.loadedName, \"\\\";src:\").concat(url, \"}\");\n\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this, url);\n            }\n\n            return rule;\n          }\n        }, {\n          key: \"getPathGenerator\",\n          value: function getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n\n            var cmds, current;\n\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n\n              if (this._onUnsupportedFeature) {\n                this._onUnsupportedFeature({\n                  featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n                });\n              }\n\n              (0, _util.warn)(\"getPathGenerator - ignoring character: \\\"\".concat(ex, \"\\\".\"));\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n\n            if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n              var args,\n                  js = \"\";\n\n              for (var i = 0, ii = cmds.length; i < ii; i++) {\n                current = cmds[i];\n\n                if (current.args !== undefined) {\n                  args = current.args.join(\",\");\n                } else {\n                  args = \"\";\n                }\n\n                js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n              }\n\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n            }\n\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (var _i5 = 0, _ii = cmds.length; _i5 < _ii; _i5++) {\n                current = cmds[_i5];\n\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n        }]);\n\n        return FontFaceObject;\n      }();\n\n      exports.FontFaceObject = FontFaceObject;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.apiCompatibilityParams = void 0;\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      var compatibilityParams = Object.create(null);\n      {\n        (function checkFontFace() {\n          if (_is_node.isNodeJS) {\n            compatibilityParams.disableFontFace = true;\n          }\n        })();\n      }\n      var apiCompatibilityParams = Object.freeze(compatibilityParams);\n      exports.apiCompatibilityParams = apiCompatibilityParams;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CanvasGraphics = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _pattern_helper = __w_pdfjs_require__(9);\n\n      var MIN_FONT_SIZE = 16;\n      var MAX_FONT_SIZE = 100;\n      var MAX_GROUP_SIZE = 4096;\n      var MIN_WIDTH_FACTOR = 0.65;\n      var COMPILE_TYPE3_GLYPHS = true;\n      var MAX_SIZE_TO_COMPILE = 1000;\n      var FULL_CHUNK_HEIGHT = 16;\n\n      function addContextCurrentTransform(ctx) {\n        if (!ctx.mozCurrentTransform) {\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              var m = this._transformMatrix;\n              var a = m[0],\n                  b = m[1],\n                  c = m[2],\n                  d = m[3],\n                  e = m[4],\n                  f = m[5];\n              var ad_bc = a * d - b * c;\n              var bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n\n          ctx.save = function ctxSave() {\n            var old = this._transformMatrix;\n\n            this._transformStack.push(old);\n\n            this._transformMatrix = old.slice(0, 6);\n\n            this._originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            var prev = this._transformStack.pop();\n\n            if (prev) {\n              this._transformMatrix = prev;\n\n              this._originalRestore();\n            }\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            var m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n\n            this._originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            var m = this._transformMatrix;\n            m[0] = m[0] * x;\n            m[1] = m[1] * x;\n            m[2] = m[2] * y;\n            m[3] = m[3] * y;\n\n            this._originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            var cosValue = Math.cos(angle);\n            var sinValue = Math.sin(angle);\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n            this._originalRotate(angle);\n          };\n        }\n      }\n\n      var CachedCanvases = function CachedCanvasesClosure() {\n        function CachedCanvases(canvasFactory) {\n          this.canvasFactory = canvasFactory;\n          this.cache = Object.create(null);\n        }\n\n        CachedCanvases.prototype = {\n          getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n            var canvasEntry;\n\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n              canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n\n            if (trackTransform) {\n              addContextCurrentTransform(canvasEntry.context);\n            }\n\n            return canvasEntry;\n          },\n          clear: function clear() {\n            for (var id in this.cache) {\n              var canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n        };\n        return CachedCanvases;\n      }();\n\n      function compileType3Glyph(imgData) {\n        var POINT_TO_PROCESS_LIMIT = 1000;\n        var width = imgData.width,\n            height = imgData.height;\n        var i,\n            j,\n            j0,\n            width1 = width + 1;\n        var points = new Uint8Array(width1 * (height + 1));\n        var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n        var lineSize = width + 7 & ~7,\n            data0 = imgData.data;\n        var data = new Uint8Array(lineSize * height),\n            pos = 0,\n            ii;\n\n        for (i = 0, ii = data0.length; i < ii; i++) {\n          var mask = 128,\n              elem = data0[i];\n\n          while (mask > 0) {\n            data[pos++] = elem & mask ? 0 : 255;\n            mask >>= 1;\n          }\n        }\n\n        var count = 0;\n        pos = 0;\n\n        if (data[pos] !== 0) {\n          points[0] = 1;\n          ++count;\n        }\n\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j] = data[pos] ? 2 : 1;\n            ++count;\n          }\n\n          pos++;\n        }\n\n        if (data[pos] !== 0) {\n          points[j] = 2;\n          ++count;\n        }\n\n        for (i = 1; i < height; i++) {\n          pos = i * lineSize;\n          j0 = i * width1;\n\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0] = data[pos] ? 1 : 8;\n            ++count;\n          }\n\n          var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n          for (j = 1; j < width; j++) {\n            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n            if (POINT_TYPES[sum]) {\n              points[j0 + j] = POINT_TYPES[sum];\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0 + j] = data[pos] ? 2 : 4;\n            ++count;\n          }\n\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n        }\n\n        pos = lineSize * (height - 1);\n        j0 = i * width1;\n\n        if (data[pos] !== 0) {\n          points[j0] = 8;\n          ++count;\n        }\n\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j0 + j] = data[pos] ? 4 : 8;\n            ++count;\n          }\n\n          pos++;\n        }\n\n        if (data[pos] !== 0) {\n          points[j0 + j] = 4;\n          ++count;\n        }\n\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n\n        var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n        var outlines = [];\n\n        for (i = 0; count && i <= height; i++) {\n          var p = i * width1;\n          var end = p + width;\n\n          while (p < end && !points[p]) {\n            p++;\n          }\n\n          if (p === end) {\n            continue;\n          }\n\n          var coords = [p % width1, i];\n          var type = points[p],\n              p0 = p,\n              pp;\n\n          do {\n            var step = steps[type];\n\n            do {\n              p += step;\n            } while (!points[p]);\n\n            pp = points[p];\n\n            if (pp !== 5 && pp !== 10) {\n              type = pp;\n              points[p] = 0;\n            } else {\n              type = pp & 0x33 * type >> 4;\n              points[p] &= type >> 2 | type << 2;\n            }\n\n            coords.push(p % width1);\n            coords.push(p / width1 | 0);\n\n            if (!points[p]) {\n              --count;\n            }\n          } while (p0 !== p);\n\n          outlines.push(coords);\n          --i;\n        }\n\n        var drawOutline = function drawOutline(c) {\n          c.save();\n          c.scale(1 / width, -1 / height);\n          c.translate(0, -height);\n          c.beginPath();\n\n          for (var k = 0, kk = outlines.length; k < kk; k++) {\n            var o = outlines[k];\n            c.moveTo(o[0], o[1]);\n\n            for (var l = 2, ll = o.length; l < ll; l += 2) {\n              c.lineTo(o[l], o[l + 1]);\n            }\n          }\n\n          c.fill();\n          c.beginPath();\n          c.restore();\n        };\n\n        return drawOutline;\n      }\n\n      var CanvasExtraState = function CanvasExtraStateClosure() {\n        function CanvasExtraState() {\n          this.alphaIsShape = false;\n          this.fontSize = 0;\n          this.fontSizeScale = 1;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.textMatrixScale = 1;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textRise = 0;\n          this.fillColor = \"#000000\";\n          this.strokeColor = \"#000000\";\n          this.patternFill = false;\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.activeSMask = null;\n          this.resumeSMaskCtx = null;\n        }\n\n        CanvasExtraState.prototype = {\n          clone: function CanvasExtraState_clone() {\n            return Object.create(this);\n          },\n          setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        };\n        return CanvasExtraState;\n      }();\n\n      var CanvasGraphics = function CanvasGraphicsClosure() {\n        var EXECUTION_TIME = 15;\n        var EXECUTION_STEPS = 10;\n\n        function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n          this.ctx = canvasCtx;\n          this.current = new CanvasExtraState();\n          this.stateStack = [];\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.res = null;\n          this.xobjs = null;\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this.imageLayer = imageLayer;\n          this.groupStack = [];\n          this.processingType3 = null;\n          this.baseTransform = null;\n          this.baseTransformStack = [];\n          this.groupLevel = 0;\n          this.smaskStack = [];\n          this.smaskCounter = 0;\n          this.tempSMask = null;\n          this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n          if (canvasCtx) {\n            addContextCurrentTransform(canvasCtx);\n          }\n\n          this._cachedGetSinglePixelWidth = null;\n        }\n\n        function putBinaryImageData(ctx, imgData) {\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n\n          var height = imgData.height,\n              width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0,\n              destPos;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n          var i, j, thisChunkHeight, elemsInThisChunk;\n\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            var srcLength = src.byteLength;\n            var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            var dest32DataLength = dest32.length;\n            var fullSrcDiff = width + 7 >> 3;\n            var white = 0xffffffff;\n            var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n\n              for (j = 0; j < thisChunkHeight; j++) {\n                var srcDiff = srcLength - srcPos;\n                var k = 0;\n                var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                var kEndUnrolled = kEnd & ~7;\n                var mask = 0;\n                var srcByte = 0;\n\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n\n              destPos = 0;\n\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(\"bad image kind: \".concat(imgData.kind));\n          }\n        }\n\n        function putBinaryImageMask(ctx, imgData) {\n          var height = imgData.height,\n              width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n\n          for (var i = 0; i < totalChunks; i++) {\n            var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            var destPos = 3;\n\n            for (var j = 0; j < thisChunkHeight; j++) {\n              var mask = 0;\n\n              for (var k = 0; k < width; k++) {\n                if (!mask) {\n                  var elem = src[srcPos++];\n                  mask = 128;\n                }\n\n                dest[destPos] = elem & mask ? 0 : 255;\n                destPos += 4;\n                mask >>= 1;\n              }\n            }\n\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n\n        function copyCtxState(sourceCtx, destCtx) {\n          var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n          for (var i = 0, ii = properties.length; i < ii; i++) {\n            var property = properties[i];\n\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = \"#000000\";\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n        }\n\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          var length = bytes.length;\n\n          for (var i = 3; i < length; i += 4) {\n            var alpha = bytes[i];\n\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              var alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          var length = maskData.length;\n          var scale = 1 / 255;\n\n          for (var i = 3; i < length; i += 4) {\n            var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          var length = maskData.length;\n\n          for (var i = 3; i < length; i += 4) {\n            var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n          var hasBackdrop = !!backdrop;\n          var r0 = hasBackdrop ? backdrop[0] : 0;\n          var g0 = hasBackdrop ? backdrop[1] : 0;\n          var b0 = hasBackdrop ? backdrop[2] : 0;\n          var composeFn;\n\n          if (subtype === \"Luminosity\") {\n            composeFn = composeSMaskLuminosity;\n          } else {\n            composeFn = composeSMaskAlpha;\n          }\n\n          var PIXELS_TO_PROCESS = 1048576;\n          var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n          for (var row = 0; row < height; row += chunkSize) {\n            var chunkHeight = Math.min(chunkSize, height - row);\n            var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n            var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n\n            composeFn(maskData.data, layerData.data, transferMap);\n            maskCtx.putImageData(layerData, 0, row);\n          }\n        }\n\n        function composeSMask(ctx, smask, layerCtx, webGLContext) {\n          var mask = smask.canvas;\n          var maskCtx = smask.context;\n          ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n          var backdrop = smask.backdrop || null;\n\n          if (!smask.transferMap && webGLContext.isEnabled) {\n            var composed = webGLContext.composeSMask({\n              layer: layerCtx.canvas,\n              mask: mask,\n              properties: {\n                subtype: smask.subtype,\n                backdrop: backdrop\n              }\n            });\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n            return;\n          }\n\n          genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n          ctx.drawImage(mask, 0, 0);\n        }\n\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var NORMAL_CLIP = {};\n        var EO_CLIP = {};\n        CanvasGraphics.prototype = {\n          beginDrawing: function beginDrawing(_ref27) {\n            var transform = _ref27.transform,\n                viewport = _ref27.viewport,\n                _ref27$transparency = _ref27.transparency,\n                transparency = _ref27$transparency === void 0 ? false : _ref27$transparency,\n                _ref27$background = _ref27.background,\n                background = _ref27$background === void 0 ? null : _ref27$background;\n            var width = this.ctx.canvas.width;\n            var height = this.ctx.canvas.height;\n            this.ctx.save();\n            this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n\n            if (transparency) {\n              var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n            }\n\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n\n            if (transform) {\n              this.ctx.transform.apply(this.ctx, transform);\n            }\n\n            this.ctx.transform.apply(this.ctx, viewport.transform);\n            this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n            if (this.imageLayer) {\n              this.imageLayer.beginLayout();\n            }\n          },\n          executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            var argsArray = operatorList.argsArray;\n            var fnArray = operatorList.fnArray;\n            var i = executionStartIdx || 0;\n            var argsArrayLen = argsArray.length;\n\n            if (argsArrayLen === i) {\n              return i;\n            }\n\n            var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            var steps = 0;\n            var commonObjs = this.commonObjs;\n            var objs = this.objs;\n            var fnId;\n\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n\n              fnId = fnArray[i];\n\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                var _iterator7 = _createForOfIteratorHelper(argsArray[i]),\n                    _step7;\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    var depObjId = _step7.value;\n                    var objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n                    if (!objsPool.has(depObjId)) {\n                      objsPool.get(depObjId, continueCallback);\n                      return i;\n                    }\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n              }\n\n              i++;\n\n              if (i === argsArrayLen) {\n                return i;\n              }\n\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n\n                steps = 0;\n              }\n            }\n          },\n          endDrawing: function CanvasGraphics_endDrawing() {\n            if (this.current.activeSMask !== null) {\n              this.endSMaskGroup();\n            }\n\n            this.ctx.restore();\n\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n\n            this.cachedCanvases.clear();\n            this.webGLContext.clear();\n\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          },\n          setLineWidth: function CanvasGraphics_setLineWidth(width) {\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          },\n          setLineCap: function CanvasGraphics_setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          },\n          setLineJoin: function CanvasGraphics_setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          },\n          setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          },\n          setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n            var ctx = this.ctx;\n\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          },\n          setRenderingIntent: function setRenderingIntent(intent) {},\n          setFlatness: function setFlatness(flatness) {},\n          setGState: function CanvasGraphics_setGState(states) {\n            for (var i = 0, ii = states.length; i < ii; i++) {\n              var state = states[i];\n              var key = state[0];\n              var value = state[1];\n\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n\n                case \"SMask\":\n                  if (this.current.activeSMask) {\n                    if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                      this.suspendSMaskGroup();\n                    } else {\n                      this.endSMaskGroup();\n                    }\n                  }\n\n                  this.current.activeSMask = value ? this.tempSMask : null;\n\n                  if (this.current.activeSMask) {\n                    this.beginSMaskGroup();\n                  }\n\n                  this.tempSMask = null;\n                  break;\n              }\n            }\n          },\n          beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n            var activeSMask = this.current.activeSMask;\n            var drawnWidth = activeSMask.canvas.width;\n            var drawnHeight = activeSMask.canvas.height;\n            var cacheId = \"smaskGroupAt\" + this.groupLevel;\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var currentCtx = this.ctx;\n            var currentTransform = currentCtx.mozCurrentTransform;\n            this.ctx.save();\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n            groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n            activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            this.ctx.save();\n            copyCtxState(groupCtx, this.ctx);\n            this.current.resumeSMaskCtx = groupCtx;\n\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n            groupCtx.save();\n            groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n            groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n            groupCtx.restore();\n          },\n          resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.current.resumeSMaskCtx;\n            var currentCtx = this.ctx;\n            this.ctx = groupCtx;\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            copyCtxState(groupCtx, this.ctx);\n\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n          },\n          save: function CanvasGraphics_save() {\n            this.ctx.save();\n            var old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n            this.current.resumeSMaskCtx = null;\n          },\n          restore: function CanvasGraphics_restore() {\n            if (this.current.resumeSMaskCtx) {\n              this.resumeSMaskGroup();\n            }\n\n            if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n              this.endSMaskGroup();\n            }\n\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              this.ctx.restore();\n              this.pendingClip = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          },\n          transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedGetSinglePixelWidth = null;\n          },\n          constructPath: function CanvasGraphics_constructPath(ops, args) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var x = current.x,\n                y = current.y;\n\n            for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  var width = args[j++];\n                  var height = args[j++];\n\n                  if (width === 0) {\n                    width = this.getSinglePixelWidth();\n                  }\n\n                  if (height === 0) {\n                    height = this.getSinglePixelWidth();\n                  }\n\n                  var xw = x + width;\n                  var yh = y + height;\n                  this.ctx.moveTo(x, y);\n                  this.ctx.lineTo(xw, y);\n                  this.ctx.lineTo(xw, yh);\n                  this.ctx.lineTo(x, yh);\n                  this.ctx.lineTo(x, y);\n                  this.ctx.closePath();\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  break;\n\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n\n            current.setCurrentPoint(x, y);\n          },\n          closePath: function CanvasGraphics_closePath() {\n            this.ctx.closePath();\n          },\n          stroke: function CanvasGraphics_stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n\n            if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n              ctx.save();\n              var transform = ctx.mozCurrentTransform;\n\n              var scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n              ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n              ctx.stroke();\n            }\n\n            if (consumePath) {\n              this.consumePath();\n            }\n\n            ctx.globalAlpha = this.current.fillAlpha;\n          },\n          closeStroke: function CanvasGraphics_closeStroke() {\n            this.closePath();\n            this.stroke();\n          },\n          fill: function CanvasGraphics_fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var needRestore = false;\n\n            if (isPatternFill) {\n              ctx.save();\n\n              if (this.baseTransform) {\n                ctx.setTransform.apply(ctx, this.baseTransform);\n              }\n\n              ctx.fillStyle = fillColor.getPattern(ctx, this);\n              needRestore = true;\n            }\n\n            if (this.pendingEOFill) {\n              ctx.fill(\"evenodd\");\n              this.pendingEOFill = false;\n            } else {\n              ctx.fill();\n            }\n\n            if (needRestore) {\n              ctx.restore();\n            }\n\n            if (consumePath) {\n              this.consumePath();\n            }\n          },\n          eoFill: function CanvasGraphics_eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          },\n          fillStroke: function CanvasGraphics_fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          },\n          eoFillStroke: function CanvasGraphics_eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          },\n          closeFillStroke: function CanvasGraphics_closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          },\n          closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          },\n          endPath: function CanvasGraphics_endPath() {\n            this.consumePath();\n          },\n          clip: function CanvasGraphics_clip() {\n            this.pendingClip = NORMAL_CLIP;\n          },\n          eoClip: function CanvasGraphics_eoClip() {\n            this.pendingClip = EO_CLIP;\n          },\n          beginText: function CanvasGraphics_beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          endText: function CanvasGraphics_endText() {\n            var paths = this.pendingTextPaths;\n            var ctx = this.ctx;\n\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n\n            ctx.save();\n            ctx.beginPath();\n\n            for (var i = 0; i < paths.length; i++) {\n              var path = paths[i];\n              ctx.setTransform.apply(ctx, path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          },\n          setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          },\n          setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          },\n          setHScale: function CanvasGraphics_setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          },\n          setLeading: function CanvasGraphics_setLeading(leading) {\n            this.current.leading = -leading;\n          },\n          setFont: function CanvasGraphics_setFont(fontRefName, size) {\n            var fontObj = this.commonObjs.get(fontRefName);\n            var current = this.current;\n\n            if (!fontObj) {\n              throw new Error(\"Can't find font for \".concat(fontRefName));\n            }\n\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n\n            if (fontObj.isType3Font) {\n              return;\n            }\n\n            var name = fontObj.loadedName || \"sans-serif\";\n            var bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            var italic = fontObj.italic ? \"italic\" : \"normal\";\n            var typeface = \"\\\"\".concat(name, \"\\\", \").concat(fontObj.fallbackName);\n            var browserFontSize = size;\n\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = \"\".concat(italic, \" \").concat(bold, \" \").concat(browserFontSize, \"px \").concat(typeface);\n          },\n          setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          },\n          setTextRise: function CanvasGraphics_setTextRise(rise) {\n            this.current.textRise = rise;\n          },\n          moveText: function CanvasGraphics_moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          },\n          setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          },\n          setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          nextLine: function CanvasGraphics_nextLine() {\n            this.moveText(0, this.current.leading);\n          },\n          paintChar: function paintChar(character, x, y, patternTransform) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var textRenderingMode = current.textRenderingMode;\n            var fontSize = current.fontSize / current.fontSizeScale;\n            var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            var patternFill = current.patternFill && !font.missingFile;\n            var addToPath;\n\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, patternTransform);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n\n            if (isAddToPathSet) {\n              var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: ctx.mozCurrentTransform,\n                x: x,\n                y: y,\n                fontSize: fontSize,\n                addToPath: addToPath\n              });\n            }\n          },\n\n          get isFontSubpixelAAEnabled() {\n            var _this$cachedCanvases$ = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10),\n                ctx = _this$cachedCanvases$.context;\n\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            var data = ctx.getImageData(0, 0, 10, 10).data;\n            var enabled = false;\n\n            for (var i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          },\n\n          showText: function CanvasGraphics_showText(glyphs) {\n            var current = this.current;\n            var font = current.font;\n\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n\n            var fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return undefined;\n            }\n\n            var ctx = this.ctx;\n            var fontSizeScale = current.fontSizeScale;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var fontDirection = current.fontDirection;\n            var textHScale = current.textHScale * fontDirection;\n            var glyphsLength = glyphs.length;\n            var vertical = font.vertical;\n            var spacingDir = vertical ? 1 : -1;\n            var defaultVMetrics = font.defaultVMetrics;\n            var widthAdvanceScale = fontSize * current.fontMatrix[0];\n            var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            var patternTransform;\n\n            if (current.patternFill) {\n              ctx.save();\n              var pattern = current.fillColor.getPattern(ctx, this);\n              patternTransform = ctx.mozCurrentTransform;\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n\n            var lineWidth = current.lineWidth;\n            var scale = current.textMatrixScale;\n\n            if (scale === 0 || lineWidth === 0) {\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                this._cachedGetSinglePixelWidth = null;\n                lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n              }\n            } else {\n              lineWidth /= scale;\n            }\n\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n\n            ctx.lineWidth = lineWidth;\n            var x = 0,\n                i;\n\n            for (i = 0; i < glyphsLength; ++i) {\n              var glyph = glyphs[i];\n\n              if ((0, _util.isNum)(glyph)) {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              var restoreNeeded = false;\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var character = glyph.fontChar;\n              var accent = glyph.accent;\n              var scaledX, scaledY, scaledAccentX, scaledAccentY;\n              var width = glyph.width;\n\n              if (vertical) {\n                var vmetric, vx, vy;\n                vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (font.remeasure && width > 0) {\n                var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  var characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n\n              if (glyph.isInFont || font.missingFile) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n\n                  if (accent) {\n                    scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n                    scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n\n              var charWidth;\n\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n\n              x += charWidth;\n\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            ctx.restore();\n          },\n          showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var fontSize = current.fontSize;\n            var fontDirection = current.fontDirection;\n            var spacingDir = font.vertical ? 1 : -1;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var textHScale = current.textHScale * fontDirection;\n            var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            var glyphsLength = glyphs.length;\n            var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            var i, glyph, width, spacingLength;\n\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n\n              if ((0, _util.isNum)(glyph)) {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n              if (!operatorList) {\n                (0, _util.warn)(\"Type3 character \\\"\".concat(glyph.operatorListId, \"\\\" is not available.\"));\n                continue;\n              }\n\n              this.processingType3 = glyph;\n              this.save();\n              ctx.scale(fontSize, fontSize);\n              ctx.transform.apply(ctx, fontMatrix);\n              this.executeOperatorList(operatorList);\n              this.restore();\n\n              var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n\n            ctx.restore();\n            this.processingType3 = null;\n          },\n          setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n          setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.clip();\n            this.endPath();\n          },\n          getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n            var _this26 = this;\n\n            var pattern;\n\n            if (IR[0] === \"TilingPattern\") {\n              var color = IR[1];\n              var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n              var canvasGraphicsFactory = {\n                createCanvasGraphics: function createCanvasGraphics(ctx) {\n                  return new CanvasGraphics(ctx, _this26.commonObjs, _this26.objs, _this26.canvasFactory, _this26.webGLContext);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n            }\n\n            return pattern;\n          },\n          setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          },\n          setFillColorN: function CanvasGraphics_setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          },\n          setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          },\n          setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          },\n          shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n            var ctx = this.ctx;\n            this.save();\n            var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n            ctx.fillStyle = pattern.getPattern(ctx, this, true);\n            var inv = ctx.mozCurrentTransformInverse;\n\n            if (inv) {\n              var canvas = ctx.canvas;\n              var width = canvas.width;\n              var height = canvas.height;\n\n              var bl = _util.Util.applyTransform([0, 0], inv);\n\n              var br = _util.Util.applyTransform([0, height], inv);\n\n              var ul = _util.Util.applyTransform([width, 0], inv);\n\n              var ur = _util.Util.applyTransform([width, height], inv);\n\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n\n            this.restore();\n          },\n          beginInlineImage: function CanvasGraphics_beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          },\n          beginImageData: function CanvasGraphics_beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          },\n          paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, matrix);\n            }\n\n            this.baseTransform = this.ctx.mozCurrentTransform;\n\n            if (bbox) {\n              var width = bbox[2] - bbox[0];\n              var height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n          },\n          paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          },\n          beginGroup: function CanvasGraphics_beginGroup(group) {\n            this.save();\n            var currentCtx = this.ctx;\n\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n\n            var currentTransform = currentCtx.mozCurrentTransform;\n\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, group.matrix);\n            }\n\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n\n            var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n            var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            var offsetX = Math.floor(bounds[0]);\n            var offsetY = Math.floor(bounds[1]);\n            var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            var scaleX = 1,\n                scaleY = 1;\n\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n\n            var cacheId = \"groupAt\" + this.groupLevel;\n\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n            }\n\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n            this.current.activeSMask = null;\n          },\n          endGroup: function CanvasGraphics_endGroup(group) {\n            this.groupLevel--;\n            var groupCtx = this.ctx;\n            this.ctx = this.groupStack.pop();\n\n            if (this.ctx.imageSmoothingEnabled !== undefined) {\n              this.ctx.imageSmoothingEnabled = false;\n            } else {\n              this.ctx.mozImageSmoothingEnabled = false;\n            }\n\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n            } else {\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n            }\n\n            this.restore();\n          },\n          beginAnnotations: function CanvasGraphics_beginAnnotations() {\n            this.save();\n\n            if (this.baseTransform) {\n              this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n            }\n          },\n          endAnnotations: function CanvasGraphics_endAnnotations() {\n            this.restore();\n          },\n          beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n            this.save();\n            resetCtxToDefault(this.ctx);\n            this.current = new CanvasExtraState();\n\n            if (Array.isArray(rect) && rect.length === 4) {\n              var width = rect[2] - rect[0];\n              var height = rect[3] - rect[1];\n              this.ctx.rect(rect[0], rect[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n\n            this.transform.apply(this, transform);\n            this.transform.apply(this, matrix);\n          },\n          endAnnotation: function CanvasGraphics_endAnnotation() {\n            this.restore();\n          },\n          paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n            var ctx = this.ctx;\n            var width = img.width,\n                height = img.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var glyph = this.processingType3;\n\n            if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n              if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n                glyph.compiled = compileType3Glyph({\n                  data: img.data,\n                  width: width,\n                  height: height\n                });\n              } else {\n                glyph.compiled = null;\n              }\n            }\n\n            if (glyph && glyph.compiled) {\n              glyph.compiled(ctx);\n              return;\n            }\n\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, img);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            this.paintInlineImageXObject(maskCanvas.canvas);\n          },\n          paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, imgData);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            var ctx = this.ctx;\n\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              ctx.save();\n              ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n\n            for (var i = 0, ii = images.length; i < ii; i++) {\n              var image = images[i];\n              var width = image.width,\n                  height = image.height;\n              var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              var maskCtx = maskCanvas.context;\n              maskCtx.save();\n              putBinaryImageMask(maskCtx, image);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform.apply(ctx, image.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n            var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          },\n          paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            var width = imgData.width;\n            var height = imgData.height;\n            var map = [];\n\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n\n            this.paintInlineImageXObjectGroup(imgData, map);\n          },\n          paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            var currentTransform = ctx.mozCurrentTransformInverse;\n            var a = currentTransform[0],\n                b = currentTransform[1];\n            var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n            var c = currentTransform[2],\n                d = currentTransform[3];\n            var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n            var imgToPaint, tmpCanvas;\n\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              var tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = tmpCanvas.canvas;\n            }\n\n            var paintWidth = width,\n                paintHeight = height;\n            var tmpCanvasId = \"prescale1\";\n\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              var newWidth = paintWidth,\n                  newHeight = paintHeight;\n\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              imgToPaint = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n\n            ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(0, -height);\n              this.imageLayer.appendImage({\n                imgData: imgData,\n                left: position[0],\n                top: position[1],\n                width: width / currentTransform[0],\n                height: height / currentTransform[3]\n              });\n            }\n\n            this.restore();\n          },\n          paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n            var ctx = this.ctx;\n            var w = imgData.width;\n            var h = imgData.height;\n            var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData);\n\n            for (var i = 0, ii = map.length; i < ii; i++) {\n              var entry = map[i];\n              ctx.save();\n              ctx.transform.apply(ctx, entry.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n              if (this.imageLayer) {\n                var position = this.getCanvasPosition(entry.x, entry.y);\n                this.imageLayer.appendImage({\n                  imgData: imgData,\n                  left: position[0],\n                  top: position[1],\n                  width: w,\n                  height: h\n                });\n              }\n\n              ctx.restore();\n            }\n          },\n          paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n            this.ctx.fillRect(0, 0, 1, 1);\n          },\n          paintXObject: function CanvasGraphics_paintXObject() {\n            (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n          },\n          markPoint: function CanvasGraphics_markPoint(tag) {},\n          markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n          beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n          beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n          endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n          beginCompat: function CanvasGraphics_beginCompat() {},\n          endCompat: function CanvasGraphics_endCompat() {},\n          consumePath: function CanvasGraphics_consumePath() {\n            var ctx = this.ctx;\n\n            if (this.pendingClip) {\n              if (this.pendingClip === EO_CLIP) {\n                ctx.clip(\"evenodd\");\n              } else {\n                ctx.clip();\n              }\n\n              this.pendingClip = null;\n            }\n\n            ctx.beginPath();\n          },\n          getSinglePixelWidth: function getSinglePixelWidth(scale) {\n            if (this._cachedGetSinglePixelWidth === null) {\n              var inverse = this.ctx.mozCurrentTransformInverse;\n              this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n            }\n\n            return this._cachedGetSinglePixelWidth;\n          },\n          getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n            var transform = this.ctx.mozCurrentTransform;\n            return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n          }\n        };\n\n        for (var op in _util.OPS) {\n          CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n        }\n\n        return CanvasGraphics;\n      }();\n\n      exports.CanvasGraphics = CanvasGraphics;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getShadingPatternFromIR = getShadingPatternFromIR;\n      exports.TilingPattern = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var ShadingIRs = {};\n\n      function applyBoundingBox(ctx, bbox) {\n        if (!bbox || typeof Path2D === \"undefined\") {\n          return;\n        }\n\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        var region = new Path2D();\n        region.rect(bbox[0], bbox[1], width, height);\n        ctx.clip(region);\n      }\n\n      ShadingIRs.RadialAxial = {\n        fromIR: function RadialAxial_fromIR(raw) {\n          var type = raw[1];\n          var bbox = raw[2];\n          var colorStops = raw[3];\n          var p0 = raw[4];\n          var p1 = raw[5];\n          var r0 = raw[6];\n          var r1 = raw[7];\n          return {\n            type: \"Pattern\",\n            getPattern: function RadialAxial_getPattern(ctx) {\n              applyBoundingBox(ctx, bbox);\n              var grad;\n\n              if (type === \"axial\") {\n                grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n              } else if (type === \"radial\") {\n                grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n              }\n\n              for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n                var c = colorStops[i];\n                grad.addColorStop(c[0], c[1]);\n              }\n\n              return grad;\n            }\n          };\n        }\n      };\n\n      var createMeshCanvas = function createMeshCanvasClosure() {\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          var coords = context.coords,\n              colors = context.colors;\n          var bytes = data.data,\n              rowSize = data.width * 4;\n          var tmp;\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n          if (y1 >= y3) {\n            return;\n          }\n\n          var c1r = colors[c1],\n              c1g = colors[c1 + 1],\n              c1b = colors[c1 + 2];\n          var c2r = colors[c2],\n              c2g = colors[c2 + 1],\n              c2b = colors[c2 + 2];\n          var c3r = colors[c3],\n              c3g = colors[c3 + 1],\n              c3b = colors[c3 + 2];\n          var minY = Math.round(y1),\n              maxY = Math.round(y3);\n          var xa, car, cag, cab;\n          var xb, cbr, cbg, cbb;\n\n          for (var y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              var _k = void 0;\n\n              if (y < y1) {\n                _k = 0;\n              } else if (y1 === y2) {\n                _k = 1;\n              } else {\n                _k = (y1 - y) / (y1 - y2);\n              }\n\n              xa = x1 - (x1 - x2) * _k;\n              car = c1r - (c1r - c2r) * _k;\n              cag = c1g - (c1g - c2g) * _k;\n              cab = c1b - (c1b - c2b) * _k;\n            } else {\n              var _k2 = void 0;\n\n              if (y > y3) {\n                _k2 = 1;\n              } else if (y2 === y3) {\n                _k2 = 0;\n              } else {\n                _k2 = (y2 - y) / (y2 - y3);\n              }\n\n              xa = x2 - (x2 - x3) * _k2;\n              car = c2r - (c2r - c3r) * _k2;\n              cag = c2g - (c2g - c3g) * _k2;\n              cab = c2b - (c2b - c3b) * _k2;\n            }\n\n            var k = void 0;\n\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            var x1_ = Math.round(Math.min(xa, xb));\n            var x2_ = Math.round(Math.max(xa, xb));\n            var j = rowSize * y + x1_ * 4;\n\n            for (var x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n\n        function drawFigure(data, figure, context) {\n          var ps = figure.coords;\n          var cs = figure.colors;\n          var i, ii;\n\n          switch (figure.type) {\n            case \"lattice\":\n              var verticesPerRow = figure.verticesPerRow;\n              var rows = Math.floor(ps.length / verticesPerRow) - 1;\n              var cols = verticesPerRow - 1;\n\n              for (i = 0; i < rows; i++) {\n                var q = i * verticesPerRow;\n\n                for (var j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n\n              break;\n\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n\n        function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n          var EXPECTED_SCALE = 1.1;\n          var MAX_PATTERN_SIZE = 3000;\n          var BORDER_SIZE = 2;\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n          var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n          var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var scaleX = boundsWidth / width;\n          var scaleY = boundsHeight / height;\n          var context = {\n            coords: coords,\n            colors: colors,\n            offsetX: -offsetX,\n            offsetY: -offsetY,\n            scaleX: 1 / scaleX,\n            scaleY: 1 / scaleY\n          };\n          var paddedWidth = width + BORDER_SIZE * 2;\n          var paddedHeight = height + BORDER_SIZE * 2;\n          var canvas, tmpCanvas, i, ii;\n\n          if (webGLContext.isEnabled) {\n            canvas = webGLContext.drawFigures({\n              width: width,\n              height: height,\n              backgroundColor: backgroundColor,\n              figures: figures,\n              context: context\n            });\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          } else {\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            var tmpCtx = tmpCanvas.context;\n            var data = tmpCtx.createImageData(width, height);\n\n            if (backgroundColor) {\n              var bytes = data.data;\n\n              for (i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n\n            for (i = 0; i < figures.length; i++) {\n              drawFigure(data, figures[i], context);\n            }\n\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          }\n\n          return {\n            canvas: canvas,\n            offsetX: offsetX - BORDER_SIZE * scaleX,\n            offsetY: offsetY - BORDER_SIZE * scaleY,\n            scaleX: scaleX,\n            scaleY: scaleY\n          };\n        }\n\n        return createMeshCanvas;\n      }();\n\n      ShadingIRs.Mesh = {\n        fromIR: function Mesh_fromIR(raw) {\n          var coords = raw[2];\n          var colors = raw[3];\n          var figures = raw[4];\n          var bounds = raw[5];\n          var matrix = raw[6];\n          var bbox = raw[7];\n          var background = raw[8];\n          return {\n            type: \"Pattern\",\n            getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n              applyBoundingBox(ctx, bbox);\n              var scale;\n\n              if (shadingFill) {\n                scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n              } else {\n                scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n                if (matrix) {\n                  var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n                  scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n                }\n              }\n\n              var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n              if (!shadingFill) {\n                ctx.setTransform.apply(ctx, owner.baseTransform);\n\n                if (matrix) {\n                  ctx.transform.apply(ctx, matrix);\n                }\n              }\n\n              ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n              ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n              return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n            }\n          };\n        }\n      };\n      ShadingIRs.Dummy = {\n        fromIR: function Dummy_fromIR() {\n          return {\n            type: \"Pattern\",\n            getPattern: function Dummy_fromIR_getPattern() {\n              return \"hotpink\";\n            }\n          };\n        }\n      };\n\n      function getShadingPatternFromIR(raw) {\n        var shadingIR = ShadingIRs[raw[0]];\n\n        if (!shadingIR) {\n          throw new Error(\"Unknown IR type: \".concat(raw[0]));\n        }\n\n        return shadingIR.fromIR(raw);\n      }\n\n      var TilingPattern = function TilingPatternClosure() {\n        var PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n        var MAX_PATTERN_SIZE = 3000;\n\n        function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n          this.operatorList = IR[2];\n          this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n          this.bbox = IR[4];\n          this.xstep = IR[5];\n          this.ystep = IR[6];\n          this.paintType = IR[7];\n          this.tilingType = IR[8];\n          this.color = color;\n          this.canvasGraphicsFactory = canvasGraphicsFactory;\n          this.baseTransform = baseTransform;\n          this.type = \"Pattern\";\n          this.ctx = ctx;\n        }\n\n        TilingPattern.prototype = {\n          createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n            var operatorList = this.operatorList;\n            var bbox = this.bbox;\n            var xstep = this.xstep;\n            var ystep = this.ystep;\n            var paintType = this.paintType;\n            var tilingType = this.tilingType;\n            var color = this.color;\n            var canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            var x0 = bbox[0],\n                y0 = bbox[1],\n                x1 = bbox[2],\n                y1 = bbox[3];\n\n            var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n            var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n            var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            var tmpCtx = tmpCanvas.context;\n            var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            graphics.transform(1, 0, 0, 1, -x0, -y0);\n            this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n            graphics.executeOperatorList(operatorList);\n            this.ctx.transform(1, 0, 0, 1, x0, y0);\n            this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n            return tmpCanvas.canvas;\n          },\n          getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n            var size = Math.ceil(step * scale);\n\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n\n            return {\n              scale: scale,\n              size: size\n            };\n          },\n          clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n            if (Array.isArray(bbox) && bbox.length === 4) {\n              var bboxWidth = x1 - x0;\n              var bboxHeight = y1 - y0;\n              graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n              graphics.clip();\n              graphics.endPath();\n            }\n          },\n          setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            var context = graphics.ctx,\n                current = graphics.current;\n\n            switch (paintType) {\n              case PaintType.COLORED:\n                var ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n\n              case PaintType.UNCOLORED:\n                var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n\n              default:\n                throw new _util.FormatError(\"Unsupported paint type: \".concat(paintType));\n            }\n          },\n          getPattern: function TilingPattern_getPattern(ctx, owner) {\n            ctx = this.ctx;\n            ctx.setTransform.apply(ctx, this.baseTransform);\n            ctx.transform.apply(ctx, this.matrix);\n            var temporaryPatternCanvas = this.createPatternCanvas(owner);\n            return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n          }\n        };\n        return TilingPattern;\n      }();\n\n      exports.TilingPattern = TilingPattern;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalWorkerOptions = void 0;\n      var GlobalWorkerOptions = Object.create(null);\n      exports.GlobalWorkerOptions = GlobalWorkerOptions;\n      GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      var StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n\n      function wrapReason(reason) {\n        if (typeof reason !== \"object\" || reason === null) {\n          return reason;\n        }\n\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n\n      var MessageHandler = /*#__PURE__*/function () {\n        function MessageHandler(sourceName, targetName, comObj) {\n          var _this27 = this;\n\n          _classCallCheck(this, MessageHandler);\n\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.postMessageTransfers = true;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n\n          this._onComObjOnMessage = function (event) {\n            var data = event.data;\n\n            if (data.targetName !== _this27.sourceName) {\n              return;\n            }\n\n            if (data.stream) {\n              _this27._processStreamMessage(data);\n\n              return;\n            }\n\n            if (data.callback) {\n              var callbackId = data.callbackId;\n              var capability = _this27.callbackCapabilities[callbackId];\n\n              if (!capability) {\n                throw new Error(\"Cannot resolve callback \".concat(callbackId));\n              }\n\n              delete _this27.callbackCapabilities[callbackId];\n\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n\n              return;\n            }\n\n            var action = _this27.actionHandler[data.action];\n\n            if (!action) {\n              throw new Error(\"Unknown action from worker: \".concat(data.action));\n            }\n\n            if (data.callbackId) {\n              var cbSourceName = _this27.sourceName;\n              var cbTargetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n\n            if (data.streamId) {\n              _this27._createStreamSink(data);\n\n              return;\n            }\n\n            action(data.data);\n          };\n\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n\n        _createClass(MessageHandler, [{\n          key: \"on\",\n          value: function on(actionName, handler) {\n            var ah = this.actionHandler;\n\n            if (ah[actionName]) {\n              throw new Error(\"There is already an actionName called \\\"\".concat(actionName, \"\\\"\"));\n            }\n\n            ah[actionName] = handler;\n          }\n        }, {\n          key: \"send\",\n          value: function send(actionName, data, transfers) {\n            this._postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data: data\n            }, transfers);\n          }\n        }, {\n          key: \"sendWithPromise\",\n          value: function sendWithPromise(actionName, data, transfers) {\n            var callbackId = this.callbackId++;\n            var capability = (0, _util.createPromiseCapability)();\n            this.callbackCapabilities[callbackId] = capability;\n\n            try {\n              this._postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId: callbackId,\n                data: data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n\n            return capability.promise;\n          }\n        }, {\n          key: \"sendWithStream\",\n          value: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n            var _this28 = this;\n\n            var streamId = this.streamId++;\n            var sourceName = this.sourceName;\n            var targetName = this.targetName;\n            var comObj = this.comObj;\n            return new ReadableStream({\n              start: function start(controller) {\n                var startCapability = (0, _util.createPromiseCapability)();\n                _this28.streamControllers[streamId] = {\n                  controller: controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n\n                _this28._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  action: actionName,\n                  streamId: streamId,\n                  data: data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n\n                return startCapability.promise;\n              },\n              pull: function pull(controller) {\n                var pullCapability = (0, _util.createPromiseCapability)();\n                _this28.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL,\n                  streamId: streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: function cancel(reason) {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                var cancelCapability = (0, _util.createPromiseCapability)();\n                _this28.streamControllers[streamId].cancelCall = cancelCapability;\n                _this28.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n        }, {\n          key: \"_createStreamSink\",\n          value: function _createStreamSink(data) {\n            var self = this;\n            var action = this.actionHandler[data.action];\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n            var streamSink = {\n              enqueue: function enqueue(chunk) {\n                var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                var transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                var lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = (0, _util.createPromiseCapability)();\n                  this.ready = this.sinkCapability.promise;\n                }\n\n                self._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId: streamId,\n                  chunk: chunk\n                }, transfers);\n              },\n              close: function close() {\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId: streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n              error: function error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ERROR,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n              sinkCapability: (0, _util.createPromiseCapability)(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n        }, {\n          key: \"_processStreamMessage\",\n          value: function _processStreamMessage(data) {\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].startCall.resolve();\n                } else {\n                  this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].pullCall.resolve();\n                } else {\n                  this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL:\n                if (!this.streamSinks[streamId]) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                  break;\n                }\n\n                if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                  this.streamSinks[streamId].sinkCapability.resolve();\n                }\n\n                this.streamSinks[streamId].desiredSize = data.desiredSize;\n                var onPull = this.streamSinks[data.streamId].onPull;\n                new Promise(function (resolve) {\n                  resolve(onPull && onPull());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n\n                this.streamControllers[streamId].controller.enqueue(data.chunk);\n                break;\n\n              case StreamKind.CLOSE:\n                (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n\n                this.streamControllers[streamId].isClosed = true;\n                this.streamControllers[streamId].controller.close();\n\n                this._deleteStreamController(streamId);\n\n                break;\n\n              case StreamKind.ERROR:\n                (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n                this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n                this._deleteStreamController(streamId);\n\n                break;\n\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].cancelCall.resolve();\n                } else {\n                  this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n                }\n\n                this._deleteStreamController(streamId);\n\n                break;\n\n              case StreamKind.CANCEL:\n                if (!this.streamSinks[streamId]) {\n                  break;\n                }\n\n                var onCancel = this.streamSinks[data.streamId].onCancel;\n                new Promise(function (resolve) {\n                  resolve(onCancel && onCancel(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n                this.streamSinks[streamId].isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n        }, {\n          key: \"_deleteStreamController\",\n          value: function () {\n            var _deleteStreamController2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(streamId) {\n              return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _context6.next = 2;\n                      return Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n                        return capability && capability.promise;\n                      }));\n\n                    case 2:\n                      delete this.streamControllers[streamId];\n\n                    case 3:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, _callee6, this);\n            }));\n\n            function _deleteStreamController(_x5) {\n              return _deleteStreamController2.apply(this, arguments);\n            }\n\n            return _deleteStreamController;\n          }()\n        }, {\n          key: \"_postMessage\",\n          value: function _postMessage(message, transfers) {\n            if (transfers && this.postMessageTransfers) {\n              this.comObj.postMessage(message, transfers);\n            } else {\n              this.comObj.postMessage(message);\n            }\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n        }]);\n\n        return MessageHandler;\n      }();\n\n      exports.MessageHandler = MessageHandler;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Metadata = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _xml_parser = __w_pdfjs_require__(13);\n\n      var Metadata = /*#__PURE__*/function () {\n        function Metadata(data) {\n          _classCallCheck(this, Metadata);\n\n          (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n          data = this._repair(data);\n          var parser = new _xml_parser.SimpleXMLParser();\n          var xmlDocument = parser.parseFromString(data);\n          this._metadataMap = new Map();\n\n          if (xmlDocument) {\n            this._parse(xmlDocument);\n          }\n        }\n\n        _createClass(Metadata, [{\n          key: \"_repair\",\n          value: function _repair(data) {\n            return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n              var bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n                return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n              }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n                switch (name) {\n                  case \"amp\":\n                    return \"&\";\n\n                  case \"apos\":\n                    return \"'\";\n\n                  case \"gt\":\n                    return \">\";\n\n                  case \"lt\":\n                    return \"<\";\n\n                  case \"quot\":\n                    return '\"';\n                }\n\n                throw new Error(\"_repair: \".concat(name, \" isn't defined.\"));\n              });\n              var chars = \"\";\n\n              for (var i = 0, ii = bytes.length; i < ii; i += 2) {\n                var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n                if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n                  chars += String.fromCharCode(code);\n                } else {\n                  chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n                }\n              }\n\n              return \">\" + chars;\n            });\n          }\n        }, {\n          key: \"_parse\",\n          value: function _parse(xmlDocument) {\n            var rdf = xmlDocument.documentElement;\n\n            if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n              rdf = rdf.firstChild;\n\n              while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n                rdf = rdf.nextSibling;\n              }\n            }\n\n            var nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n\n            if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n              return;\n            }\n\n            var children = rdf.childNodes;\n\n            for (var i = 0, ii = children.length; i < ii; i++) {\n              var desc = children[i];\n\n              if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n                continue;\n              }\n\n              for (var j = 0, jj = desc.childNodes.length; j < jj; j++) {\n                if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n                  var entry = desc.childNodes[j];\n                  var name = entry.nodeName.toLowerCase();\n\n                  this._metadataMap.set(name, entry.textContent.trim());\n                }\n              }\n            }\n          }\n        }, {\n          key: \"get\",\n          value: function get(name) {\n            return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n          }\n        }, {\n          key: \"getAll\",\n          value: function getAll() {\n            var obj = Object.create(null);\n\n            var _iterator8 = _createForOfIteratorHelper(this._metadataMap),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _step8$value = _slicedToArray(_step8.value, 2),\n                    key = _step8$value[0],\n                    value = _step8$value[1];\n\n                obj[key] = value;\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n\n            return obj;\n          }\n        }, {\n          key: \"has\",\n          value: function has(name) {\n            return this._metadataMap.has(name);\n          }\n        }]);\n\n        return Metadata;\n      }();\n\n      exports.Metadata = Metadata;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SimpleXMLParser = void 0;\n      var XMLParserErrorCode = {\n        NoError: 0,\n        EndOfDocument: -1,\n        UnterminatedCdat: -2,\n        UnterminatedXmlDeclaration: -3,\n        UnterminatedDoctypeDeclaration: -4,\n        UnterminatedComment: -5,\n        MalformedElement: -6,\n        OutOfMemory: -7,\n        UnterminatedAttributeValue: -8,\n        UnterminatedElement: -9,\n        ElementNeverBegun: -10\n      };\n\n      function isWhitespace(s, index) {\n        var ch = s[index];\n        return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n      }\n\n      function isWhitespaceString(s) {\n        for (var i = 0, ii = s.length; i < ii; i++) {\n          if (!isWhitespace(s, i)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      var XMLParserBase = /*#__PURE__*/function () {\n        function XMLParserBase() {\n          _classCallCheck(this, XMLParserBase);\n        }\n\n        _createClass(XMLParserBase, [{\n          key: \"_resolveEntities\",\n          value: function _resolveEntities(s) {\n            var _this29 = this;\n\n            return s.replace(/&([^;]+);/g, function (all, entity) {\n              if (entity.substring(0, 2) === \"#x\") {\n                return String.fromCharCode(parseInt(entity.substring(2), 16));\n              } else if (entity.substring(0, 1) === \"#\") {\n                return String.fromCharCode(parseInt(entity.substring(1), 10));\n              }\n\n              switch (entity) {\n                case \"lt\":\n                  return \"<\";\n\n                case \"gt\":\n                  return \">\";\n\n                case \"amp\":\n                  return \"&\";\n\n                case \"quot\":\n                  return '\"';\n              }\n\n              return _this29.onResolveEntity(entity);\n            });\n          }\n        }, {\n          key: \"_parseContent\",\n          value: function _parseContent(s, start) {\n            var attributes = [];\n            var pos = start;\n\n            function skipWs() {\n              while (pos < s.length && isWhitespace(s, pos)) {\n                ++pos;\n              }\n            }\n\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n              ++pos;\n            }\n\n            var name = s.substring(start, pos);\n            skipWs();\n\n            while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n              skipWs();\n              var attrName = \"\",\n                  attrValue = \"\";\n\n              while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n                attrName += s[pos];\n                ++pos;\n              }\n\n              skipWs();\n\n              if (s[pos] !== \"=\") {\n                return null;\n              }\n\n              ++pos;\n              skipWs();\n              var attrEndChar = s[pos];\n\n              if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n                return null;\n              }\n\n              var attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n              if (attrEndIndex < 0) {\n                return null;\n              }\n\n              attrValue = s.substring(pos, attrEndIndex);\n              attributes.push({\n                name: attrName,\n                value: this._resolveEntities(attrValue)\n              });\n              pos = attrEndIndex + 1;\n              skipWs();\n            }\n\n            return {\n              name: name,\n              attributes: attributes,\n              parsed: pos - start\n            };\n          }\n        }, {\n          key: \"_parseProcessingInstruction\",\n          value: function _parseProcessingInstruction(s, start) {\n            var pos = start;\n\n            function skipWs() {\n              while (pos < s.length && isWhitespace(s, pos)) {\n                ++pos;\n              }\n            }\n\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n              ++pos;\n            }\n\n            var name = s.substring(start, pos);\n            skipWs();\n            var attrStart = pos;\n\n            while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n              ++pos;\n            }\n\n            var value = s.substring(attrStart, pos);\n            return {\n              name: name,\n              value: value,\n              parsed: pos - start\n            };\n          }\n        }, {\n          key: \"parseXml\",\n          value: function parseXml(s) {\n            var i = 0;\n\n            while (i < s.length) {\n              var ch = s[i];\n              var j = i;\n\n              if (ch === \"<\") {\n                ++j;\n                var ch2 = s[j];\n                var q = void 0;\n\n                switch (ch2) {\n                  case \"/\":\n                    ++j;\n                    q = s.indexOf(\">\", j);\n\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedElement);\n                      return;\n                    }\n\n                    this.onEndElement(s.substring(j, q));\n                    j = q + 1;\n                    break;\n\n                  case \"?\":\n                    ++j;\n\n                    var pi = this._parseProcessingInstruction(s, j);\n\n                    if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                      this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                      return;\n                    }\n\n                    this.onPi(pi.name, pi.value);\n                    j += pi.parsed + 2;\n                    break;\n\n                  case \"!\":\n                    if (s.substring(j + 1, j + 3) === \"--\") {\n                      q = s.indexOf(\"-->\", j + 3);\n\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedComment);\n                        return;\n                      }\n\n                      this.onComment(s.substring(j + 3, q));\n                      j = q + 3;\n                    } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                      q = s.indexOf(\"]]>\", j + 8);\n\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedCdat);\n                        return;\n                      }\n\n                      this.onCdata(s.substring(j + 8, q));\n                      j = q + 3;\n                    } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                      var q2 = s.indexOf(\"[\", j + 8);\n                      var complexDoctype = false;\n                      q = s.indexOf(\">\", j + 8);\n\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                        return;\n                      }\n\n                      if (q2 > 0 && q > q2) {\n                        q = s.indexOf(\"]>\", j + 8);\n\n                        if (q < 0) {\n                          this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                          return;\n                        }\n\n                        complexDoctype = true;\n                      }\n\n                      var doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                      this.onDoctype(doctypeContent);\n                      j = q + (complexDoctype ? 2 : 1);\n                    } else {\n                      this.onError(XMLParserErrorCode.MalformedElement);\n                      return;\n                    }\n\n                    break;\n\n                  default:\n                    var content = this._parseContent(s, j);\n\n                    if (content === null) {\n                      this.onError(XMLParserErrorCode.MalformedElement);\n                      return;\n                    }\n\n                    var isClosed = false;\n\n                    if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                      isClosed = true;\n                    } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                      this.onError(XMLParserErrorCode.UnterminatedElement);\n                      return;\n                    }\n\n                    this.onBeginElement(content.name, content.attributes, isClosed);\n                    j += content.parsed + (isClosed ? 2 : 1);\n                    break;\n                }\n              } else {\n                while (j < s.length && s[j] !== \"<\") {\n                  j++;\n                }\n\n                var text = s.substring(i, j);\n                this.onText(this._resolveEntities(text));\n              }\n\n              i = j;\n            }\n          }\n        }, {\n          key: \"onResolveEntity\",\n          value: function onResolveEntity(name) {\n            return \"&\".concat(name, \";\");\n          }\n        }, {\n          key: \"onPi\",\n          value: function onPi(name, value) {}\n        }, {\n          key: \"onComment\",\n          value: function onComment(text) {}\n        }, {\n          key: \"onCdata\",\n          value: function onCdata(text) {}\n        }, {\n          key: \"onDoctype\",\n          value: function onDoctype(doctypeContent) {}\n        }, {\n          key: \"onText\",\n          value: function onText(text) {}\n        }, {\n          key: \"onBeginElement\",\n          value: function onBeginElement(name, attributes, isEmpty) {}\n        }, {\n          key: \"onEndElement\",\n          value: function onEndElement(name) {}\n        }, {\n          key: \"onError\",\n          value: function onError(code) {}\n        }]);\n\n        return XMLParserBase;\n      }();\n\n      var SimpleDOMNode = /*#__PURE__*/function () {\n        function SimpleDOMNode(nodeName, nodeValue) {\n          _classCallCheck(this, SimpleDOMNode);\n\n          this.nodeName = nodeName;\n          this.nodeValue = nodeValue;\n          Object.defineProperty(this, \"parentNode\", {\n            value: null,\n            writable: true\n          });\n        }\n\n        _createClass(SimpleDOMNode, [{\n          key: \"firstChild\",\n          get: function get() {\n            return this.childNodes && this.childNodes[0];\n          }\n        }, {\n          key: \"nextSibling\",\n          get: function get() {\n            var childNodes = this.parentNode.childNodes;\n\n            if (!childNodes) {\n              return undefined;\n            }\n\n            var index = childNodes.indexOf(this);\n\n            if (index === -1) {\n              return undefined;\n            }\n\n            return childNodes[index + 1];\n          }\n        }, {\n          key: \"textContent\",\n          get: function get() {\n            if (!this.childNodes) {\n              return this.nodeValue || \"\";\n            }\n\n            return this.childNodes.map(function (child) {\n              return child.textContent;\n            }).join(\"\");\n          }\n        }, {\n          key: \"hasChildNodes\",\n          value: function hasChildNodes() {\n            return this.childNodes && this.childNodes.length > 0;\n          }\n        }]);\n\n        return SimpleDOMNode;\n      }();\n\n      var SimpleXMLParser = /*#__PURE__*/function (_XMLParserBase) {\n        _inherits(SimpleXMLParser, _XMLParserBase);\n\n        var _super10 = _createSuper(SimpleXMLParser);\n\n        function SimpleXMLParser() {\n          var _this30;\n\n          _classCallCheck(this, SimpleXMLParser);\n\n          _this30 = _super10.call(this);\n          _this30._currentFragment = null;\n          _this30._stack = null;\n          _this30._errorCode = XMLParserErrorCode.NoError;\n          return _this30;\n        }\n\n        _createClass(SimpleXMLParser, [{\n          key: \"parseFromString\",\n          value: function parseFromString(data) {\n            this._currentFragment = [];\n            this._stack = [];\n            this._errorCode = XMLParserErrorCode.NoError;\n            this.parseXml(data);\n\n            if (this._errorCode !== XMLParserErrorCode.NoError) {\n              return undefined;\n            }\n\n            var _this$_currentFragmen = _slicedToArray(this._currentFragment, 1),\n                documentElement = _this$_currentFragmen[0];\n\n            if (!documentElement) {\n              return undefined;\n            }\n\n            return {\n              documentElement: documentElement\n            };\n          }\n        }, {\n          key: \"onResolveEntity\",\n          value: function onResolveEntity(name) {\n            switch (name) {\n              case \"apos\":\n                return \"'\";\n            }\n\n            return _get(_getPrototypeOf(SimpleXMLParser.prototype), \"onResolveEntity\", this).call(this, name);\n          }\n        }, {\n          key: \"onText\",\n          value: function onText(text) {\n            if (isWhitespaceString(text)) {\n              return;\n            }\n\n            var node = new SimpleDOMNode(\"#text\", text);\n\n            this._currentFragment.push(node);\n          }\n        }, {\n          key: \"onCdata\",\n          value: function onCdata(text) {\n            var node = new SimpleDOMNode(\"#text\", text);\n\n            this._currentFragment.push(node);\n          }\n        }, {\n          key: \"onBeginElement\",\n          value: function onBeginElement(name, attributes, isEmpty) {\n            var node = new SimpleDOMNode(name);\n            node.childNodes = [];\n\n            this._currentFragment.push(node);\n\n            if (isEmpty) {\n              return;\n            }\n\n            this._stack.push(this._currentFragment);\n\n            this._currentFragment = node.childNodes;\n          }\n        }, {\n          key: \"onEndElement\",\n          value: function onEndElement(name) {\n            this._currentFragment = this._stack.pop() || [];\n            var lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n            if (!lastElement) {\n              return;\n            }\n\n            for (var i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n              lastElement.childNodes[i].parentNode = lastElement;\n            }\n          }\n        }, {\n          key: \"onError\",\n          value: function onError(code) {\n            this._errorCode = code;\n          }\n        }]);\n\n        return SimpleXMLParser;\n      }(XMLParserBase);\n\n      exports.SimpleXMLParser = SimpleXMLParser;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDataTransportStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var PDFDataTransportStream = /*#__PURE__*/function () {\n        function PDFDataTransportStream(params, pdfDataRangeTransport) {\n          var _this31 = this;\n\n          _classCallCheck(this, PDFDataTransportStream);\n\n          (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n          this._queuedChunks = [];\n          this._progressiveDone = params.progressiveDone || false;\n          var initialData = params.initialData;\n\n          if (initialData && initialData.length > 0) {\n            var buffer = new Uint8Array(initialData).buffer;\n\n            this._queuedChunks.push(buffer);\n          }\n\n          this._pdfDataRangeTransport = pdfDataRangeTransport;\n          this._isStreamingSupported = !params.disableStream;\n          this._isRangeSupported = !params.disableRange;\n          this._contentLength = params.length;\n          this._fullRequestReader = null;\n          this._rangeReaders = [];\n\n          this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {\n            _this31._onReceiveData({\n              begin: begin,\n              chunk: chunk\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressListener(function (loaded, total) {\n            _this31._onProgress({\n              loaded: loaded,\n              total: total\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {\n            _this31._onReceiveData({\n              chunk: chunk\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressiveDoneListener(function () {\n            _this31._onProgressiveDone();\n          });\n\n          this._pdfDataRangeTransport.transportReady();\n        }\n\n        _createClass(PDFDataTransportStream, [{\n          key: \"_onReceiveData\",\n          value: function _onReceiveData(args) {\n            var buffer = new Uint8Array(args.chunk).buffer;\n\n            if (args.begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              var found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== args.begin) {\n                  return false;\n                }\n\n                rangeReader._enqueue(buffer);\n\n                return true;\n              });\n\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n        }, {\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (evt.total === undefined) {\n              var firstReader = this._rangeReaders[0];\n\n              if (firstReader && firstReader.onProgress) {\n                firstReader.onProgress({\n                  loaded: evt.loaded\n                });\n              }\n            } else {\n              var fullReader = this._fullRequestReader;\n\n              if (fullReader && fullReader.onProgress) {\n                fullReader.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            }\n          }\n        }, {\n          key: \"_onProgressiveDone\",\n          value: function _onProgressiveDone() {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.progressiveDone();\n            }\n\n            this._progressiveDone = true;\n          }\n        }, {\n          key: \"_removeRangeReader\",\n          value: function _removeRangeReader(reader) {\n            var i = this._rangeReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            var queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            var reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n            this._rangeReaders.push(reader);\n\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            var readers = this._rangeReaders.slice(0);\n\n            readers.forEach(function (rangeReader) {\n              rangeReader.cancel(reason);\n            });\n\n            this._pdfDataRangeTransport.abort();\n          }\n        }]);\n\n        return PDFDataTransportStream;\n      }();\n\n      exports.PDFDataTransportStream = PDFDataTransportStream;\n\n      var PDFDataTransportStreamReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamReader(stream, queuedChunks) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          _classCallCheck(this, PDFDataTransportStreamReader);\n\n          this._stream = stream;\n          this._done = progressiveDone || false;\n          this._filename = null;\n          this._queuedChunks = queuedChunks || [];\n          this._loaded = 0;\n\n          var _iterator9 = _createForOfIteratorHelper(this._queuedChunks),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var chunk = _step9.value;\n              this._loaded += chunk.byteLength;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n\n          this._requests = [];\n          this._headersReady = Promise.resolve();\n          stream._fullRequestReader = this;\n          this.onProgress = null;\n        }\n\n        _createClass(PDFDataTransportStreamReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n\n            this._loaded += chunk.byteLength;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReady;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._stream._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._stream._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._stream._contentLength;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      if (!(this._queuedChunks.length > 0)) {\n                        _context7.next = 3;\n                        break;\n                      }\n\n                      chunk = this._queuedChunks.shift();\n                      return _context7.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n\n                    case 3:\n                      if (!this._done) {\n                        _context7.next = 5;\n                        break;\n                      }\n\n                      return _context7.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 5:\n                      requestCapability = (0, _util.createPromiseCapability)();\n\n                      this._requests.push(requestCapability);\n\n                      return _context7.abrupt(\"return\", requestCapability.promise);\n\n                    case 8:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, this);\n            }));\n\n            function read() {\n              return _read.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n          }\n        }, {\n          key: \"progressiveDone\",\n          value: function progressiveDone() {\n            if (this._done) {\n              return;\n            }\n\n            this._done = true;\n          }\n        }]);\n\n        return PDFDataTransportStreamReader;\n      }();\n\n      var PDFDataTransportStreamRangeReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamRangeReader(stream, begin, end) {\n          _classCallCheck(this, PDFDataTransportStreamRangeReader);\n\n          this._stream = stream;\n          this._begin = begin;\n          this._end = end;\n          this._queuedChunk = null;\n          this._requests = [];\n          this._done = false;\n          this.onProgress = null;\n        }\n\n        _createClass(PDFDataTransportStreamRangeReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              var requestsCapability = this._requests.shift();\n\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n\n              this._requests.forEach(function (requestCapability) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              });\n\n              this._requests = [];\n            }\n\n            this._done = true;\n\n            this._stream._removeRangeReader(this);\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      if (!this._queuedChunk) {\n                        _context8.next = 4;\n                        break;\n                      }\n\n                      chunk = this._queuedChunk;\n                      this._queuedChunk = null;\n                      return _context8.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n\n                    case 4:\n                      if (!this._done) {\n                        _context8.next = 6;\n                        break;\n                      }\n\n                      return _context8.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 6:\n                      requestCapability = (0, _util.createPromiseCapability)();\n\n                      this._requests.push(requestCapability);\n\n                      return _context8.abrupt(\"return\", requestCapability.promise);\n\n                    case 9:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8, this);\n            }));\n\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n\n            this._stream._removeRangeReader(this);\n          }\n        }]);\n\n        return PDFDataTransportStreamRangeReader;\n      }();\n      /***/\n\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebGLContext = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var WebGLContext = /*#__PURE__*/function () {\n        function WebGLContext(_ref28) {\n          var _ref28$enable = _ref28.enable,\n              enable = _ref28$enable === void 0 ? false : _ref28$enable;\n\n          _classCallCheck(this, WebGLContext);\n\n          this._enabled = enable === true;\n        }\n\n        _createClass(WebGLContext, [{\n          key: \"isEnabled\",\n          get: function get() {\n            var enabled = this._enabled;\n\n            if (enabled) {\n              enabled = WebGLUtils.tryInitGL();\n            }\n\n            return (0, _util.shadow)(this, \"isEnabled\", enabled);\n          }\n        }, {\n          key: \"composeSMask\",\n          value: function composeSMask(_ref29) {\n            var layer = _ref29.layer,\n                mask = _ref29.mask,\n                properties = _ref29.properties;\n            return WebGLUtils.composeSMask(layer, mask, properties);\n          }\n        }, {\n          key: \"drawFigures\",\n          value: function drawFigures(_ref30) {\n            var width = _ref30.width,\n                height = _ref30.height,\n                backgroundColor = _ref30.backgroundColor,\n                figures = _ref30.figures,\n                context = _ref30.context;\n            return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            WebGLUtils.cleanup();\n          }\n        }]);\n\n        return WebGLContext;\n      }();\n\n      exports.WebGLContext = WebGLContext;\n\n      var WebGLUtils = function WebGLUtilsClosure() {\n        function loadShader(gl, code, shaderType) {\n          var shader = gl.createShader(shaderType);\n          gl.shaderSource(shader, code);\n          gl.compileShader(shader);\n          var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n          if (!compiled) {\n            var errorMsg = gl.getShaderInfoLog(shader);\n            throw new Error(\"Error during shader compilation: \" + errorMsg);\n          }\n\n          return shader;\n        }\n\n        function createVertexShader(gl, code) {\n          return loadShader(gl, code, gl.VERTEX_SHADER);\n        }\n\n        function createFragmentShader(gl, code) {\n          return loadShader(gl, code, gl.FRAGMENT_SHADER);\n        }\n\n        function createProgram(gl, shaders) {\n          var program = gl.createProgram();\n\n          for (var i = 0, ii = shaders.length; i < ii; ++i) {\n            gl.attachShader(program, shaders[i]);\n          }\n\n          gl.linkProgram(program);\n          var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n          if (!linked) {\n            var errorMsg = gl.getProgramInfoLog(program);\n            throw new Error(\"Error during program linking: \" + errorMsg);\n          }\n\n          return program;\n        }\n\n        function createTexture(gl, image, textureId) {\n          gl.activeTexture(textureId);\n          var texture = gl.createTexture();\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n          return texture;\n        }\n\n        var currentGL, currentCanvas;\n\n        function generateGL() {\n          if (currentGL) {\n            return;\n          }\n\n          currentCanvas = document.createElement(\"canvas\");\n          currentGL = currentCanvas.getContext(\"webgl\", {\n            premultipliedalpha: false\n          });\n        }\n\n        var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n        var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n        var smaskCache = null;\n\n        function initSmaskGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n          cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n          var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n          var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n          var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n          var texCoordBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(texCoordLocation);\n          gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.uniform1i(texLayerLocation, 0);\n          gl.uniform1i(texMaskLocation, 1);\n          smaskCache = cache;\n        }\n\n        function composeSMask(layer, mask, properties) {\n          var width = layer.width,\n              height = layer.height;\n\n          if (!smaskCache) {\n            initSmaskGL();\n          }\n\n          var cache = smaskCache,\n              canvas = cache.canvas,\n              gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n\n          if (properties.backdrop) {\n            gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n          } else {\n            gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n          }\n\n          gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n          var texture = createTexture(gl, layer, gl.TEXTURE0);\n          var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n          var buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.clearColor(0, 0, 0, 0);\n          gl.enable(gl.BLEND);\n          gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\n          gl.flush();\n          gl.deleteTexture(texture);\n          gl.deleteTexture(maskTexture);\n          gl.deleteBuffer(buffer);\n          return canvas;\n        }\n\n        var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n        var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n        var figuresCache = null;\n\n        function initFiguresGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n          cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n          figuresCache = cache;\n        }\n\n        function drawFigures(width, height, backgroundColor, figures, context) {\n          if (!figuresCache) {\n            initFiguresGL();\n          }\n\n          var cache = figuresCache,\n              canvas = cache.canvas,\n              gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n          var count = 0;\n          var i, ii, rows;\n\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            switch (figures[i].type) {\n              case \"lattice\":\n                rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n                count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n                break;\n\n              case \"triangles\":\n                count += figures[i].coords.length;\n                break;\n            }\n          }\n\n          var coords = new Float32Array(count * 2);\n          var colors = new Uint8Array(count * 3);\n          var coordsMap = context.coords,\n              colorsMap = context.colors;\n          var pIndex = 0,\n              cIndex = 0;\n\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            var figure = figures[i],\n                ps = figure.coords,\n                cs = figure.colors;\n\n            switch (figure.type) {\n              case \"lattice\":\n                var cols = figure.verticesPerRow;\n                rows = ps.length / cols | 0;\n\n                for (var row = 1; row < rows; row++) {\n                  var offset = row * cols + 1;\n\n                  for (var col = 1; col < cols; col++, offset++) {\n                    coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                    coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                    coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                    coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                    coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                    coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                    colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                    colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                    colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                    colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                    colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                    colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                    colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                    colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                    colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                    coords[pIndex + 6] = coords[pIndex + 2];\n                    coords[pIndex + 7] = coords[pIndex + 3];\n                    coords[pIndex + 8] = coords[pIndex + 4];\n                    coords[pIndex + 9] = coords[pIndex + 5];\n                    coords[pIndex + 10] = coordsMap[ps[offset]];\n                    coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                    colors[cIndex + 9] = colors[cIndex + 3];\n                    colors[cIndex + 10] = colors[cIndex + 4];\n                    colors[cIndex + 11] = colors[cIndex + 5];\n                    colors[cIndex + 12] = colors[cIndex + 6];\n                    colors[cIndex + 13] = colors[cIndex + 7];\n                    colors[cIndex + 14] = colors[cIndex + 8];\n                    colors[cIndex + 15] = colorsMap[cs[offset]];\n                    colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                    colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                    pIndex += 12;\n                    cIndex += 18;\n                  }\n                }\n\n                break;\n\n              case \"triangles\":\n                for (var j = 0, jj = ps.length; j < jj; j++) {\n                  coords[pIndex] = coordsMap[ps[j]];\n                  coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                  colors[cIndex] = colorsMap[cs[j]];\n                  colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                  pIndex += 2;\n                  cIndex += 3;\n                }\n\n                break;\n            }\n          }\n\n          if (backgroundColor) {\n            gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n          } else {\n            gl.clearColor(0, 0, 0, 0);\n          }\n\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          var coordsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          var colorsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.colorLocation);\n          gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n          gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n          gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n          gl.drawArrays(gl.TRIANGLES, 0, count);\n          gl.flush();\n          gl.deleteBuffer(coordsBuffer);\n          gl.deleteBuffer(colorsBuffer);\n          return canvas;\n        }\n\n        return {\n          tryInitGL: function tryInitGL() {\n            try {\n              generateGL();\n              return !!currentGL;\n            } catch (ex) {}\n\n            return false;\n          },\n          composeSMask: composeSMask,\n          drawFigures: drawFigures,\n          cleanup: function cleanup() {\n            if (smaskCache && smaskCache.canvas) {\n              smaskCache.canvas.width = 0;\n              smaskCache.canvas.height = 0;\n            }\n\n            if (figuresCache && figuresCache.canvas) {\n              figuresCache.canvas.width = 0;\n              figuresCache.canvas.height = 0;\n            }\n\n            smaskCache = null;\n            figuresCache = null;\n          }\n        };\n      }();\n      /***/\n\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationLayer = void 0;\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var AnnotationElementFactory = /*#__PURE__*/function () {\n        function AnnotationElementFactory() {\n          _classCallCheck(this, AnnotationElementFactory);\n        }\n\n        _createClass(AnnotationElementFactory, null, [{\n          key: \"create\",\n          value: function create(parameters) {\n            var subtype = parameters.data.annotationType;\n\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n\n              case _util.AnnotationType.WIDGET:\n                var fieldType = parameters.data.fieldType;\n\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n\n                    return new PushButtonWidgetAnnotationElement(parameters);\n\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                }\n\n                return new WidgetAnnotationElement(parameters);\n\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n        }]);\n\n        return AnnotationElementFactory;\n      }();\n\n      var AnnotationElement = /*#__PURE__*/function () {\n        function AnnotationElement(parameters) {\n          var isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          _classCallCheck(this, AnnotationElement);\n\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.page = parameters.page;\n          this.viewport = parameters.viewport;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderInteractiveForms = parameters.renderInteractiveForms;\n          this.svgFactory = parameters.svgFactory;\n\n          if (isRenderable) {\n            this.container = this._createContainer(ignoreBorder);\n          }\n        }\n\n        _createClass(AnnotationElement, [{\n          key: \"_createContainer\",\n          value: function _createContainer() {\n            var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var data = this.data,\n                page = this.page,\n                viewport = this.viewport;\n            var container = document.createElement(\"section\");\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            container.setAttribute(\"data-annotation-id\", data.id);\n\n            var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n            container.style.transform = \"matrix(\".concat(viewport.transform.join(\",\"), \")\");\n            container.style.transformOrigin = \"-\".concat(rect[0], \"px -\").concat(rect[1], \"px\");\n\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = \"\".concat(data.borderStyle.width, \"px\");\n\n              if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n                width = width - 2 * data.borderStyle.width;\n                height = height - 2 * data.borderStyle.width;\n              }\n\n              var horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              var verticalRadius = data.borderStyle.verticalCornerRadius;\n\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                var radius = \"\".concat(horizontalRadius, \"px / \").concat(verticalRadius, \"px\");\n                container.style.borderRadius = radius;\n              }\n\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              if (data.color) {\n                container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n\n            container.style.left = \"\".concat(rect[0], \"px\");\n            container.style.top = \"\".concat(rect[1], \"px\");\n            container.style.width = \"\".concat(width, \"px\");\n            container.style.height = \"\".concat(height, \"px\");\n            return container;\n          }\n        }, {\n          key: \"_createPopup\",\n          value: function _createPopup(container, trigger, data) {\n            if (!trigger) {\n              trigger = document.createElement(\"div\");\n              trigger.style.height = container.style.height;\n              trigger.style.width = container.style.width;\n              container.appendChild(trigger);\n            }\n\n            var popupElement = new PopupElement({\n              container: container,\n              trigger: trigger,\n              color: data.color,\n              title: data.title,\n              modificationDate: data.modificationDate,\n              contents: data.contents,\n              hideWrapper: true\n            });\n            var popup = popupElement.render();\n            popup.style.left = container.style.width;\n            container.appendChild(popup);\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n        }]);\n\n        return AnnotationElement;\n      }();\n\n      var LinkAnnotationElement = /*#__PURE__*/function (_AnnotationElement) {\n        _inherits(LinkAnnotationElement, _AnnotationElement);\n\n        var _super11 = _createSuper(LinkAnnotationElement);\n\n        function LinkAnnotationElement(parameters) {\n          _classCallCheck(this, LinkAnnotationElement);\n\n          var isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n          return _super11.call(this, parameters, isRenderable);\n        }\n\n        _createClass(LinkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"linkAnnotation\";\n            var data = this.data,\n                linkService = this.linkService;\n            var link = document.createElement(\"a\");\n\n            if (data.url) {\n              (0, _display_utils.addLinkAttributes)(link, {\n                url: data.url,\n                target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n                rel: linkService.externalLinkRel,\n                enabled: linkService.externalLinkEnabled\n              });\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n            } else {\n              this._bindLink(link, data.dest);\n            }\n\n            this.container.appendChild(link);\n            return this.container;\n          }\n        }, {\n          key: \"_bindLink\",\n          value: function _bindLink(link, destination) {\n            var _this32 = this;\n\n            link.href = this.linkService.getDestinationHash(destination);\n\n            link.onclick = function () {\n              if (destination) {\n                _this32.linkService.navigateTo(destination);\n              }\n\n              return false;\n            };\n\n            if (destination) {\n              link.className = \"internalLink\";\n            }\n          }\n        }, {\n          key: \"_bindNamedAction\",\n          value: function _bindNamedAction(link, action) {\n            var _this33 = this;\n\n            link.href = this.linkService.getAnchorUrl(\"\");\n\n            link.onclick = function () {\n              _this33.linkService.executeNamedAction(action);\n\n              return false;\n            };\n\n            link.className = \"internalLink\";\n          }\n        }]);\n\n        return LinkAnnotationElement;\n      }(AnnotationElement);\n\n      var TextAnnotationElement = /*#__PURE__*/function (_AnnotationElement2) {\n        _inherits(TextAnnotationElement, _AnnotationElement2);\n\n        var _super12 = _createSuper(TextAnnotationElement);\n\n        function TextAnnotationElement(parameters) {\n          _classCallCheck(this, TextAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super12.call(this, parameters, isRenderable);\n        }\n\n        _createClass(TextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"textAnnotation\";\n            var image = document.createElement(\"img\");\n            image.style.height = this.container.style.height;\n            image.style.width = this.container.style.width;\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, image, this.data);\n            }\n\n            this.container.appendChild(image);\n            return this.container;\n          }\n        }]);\n\n        return TextAnnotationElement;\n      }(AnnotationElement);\n\n      var WidgetAnnotationElement = /*#__PURE__*/function (_AnnotationElement3) {\n        _inherits(WidgetAnnotationElement, _AnnotationElement3);\n\n        var _super13 = _createSuper(WidgetAnnotationElement);\n\n        function WidgetAnnotationElement() {\n          _classCallCheck(this, WidgetAnnotationElement);\n\n          return _super13.apply(this, arguments);\n        }\n\n        _createClass(WidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            return this.container;\n          }\n        }]);\n\n        return WidgetAnnotationElement;\n      }(AnnotationElement);\n\n      var TextWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem) {\n        _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);\n\n        var _super14 = _createSuper(TextWidgetAnnotationElement);\n\n        function TextWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, TextWidgetAnnotationElement);\n\n          var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n          return _super14.call(this, parameters, isRenderable);\n        }\n\n        _createClass(TextWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            this.container.className = \"textWidgetAnnotation\";\n            var element = null;\n\n            if (this.renderInteractiveForms) {\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = this.data.fieldValue;\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", this.data.fieldValue);\n              }\n\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n\n              if (this.data.maxLen !== null) {\n                element.maxLength = this.data.maxLen;\n              }\n\n              if (this.data.comb) {\n                var fieldWidth = this.data.rect[2] - this.data.rect[0];\n                var combWidth = fieldWidth / this.data.maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = \"calc(\".concat(combWidth, \"px - 1ch)\");\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n              var font = null;\n\n              if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n                font = this.page.commonObjs.get(this.data.fontRefName);\n              }\n\n              this._setTextStyle(element, font);\n            }\n\n            if (this.data.textAlignment !== null) {\n              element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }, {\n          key: \"_setTextStyle\",\n          value: function _setTextStyle(element, font) {\n            var style = element.style;\n            style.fontSize = \"\".concat(this.data.fontSize, \"px\");\n            style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n            if (!font) {\n              return;\n            }\n\n            var bold = \"normal\";\n\n            if (font.black) {\n              bold = \"900\";\n            } else if (font.bold) {\n              bold = \"bold\";\n            }\n\n            style.fontWeight = bold;\n            style.fontStyle = font.italic ? \"italic\" : \"normal\";\n            var fontFamily = font.loadedName ? \"\\\"\".concat(font.loadedName, \"\\\", \") : \"\";\n            var fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n            style.fontFamily = fontFamily + fallbackName;\n          }\n        }]);\n\n        return TextWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n\n      var CheckboxWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem2) {\n        _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);\n\n        var _super15 = _createSuper(CheckboxWidgetAnnotationElement);\n\n        function CheckboxWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, CheckboxWidgetAnnotationElement);\n\n          return _super15.call(this, parameters, parameters.renderInteractiveForms);\n        }\n\n        _createClass(CheckboxWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"buttonWidgetAnnotation checkBox\";\n            var element = document.createElement(\"input\");\n            element.disabled = this.data.readOnly;\n            element.type = \"checkbox\";\n            element.name = this.data.fieldName;\n\n            if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n              element.setAttribute(\"checked\", true);\n            }\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }]);\n\n        return CheckboxWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n\n      var RadioButtonWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem3) {\n        _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);\n\n        var _super16 = _createSuper(RadioButtonWidgetAnnotationElement);\n\n        function RadioButtonWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, RadioButtonWidgetAnnotationElement);\n\n          return _super16.call(this, parameters, parameters.renderInteractiveForms);\n        }\n\n        _createClass(RadioButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"buttonWidgetAnnotation radioButton\";\n            var element = document.createElement(\"input\");\n            element.disabled = this.data.readOnly;\n            element.type = \"radio\";\n            element.name = this.data.fieldName;\n\n            if (this.data.fieldValue === this.data.buttonValue) {\n              element.setAttribute(\"checked\", true);\n            }\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }]);\n\n        return RadioButtonWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n\n      var PushButtonWidgetAnnotationElement = /*#__PURE__*/function (_LinkAnnotationElemen) {\n        _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);\n\n        var _super17 = _createSuper(PushButtonWidgetAnnotationElement);\n\n        function PushButtonWidgetAnnotationElement() {\n          _classCallCheck(this, PushButtonWidgetAnnotationElement);\n\n          return _super17.apply(this, arguments);\n        }\n\n        _createClass(PushButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var container = _get(_getPrototypeOf(PushButtonWidgetAnnotationElement.prototype), \"render\", this).call(this);\n\n            container.className = \"buttonWidgetAnnotation pushButton\";\n            return container;\n          }\n        }]);\n\n        return PushButtonWidgetAnnotationElement;\n      }(LinkAnnotationElement);\n\n      var ChoiceWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem4) {\n        _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);\n\n        var _super18 = _createSuper(ChoiceWidgetAnnotationElement);\n\n        function ChoiceWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, ChoiceWidgetAnnotationElement);\n\n          return _super18.call(this, parameters, parameters.renderInteractiveForms);\n        }\n\n        _createClass(ChoiceWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"choiceWidgetAnnotation\";\n            var selectElement = document.createElement(\"select\");\n            selectElement.disabled = this.data.readOnly;\n            selectElement.name = this.data.fieldName;\n\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n\n            var _iterator10 = _createForOfIteratorHelper(this.data.options),\n                _step10;\n\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var option = _step10.value;\n                var optionElement = document.createElement(\"option\");\n                optionElement.textContent = option.displayValue;\n                optionElement.value = option.exportValue;\n\n                if (this.data.fieldValue.includes(option.displayValue)) {\n                  optionElement.setAttribute(\"selected\", true);\n                }\n\n                selectElement.appendChild(optionElement);\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n\n            this.container.appendChild(selectElement);\n            return this.container;\n          }\n        }]);\n\n        return ChoiceWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n\n      var PopupAnnotationElement = /*#__PURE__*/function (_AnnotationElement4) {\n        _inherits(PopupAnnotationElement, _AnnotationElement4);\n\n        var _super19 = _createSuper(PopupAnnotationElement);\n\n        function PopupAnnotationElement(parameters) {\n          _classCallCheck(this, PopupAnnotationElement);\n\n          var isRenderable = !!(parameters.data.title || parameters.data.contents);\n          return _super19.call(this, parameters, isRenderable);\n        }\n\n        _createClass(PopupAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n            this.container.className = \"popupAnnotation\";\n\n            if (IGNORE_TYPES.includes(this.data.parentType)) {\n              return this.container;\n            }\n\n            var selector = \"[data-annotation-id=\\\"\".concat(this.data.parentId, \"\\\"]\");\n            var parentElement = this.layer.querySelector(selector);\n\n            if (!parentElement) {\n              return this.container;\n            }\n\n            var popup = new PopupElement({\n              container: this.container,\n              trigger: parentElement,\n              color: this.data.color,\n              title: this.data.title,\n              modificationDate: this.data.modificationDate,\n              contents: this.data.contents\n            });\n            var parentLeft = parseFloat(parentElement.style.left);\n            var parentWidth = parseFloat(parentElement.style.width);\n            this.container.style.transformOrigin = \"-\".concat(parentLeft + parentWidth, \"px -\").concat(parentElement.style.top);\n            this.container.style.left = \"\".concat(parentLeft + parentWidth, \"px\");\n            this.container.appendChild(popup.render());\n            return this.container;\n          }\n        }]);\n\n        return PopupAnnotationElement;\n      }(AnnotationElement);\n\n      var PopupElement = /*#__PURE__*/function () {\n        function PopupElement(parameters) {\n          _classCallCheck(this, PopupElement);\n\n          this.container = parameters.container;\n          this.trigger = parameters.trigger;\n          this.color = parameters.color;\n          this.title = parameters.title;\n          this.modificationDate = parameters.modificationDate;\n          this.contents = parameters.contents;\n          this.hideWrapper = parameters.hideWrapper || false;\n          this.pinned = false;\n        }\n\n        _createClass(PopupElement, [{\n          key: \"render\",\n          value: function render() {\n            var BACKGROUND_ENLIGHT = 0.7;\n            var wrapper = document.createElement(\"div\");\n            wrapper.className = \"popupWrapper\";\n            this.hideElement = this.hideWrapper ? wrapper : this.container;\n            this.hideElement.setAttribute(\"hidden\", true);\n            var popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            var color = this.color;\n\n            if (color) {\n              var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n              var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n              var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n              popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n            }\n\n            var title = document.createElement(\"h1\");\n            title.textContent = this.title;\n            popup.appendChild(title);\n\n            var dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n            if (dateObject) {\n              var modificationDate = document.createElement(\"span\");\n              modificationDate.textContent = \"{{date}}, {{time}}\";\n              modificationDate.dataset.l10nId = \"annotation_date_string\";\n              modificationDate.dataset.l10nArgs = JSON.stringify({\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n              popup.appendChild(modificationDate);\n            }\n\n            var contents = this._formatContents(this.contents);\n\n            popup.appendChild(contents);\n            this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n            this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n            this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n            popup.addEventListener(\"click\", this._hide.bind(this, true));\n            wrapper.appendChild(popup);\n            return wrapper;\n          }\n        }, {\n          key: \"_formatContents\",\n          value: function _formatContents(contents) {\n            var p = document.createElement(\"p\");\n            var lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n            for (var i = 0, ii = lines.length; i < ii; ++i) {\n              var line = lines[i];\n              p.appendChild(document.createTextNode(line));\n\n              if (i < ii - 1) {\n                p.appendChild(document.createElement(\"br\"));\n              }\n            }\n\n            return p;\n          }\n        }, {\n          key: \"_toggle\",\n          value: function _toggle() {\n            if (this.pinned) {\n              this._hide(true);\n            } else {\n              this._show(true);\n            }\n          }\n        }, {\n          key: \"_show\",\n          value: function _show() {\n            var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (pin) {\n              this.pinned = true;\n            }\n\n            if (this.hideElement.hasAttribute(\"hidden\")) {\n              this.hideElement.removeAttribute(\"hidden\");\n              this.container.style.zIndex += 1;\n            }\n          }\n        }, {\n          key: \"_hide\",\n          value: function _hide() {\n            var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (unpin) {\n              this.pinned = false;\n            }\n\n            if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n              this.hideElement.setAttribute(\"hidden\", true);\n              this.container.style.zIndex -= 1;\n            }\n          }\n        }]);\n\n        return PopupElement;\n      }();\n\n      var FreeTextAnnotationElement = /*#__PURE__*/function (_AnnotationElement5) {\n        _inherits(FreeTextAnnotationElement, _AnnotationElement5);\n\n        var _super20 = _createSuper(FreeTextAnnotationElement);\n\n        function FreeTextAnnotationElement(parameters) {\n          _classCallCheck(this, FreeTextAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super20.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(FreeTextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"freeTextAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n\n            return this.container;\n          }\n        }]);\n\n        return FreeTextAnnotationElement;\n      }(AnnotationElement);\n\n      var LineAnnotationElement = /*#__PURE__*/function (_AnnotationElement6) {\n        _inherits(LineAnnotationElement, _AnnotationElement6);\n\n        var _super21 = _createSuper(LineAnnotationElement);\n\n        function LineAnnotationElement(parameters) {\n          _classCallCheck(this, LineAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super21.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(LineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"lineAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            svg.appendChild(line);\n            this.container.append(svg);\n\n            this._createPopup(this.container, line, data);\n\n            return this.container;\n          }\n        }]);\n\n        return LineAnnotationElement;\n      }(AnnotationElement);\n\n      var SquareAnnotationElement = /*#__PURE__*/function (_AnnotationElement7) {\n        _inherits(SquareAnnotationElement, _AnnotationElement7);\n\n        var _super22 = _createSuper(SquareAnnotationElement);\n\n        function SquareAnnotationElement(parameters) {\n          _classCallCheck(this, SquareAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super22.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(SquareAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"squareAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var borderWidth = data.borderStyle.width;\n            var square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"none\");\n            svg.appendChild(square);\n            this.container.append(svg);\n\n            this._createPopup(this.container, square, data);\n\n            return this.container;\n          }\n        }]);\n\n        return SquareAnnotationElement;\n      }(AnnotationElement);\n\n      var CircleAnnotationElement = /*#__PURE__*/function (_AnnotationElement8) {\n        _inherits(CircleAnnotationElement, _AnnotationElement8);\n\n        var _super23 = _createSuper(CircleAnnotationElement);\n\n        function CircleAnnotationElement(parameters) {\n          _classCallCheck(this, CircleAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super23.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(CircleAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"circleAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var borderWidth = data.borderStyle.width;\n            var circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"none\");\n            svg.appendChild(circle);\n            this.container.append(svg);\n\n            this._createPopup(this.container, circle, data);\n\n            return this.container;\n          }\n        }]);\n\n        return CircleAnnotationElement;\n      }(AnnotationElement);\n\n      var PolylineAnnotationElement = /*#__PURE__*/function (_AnnotationElement9) {\n        _inherits(PolylineAnnotationElement, _AnnotationElement9);\n\n        var _super24 = _createSuper(PolylineAnnotationElement);\n\n        function PolylineAnnotationElement(parameters) {\n          var _this34;\n\n          _classCallCheck(this, PolylineAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          _this34 = _super24.call(this, parameters, isRenderable, true);\n          _this34.containerClassName = \"polylineAnnotation\";\n          _this34.svgElementName = \"svg:polyline\";\n          return _this34;\n        }\n\n        _createClass(PolylineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var points = [];\n\n            var _iterator11 = _createForOfIteratorHelper(data.vertices),\n                _step11;\n\n            try {\n              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                var coordinate = _step11.value;\n                var x = coordinate.x - data.rect[0];\n                var y = data.rect[3] - coordinate.y;\n                points.push(x + \",\" + y);\n              }\n            } catch (err) {\n              _iterator11.e(err);\n            } finally {\n              _iterator11.f();\n            }\n\n            points = points.join(\" \");\n            var polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"none\");\n            svg.appendChild(polyline);\n            this.container.append(svg);\n\n            this._createPopup(this.container, polyline, data);\n\n            return this.container;\n          }\n        }]);\n\n        return PolylineAnnotationElement;\n      }(AnnotationElement);\n\n      var PolygonAnnotationElement = /*#__PURE__*/function (_PolylineAnnotationEl) {\n        _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);\n\n        var _super25 = _createSuper(PolygonAnnotationElement);\n\n        function PolygonAnnotationElement(parameters) {\n          var _this35;\n\n          _classCallCheck(this, PolygonAnnotationElement);\n\n          _this35 = _super25.call(this, parameters);\n          _this35.containerClassName = \"polygonAnnotation\";\n          _this35.svgElementName = \"svg:polygon\";\n          return _this35;\n        }\n\n        return _createClass(PolygonAnnotationElement);\n      }(PolylineAnnotationElement);\n\n      var CaretAnnotationElement = /*#__PURE__*/function (_AnnotationElement10) {\n        _inherits(CaretAnnotationElement, _AnnotationElement10);\n\n        var _super26 = _createSuper(CaretAnnotationElement);\n\n        function CaretAnnotationElement(parameters) {\n          _classCallCheck(this, CaretAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super26.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(CaretAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"caretAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n\n            return this.container;\n          }\n        }]);\n\n        return CaretAnnotationElement;\n      }(AnnotationElement);\n\n      var InkAnnotationElement = /*#__PURE__*/function (_AnnotationElement11) {\n        _inherits(InkAnnotationElement, _AnnotationElement11);\n\n        var _super27 = _createSuper(InkAnnotationElement);\n\n        function InkAnnotationElement(parameters) {\n          var _this36;\n\n          _classCallCheck(this, InkAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          _this36 = _super27.call(this, parameters, isRenderable, true);\n          _this36.containerClassName = \"inkAnnotation\";\n          _this36.svgElementName = \"svg:polyline\";\n          return _this36;\n        }\n\n        _createClass(InkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n\n            var _iterator12 = _createForOfIteratorHelper(data.inkLists),\n                _step12;\n\n            try {\n              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                var inkList = _step12.value;\n                var points = [];\n\n                var _iterator13 = _createForOfIteratorHelper(inkList),\n                    _step13;\n\n                try {\n                  for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                    var coordinate = _step13.value;\n                    var x = coordinate.x - data.rect[0];\n                    var y = data.rect[3] - coordinate.y;\n                    points.push(\"\".concat(x, \",\").concat(y));\n                  }\n                } catch (err) {\n                  _iterator13.e(err);\n                } finally {\n                  _iterator13.f();\n                }\n\n                points = points.join(\" \");\n                var polyline = this.svgFactory.createElement(this.svgElementName);\n                polyline.setAttribute(\"points\", points);\n                polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                polyline.setAttribute(\"stroke\", \"transparent\");\n                polyline.setAttribute(\"fill\", \"none\");\n\n                this._createPopup(this.container, polyline, data);\n\n                svg.appendChild(polyline);\n              }\n            } catch (err) {\n              _iterator12.e(err);\n            } finally {\n              _iterator12.f();\n            }\n\n            this.container.append(svg);\n            return this.container;\n          }\n        }]);\n\n        return InkAnnotationElement;\n      }(AnnotationElement);\n\n      var HighlightAnnotationElement = /*#__PURE__*/function (_AnnotationElement12) {\n        _inherits(HighlightAnnotationElement, _AnnotationElement12);\n\n        var _super28 = _createSuper(HighlightAnnotationElement);\n\n        function HighlightAnnotationElement(parameters) {\n          _classCallCheck(this, HighlightAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super28.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(HighlightAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"highlightAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n\n            return this.container;\n          }\n        }]);\n\n        return HighlightAnnotationElement;\n      }(AnnotationElement);\n\n      var UnderlineAnnotationElement = /*#__PURE__*/function (_AnnotationElement13) {\n        _inherits(UnderlineAnnotationElement, _AnnotationElement13);\n\n        var _super29 = _createSuper(UnderlineAnnotationElement);\n\n        function UnderlineAnnotationElement(parameters) {\n          _classCallCheck(this, UnderlineAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super29.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(UnderlineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"underlineAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n\n            return this.container;\n          }\n        }]);\n\n        return UnderlineAnnotationElement;\n      }(AnnotationElement);\n\n      var SquigglyAnnotationElement = /*#__PURE__*/function (_AnnotationElement14) {\n        _inherits(SquigglyAnnotationElement, _AnnotationElement14);\n\n        var _super30 = _createSuper(SquigglyAnnotationElement);\n\n        function SquigglyAnnotationElement(parameters) {\n          _classCallCheck(this, SquigglyAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super30.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(SquigglyAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"squigglyAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n\n            return this.container;\n          }\n        }]);\n\n        return SquigglyAnnotationElement;\n      }(AnnotationElement);\n\n      var StrikeOutAnnotationElement = /*#__PURE__*/function (_AnnotationElement15) {\n        _inherits(StrikeOutAnnotationElement, _AnnotationElement15);\n\n        var _super31 = _createSuper(StrikeOutAnnotationElement);\n\n        function StrikeOutAnnotationElement(parameters) {\n          _classCallCheck(this, StrikeOutAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super31.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(StrikeOutAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"strikeoutAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n\n            return this.container;\n          }\n        }]);\n\n        return StrikeOutAnnotationElement;\n      }(AnnotationElement);\n\n      var StampAnnotationElement = /*#__PURE__*/function (_AnnotationElement16) {\n        _inherits(StampAnnotationElement, _AnnotationElement16);\n\n        var _super32 = _createSuper(StampAnnotationElement);\n\n        function StampAnnotationElement(parameters) {\n          _classCallCheck(this, StampAnnotationElement);\n\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super32.call(this, parameters, isRenderable, true);\n        }\n\n        _createClass(StampAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"stampAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n\n            return this.container;\n          }\n        }]);\n\n        return StampAnnotationElement;\n      }(AnnotationElement);\n\n      var FileAttachmentAnnotationElement = /*#__PURE__*/function (_AnnotationElement17) {\n        _inherits(FileAttachmentAnnotationElement, _AnnotationElement17);\n\n        var _super33 = _createSuper(FileAttachmentAnnotationElement);\n\n        function FileAttachmentAnnotationElement(parameters) {\n          var _this37;\n\n          _classCallCheck(this, FileAttachmentAnnotationElement);\n\n          _this37 = _super33.call(this, parameters, true);\n          var _this37$data$file = _this37.data.file,\n              filename = _this37$data$file.filename,\n              content = _this37$data$file.content;\n          _this37.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n          _this37.content = content;\n\n          if (_this37.linkService.eventBus) {\n            _this37.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n              source: _assertThisInitialized(_this37),\n              id: (0, _util.stringToPDFString)(filename),\n              filename: filename,\n              content: content\n            });\n          }\n\n          return _this37;\n        }\n\n        _createClass(FileAttachmentAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"fileAttachmentAnnotation\";\n            var trigger = document.createElement(\"div\");\n            trigger.style.height = this.container.style.height;\n            trigger.style.width = this.container.style.width;\n            trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n            if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n              this._createPopup(this.container, trigger, this.data);\n            }\n\n            this.container.appendChild(trigger);\n            return this.container;\n          }\n        }, {\n          key: \"_download\",\n          value: function _download() {\n            if (!this.downloadManager) {\n              (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n              return;\n            }\n\n            this.downloadManager.downloadData(this.content, this.filename, \"\");\n          }\n        }]);\n\n        return FileAttachmentAnnotationElement;\n      }(AnnotationElement);\n\n      var AnnotationLayer = /*#__PURE__*/function () {\n        function AnnotationLayer() {\n          _classCallCheck(this, AnnotationLayer);\n        }\n\n        _createClass(AnnotationLayer, null, [{\n          key: \"render\",\n          value: function render(parameters) {\n            var sortedAnnotations = [],\n                popupAnnotations = [];\n\n            var _iterator14 = _createForOfIteratorHelper(parameters.annotations),\n                _step14;\n\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var _data3 = _step14.value;\n\n                if (!_data3) {\n                  continue;\n                }\n\n                if (_data3.annotationType === _util.AnnotationType.POPUP) {\n                  popupAnnotations.push(_data3);\n                  continue;\n                }\n\n                sortedAnnotations.push(_data3);\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n\n            if (popupAnnotations.length) {\n              sortedAnnotations.push.apply(sortedAnnotations, popupAnnotations);\n            }\n\n            for (var _i6 = 0, _sortedAnnotations = sortedAnnotations; _i6 < _sortedAnnotations.length; _i6++) {\n              var data = _sortedAnnotations[_i6];\n              var element = AnnotationElementFactory.create({\n                data: data,\n                layer: parameters.div,\n                page: parameters.page,\n                viewport: parameters.viewport,\n                linkService: parameters.linkService,\n                downloadManager: parameters.downloadManager,\n                imageResourcesPath: parameters.imageResourcesPath || \"\",\n                renderInteractiveForms: parameters.renderInteractiveForms || false,\n                svgFactory: new _display_utils.DOMSVGFactory()\n              });\n\n              if (element.isRenderable) {\n                parameters.div.appendChild(element.render());\n              }\n            }\n          }\n        }, {\n          key: \"update\",\n          value: function update(parameters) {\n            var _iterator15 = _createForOfIteratorHelper(parameters.annotations),\n                _step15;\n\n            try {\n              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                var data = _step15.value;\n                var element = parameters.div.querySelector(\"[data-annotation-id=\\\"\".concat(data.id, \"\\\"]\"));\n\n                if (element) {\n                  element.style.transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n                }\n              }\n            } catch (err) {\n              _iterator15.e(err);\n            } finally {\n              _iterator15.f();\n            }\n\n            parameters.div.removeAttribute(\"hidden\");\n          }\n        }]);\n\n        return AnnotationLayer;\n      }();\n\n      exports.AnnotationLayer = AnnotationLayer;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.renderTextLayer = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var renderTextLayer = function renderTextLayerClosure() {\n        var MAX_TEXT_DIVS_TO_RENDER = 100000;\n        var NonWhitespaceRegexp = /\\S/;\n\n        function isAllWhitespace(str) {\n          return !NonWhitespaceRegexp.test(str);\n        }\n\n        function appendText(task, geom, styles) {\n          var textDiv = document.createElement(\"span\");\n          var textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            isWhitespace: false,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          };\n\n          task._textDivs.push(textDiv);\n\n          if (isAllWhitespace(geom.str)) {\n            textDivProperties.isWhitespace = true;\n\n            task._textDivProperties.set(textDiv, textDivProperties);\n\n            return;\n          }\n\n          var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n          var angle = Math.atan2(tx[1], tx[0]);\n          var style = styles[geom.fontName];\n\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n\n          var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n          var fontAscent = fontHeight;\n\n          if (style.ascent) {\n            fontAscent = style.ascent * fontAscent;\n          } else if (style.descent) {\n            fontAscent = (1 + style.descent) * fontAscent;\n          }\n\n          var left, top;\n\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n\n          textDiv.style.left = \"\".concat(left, \"px\");\n          textDiv.style.top = \"\".concat(top, \"px\");\n          textDiv.style.fontSize = \"\".concat(fontHeight, \"px\");\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.textContent = geom.str;\n\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n\n          var shouldScaleText = false;\n\n          if (geom.str.length > 1) {\n            shouldScaleText = true;\n          } else if (geom.transform[0] !== geom.transform[3]) {\n            var absScaleX = Math.abs(geom.transform[0]),\n                absScaleY = Math.abs(geom.transform[3]);\n\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n\n          if (shouldScaleText) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n\n          task._textDivProperties.set(textDiv, textDivProperties);\n\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n\n          if (task._enhanceTextSelection) {\n            var angleCos = 1,\n                angleSin = 0;\n\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n\n            var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            var divHeight = fontHeight;\n            var m, b;\n\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m: m\n            });\n          }\n        }\n\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n\n          var textDivs = task._textDivs;\n          var capability = task._capability;\n          var textDivsLength = textDivs.length;\n\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n\n          if (!task._textContentStream) {\n            for (var i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n\n          task._renderingDone = true;\n          capability.resolve();\n        }\n\n        function findPositiveMin(ts, offset, count) {\n          var result = 0;\n\n          for (var i = 0; i < count; i++) {\n            var t = ts[offset++];\n\n            if (t > 0) {\n              result = result ? Math.min(t, result) : t;\n            }\n          }\n\n          return result;\n        }\n\n        function expand(task) {\n          var bounds = task._bounds;\n          var viewport = task._viewport;\n          var expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n          for (var i = 0; i < expanded.length; i++) {\n            var div = bounds[i].div;\n\n            var divProperties = task._textDivProperties.get(div);\n\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n              task._textDivProperties.set(div, divProperties);\n\n              continue;\n            }\n\n            var e = expanded[i],\n                b = bounds[i];\n            var m = b.m,\n                c = m[0],\n                s = m[1];\n            var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            var ts = new Float64Array(64);\n            points.forEach(function (p, j) {\n              var t = _util.Util.applyTransform(p, m);\n\n              ts[j + 0] = c && (e.left - t[0]) / c;\n              ts[j + 4] = s && (e.top - t[1]) / s;\n              ts[j + 8] = c && (e.right - t[0]) / c;\n              ts[j + 12] = s && (e.bottom - t[1]) / s;\n              ts[j + 16] = s && (e.left - t[0]) / -s;\n              ts[j + 20] = c && (e.top - t[1]) / c;\n              ts[j + 24] = s && (e.right - t[0]) / -s;\n              ts[j + 28] = c && (e.bottom - t[1]) / c;\n              ts[j + 32] = c && (e.left - t[0]) / -c;\n              ts[j + 36] = s && (e.top - t[1]) / -s;\n              ts[j + 40] = c && (e.right - t[0]) / -c;\n              ts[j + 44] = s && (e.bottom - t[1]) / -s;\n              ts[j + 48] = s && (e.left - t[0]) / s;\n              ts[j + 52] = c && (e.top - t[1]) / -c;\n              ts[j + 56] = s && (e.right - t[0]) / s;\n              ts[j + 60] = c && (e.bottom - t[1]) / -c;\n            });\n            var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n\n        function expandBounds(width, height, boxes) {\n          var bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          var expanded = new Array(boxes.length);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          });\n          boxes.map(function (box, i) {\n            var e = expanded[i],\n                b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i].top = b.x1New;\n            expanded[i].bottom = b.x2New;\n          });\n          return expanded;\n        }\n\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          var fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          var horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n          bounds.forEach(function (boundary) {\n            var i = 0;\n\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n\n            var j = horizon.length - 1;\n\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n\n            var horizonPart, affectedBoundary;\n            var q,\n                k,\n                maxXNew = -Infinity;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var xNew;\n\n              if (affectedBoundary.x2 > boundary.x1) {\n                xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n              } else if (affectedBoundary.x2New === undefined) {\n                xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = affectedBoundary.x2New;\n              }\n\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n\n            boundary.x1New = maxXNew;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New === undefined) {\n                if (affectedBoundary.x2 > boundary.x1) {\n                  if (affectedBoundary.index > boundary.index) {\n                    affectedBoundary.x2New = affectedBoundary.x2;\n                  }\n                } else {\n                  affectedBoundary.x2New = maxXNew;\n                }\n              } else if (affectedBoundary.x2New > maxXNew) {\n                affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n              }\n            }\n\n            var changedHorizon = [],\n                lastBoundary = null;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n              if (lastBoundary === useBoundary) {\n                changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: horizonPart.start,\n                  end: horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n\n              var used = false;\n\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === affectedBoundary;\n              }\n\n              if (!used) {\n                affectedBoundary.x2New = maxXNew;\n              }\n            }\n\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          });\n          horizon.forEach(function (horizonPart) {\n            var affectedBoundary = horizonPart.boundary;\n\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          });\n        }\n\n        function TextLayerRenderTask(_ref31) {\n          var _this38 = this;\n\n          var textContent = _ref31.textContent,\n              textContentStream = _ref31.textContentStream,\n              container = _ref31.container,\n              viewport = _ref31.viewport,\n              textDivs = _ref31.textDivs,\n              textContentItemsStr = _ref31.textContentItemsStr,\n              enhanceTextSelection = _ref31.enhanceTextSelection;\n          this._textContent = textContent;\n          this._textContentStream = textContentStream;\n          this._container = container;\n          this._viewport = viewport;\n          this._textDivs = textDivs || [];\n          this._textContentItemsStr = textContentItemsStr || [];\n          this._enhanceTextSelection = !!enhanceTextSelection;\n          this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n          this._reader = null;\n          this._layoutTextLastFontSize = null;\n          this._layoutTextLastFontFamily = null;\n          this._layoutTextCtx = null;\n          this._textDivProperties = new WeakMap();\n          this._renderingDone = false;\n          this._canceled = false;\n          this._capability = (0, _util.createPromiseCapability)();\n          this._renderTimer = null;\n          this._bounds = [];\n\n          this._capability.promise.finally(function () {\n            if (_this38._layoutTextCtx) {\n              _this38._layoutTextCtx.canvas.width = 0;\n              _this38._layoutTextCtx.canvas.height = 0;\n              _this38._layoutTextCtx = null;\n            }\n          }).catch(function () {});\n        }\n\n        TextLayerRenderTask.prototype = {\n          get promise() {\n            return this._capability.promise;\n          },\n\n          cancel: function TextLayer_cancel() {\n            this._canceled = true;\n\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n              this._reader = null;\n            }\n\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          },\n          _processItems: function _processItems(items, styleCache) {\n            for (var i = 0, len = items.length; i < len; i++) {\n              this._textContentItemsStr.push(items[i].str);\n\n              appendText(this, items[i], styleCache);\n            }\n          },\n          _layoutText: function _layoutText(textDiv) {\n            var textDivProperties = this._textDivProperties.get(textDiv);\n\n            if (textDivProperties.isWhitespace) {\n              return;\n            }\n\n            var transform = \"\";\n\n            if (textDivProperties.canvasWidth !== 0) {\n              var _textDiv$style = textDiv.style,\n                  fontSize = _textDiv$style.fontSize,\n                  fontFamily = _textDiv$style.fontFamily;\n\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = \"\".concat(fontSize, \" \").concat(fontFamily);\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n\n              var _this$_layoutTextCtx$ = this._layoutTextCtx.measureText(textDiv.textContent),\n                  width = _this$_layoutTextCtx$.width;\n\n              if (width > 0) {\n                textDivProperties.scale = textDivProperties.canvasWidth / width;\n                transform = \"scaleX(\".concat(textDivProperties.scale, \")\");\n              }\n            }\n\n            if (textDivProperties.angle !== 0) {\n              transform = \"rotate(\".concat(textDivProperties.angle, \"deg) \").concat(transform);\n            }\n\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n\n              textDiv.style.transform = transform;\n            }\n\n            this._textDivProperties.set(textDiv, textDivProperties);\n\n            this._container.appendChild(textDiv);\n          },\n          _render: function TextLayer_render(timeout) {\n            var _this39 = this;\n\n            var capability = (0, _util.createPromiseCapability)();\n            var styleCache = Object.create(null);\n            var canvas = document.createElement(\"canvas\");\n            canvas.mozOpaque = true;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n\n            if (this._textContent) {\n              var textItems = this._textContent.items;\n              var textStyles = this._textContent.styles;\n\n              this._processItems(textItems, textStyles);\n\n              capability.resolve();\n            } else if (this._textContentStream) {\n              var pump = function pump() {\n                _this39._reader.read().then(function (_ref32) {\n                  var value = _ref32.value,\n                      done = _ref32.done;\n\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n\n                  Object.assign(styleCache, value.styles);\n\n                  _this39._processItems(value.items, styleCache);\n\n                  pump();\n                }, capability.reject);\n              };\n\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n            }\n\n            capability.promise.then(function () {\n              styleCache = null;\n\n              if (!timeout) {\n                render(_this39);\n              } else {\n                _this39._renderTimer = setTimeout(function () {\n                  render(_this39);\n                  _this39._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          },\n          expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n\n            var transformBuf = [],\n                paddingBuf = [];\n\n            for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n              var div = this._textDivs[i];\n\n              var divProps = this._textDivProperties.get(div);\n\n              if (divProps.isWhitespace) {\n                continue;\n              }\n\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingTop, \"px\"));\n                  transformBuf.push(\"translateY(\".concat(-divProps.paddingTop, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingRight / divProps.scale, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingBottom, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingLeft / divProps.scale, \"px\"));\n                  transformBuf.push(\"translateX(\".concat(-divProps.paddingLeft / divProps.scale, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                div.style.padding = paddingBuf.join(\" \");\n\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n        };\n\n        function renderTextLayer(renderParameters) {\n          var task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n\n          task._render(renderParameters.timeout);\n\n          return task;\n        }\n\n        return renderTextLayer;\n      }();\n\n      exports.renderTextLayer = renderTextLayer;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SVGGraphics = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      var SVGGraphics = function SVGGraphics() {\n        throw new Error(\"Not implemented: SVGGraphics\");\n      };\n\n      exports.SVGGraphics = SVGGraphics;\n      {\n        var opListToTree = function opListToTree(opList) {\n          var opTree = [];\n          var tmp = [];\n\n          var _iterator16 = _createForOfIteratorHelper(opList),\n              _step16;\n\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var opListElement = _step16.value;\n\n              if (opListElement.fn === \"save\") {\n                opTree.push({\n                  fnId: 92,\n                  fn: \"group\",\n                  items: []\n                });\n                tmp.push(opTree);\n                opTree = opTree[opTree.length - 1].items;\n                continue;\n              }\n\n              if (opListElement.fn === \"restore\") {\n                opTree = tmp.pop();\n              } else {\n                opTree.push(opListElement);\n              }\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n\n          return opTree;\n        };\n\n        var pf = function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n\n          var s = value.toFixed(10);\n          var i = s.length - 1;\n\n          if (s[i] !== \"0\") {\n            return s;\n          }\n\n          do {\n            i--;\n          } while (s[i] === \"0\");\n\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        };\n\n        var pm = function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n\n              return \"scale(\".concat(pf(m[0]), \" \").concat(pf(m[3]), \")\");\n            }\n\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              var a = Math.acos(m[0]) * 180 / Math.PI;\n              return \"rotate(\".concat(pf(a), \")\");\n            }\n          } else {\n            if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n              return \"translate(\".concat(pf(m[4]), \" \").concat(pf(m[5]), \")\");\n            }\n          }\n\n          return \"matrix(\".concat(pf(m[0]), \" \").concat(pf(m[1]), \" \").concat(pf(m[2]), \" \").concat(pf(m[3]), \" \").concat(pf(m[4]), \" \") + \"\".concat(pf(m[5]), \")\");\n        };\n\n        var SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        var XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n        var convertImgDataToPng = function () {\n          var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          var CHUNK_WRAPPER_SIZE = 12;\n          var crcTable = new Int32Array(256);\n\n          for (var i = 0; i < 256; i++) {\n            var c = i;\n\n            for (var h = 0; h < 8; h++) {\n              if (c & 1) {\n                c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n              } else {\n                c = c >> 1 & 0x7fffffff;\n              }\n            }\n\n            crcTable[i] = c;\n          }\n\n          function crc32(data, start, end) {\n            var crc = -1;\n\n            for (var _i7 = start; _i7 < end; _i7++) {\n              var a = (crc ^ data[_i7]) & 0xff;\n              var b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n\n            return crc ^ -1;\n          }\n\n          function writePngChunk(type, body, data, offset) {\n            var p = offset;\n            var len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            var crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n\n          function adler32(data, start, end) {\n            var a = 1;\n            var b = 0;\n\n            for (var _i8 = start; _i8 < end; ++_i8) {\n              a = (a + (data[_i8] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n\n            return b << 16 | a;\n          }\n\n          function deflateSync(literals) {\n            if (!_is_node.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n\n            try {\n              var input;\n\n              if (parseInt(process.versions.node) >= 8) {\n                input = literals;\n              } else {\n                input = Buffer.from(literals);\n              }\n\n              var output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n\n            return deflateSyncUncompressed(literals);\n          }\n\n          function deflateSyncUncompressed(literals) {\n            var len = literals.length;\n            var maxBlockLength = 0xffff;\n            var deflateBlocks = Math.ceil(len / maxBlockLength);\n            var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            var pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            var pos = 0;\n\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            var adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var bitDepth, colorType, lineSize;\n            var bytes = imgData.data;\n\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n\n              default:\n                throw new Error(\"invalid format\");\n            }\n\n            var literals = new Uint8Array((1 + lineSize) * height);\n            var offsetLiterals = 0,\n                offsetBytes = 0;\n\n            for (var y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n\n              for (var _y = 0; _y < height; _y++) {\n                offsetLiterals++;\n\n                for (var _i9 = 0; _i9 < lineSize; _i9++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n\n            var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            var idat = deflateSync(literals);\n            var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            var data = new Uint8Array(pngLength);\n            var offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n          }\n\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n\n        var SVGExtraState = /*#__PURE__*/function () {\n          function SVGExtraState() {\n            _classCallCheck(this, SVGExtraState);\n\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n\n          _createClass(SVGExtraState, [{\n            key: \"clone\",\n            value: function clone() {\n              return Object.create(this);\n            }\n          }, {\n            key: \"setCurrentPoint\",\n            value: function setCurrentPoint(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n          }]);\n\n          return SVGExtraState;\n        }();\n\n        var clipCount = 0;\n        var maskCount = 0;\n        var shadingCount = 0;\n\n        exports.SVGGraphics = SVGGraphics = /*#__PURE__*/function () {\n          function SVGGraphics(commonObjs, objs) {\n            var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            _classCallCheck(this, SVGGraphics);\n\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n\n            for (var op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n\n          _createClass(SVGGraphics, [{\n            key: \"save\",\n            value: function save() {\n              this.transformStack.push(this.transformMatrix);\n              var old = this.current;\n              this.extraStack.push(old);\n              this.current = old.clone();\n            }\n          }, {\n            key: \"restore\",\n            value: function restore() {\n              this.transformMatrix = this.transformStack.pop();\n              this.current = this.extraStack.pop();\n              this.pendingClip = null;\n              this.tgrp = null;\n            }\n          }, {\n            key: \"group\",\n            value: function group(items) {\n              this.save();\n              this.executeOpTree(items);\n              this.restore();\n            }\n          }, {\n            key: \"loadDependencies\",\n            value: function loadDependencies(operatorList) {\n              var _this40 = this;\n\n              var fnArray = operatorList.fnArray;\n              var argsArray = operatorList.argsArray;\n\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                if (fnArray[i] !== _util.OPS.dependency) {\n                  continue;\n                }\n\n                var _iterator17 = _createForOfIteratorHelper(argsArray[i]),\n                    _step17;\n\n                try {\n                  var _loop = function _loop() {\n                    var obj = _step17.value;\n                    var objsPool = obj.startsWith(\"g_\") ? _this40.commonObjs : _this40.objs;\n                    var promise = new Promise(function (resolve) {\n                      objsPool.get(obj, resolve);\n                    });\n\n                    _this40.current.dependencies.push(promise);\n                  };\n\n                  for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                    _loop();\n                  }\n                } catch (err) {\n                  _iterator17.e(err);\n                } finally {\n                  _iterator17.f();\n                }\n              }\n\n              return Promise.all(this.current.dependencies);\n            }\n          }, {\n            key: \"transform\",\n            value: function transform(a, b, c, d, e, f) {\n              var transformMatrix = [a, b, c, d, e, f];\n              this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n              this.tgrp = null;\n            }\n          }, {\n            key: \"getSVG\",\n            value: function getSVG(operatorList, viewport) {\n              var _this41 = this;\n\n              this.viewport = viewport;\n\n              var svgElement = this._initialize(viewport);\n\n              return this.loadDependencies(operatorList).then(function () {\n                _this41.transformMatrix = _util.IDENTITY_MATRIX;\n\n                _this41.executeOpTree(_this41.convertOpList(operatorList));\n\n                return svgElement;\n              });\n            }\n          }, {\n            key: \"convertOpList\",\n            value: function convertOpList(operatorList) {\n              var operatorIdMapping = this._operatorIdMapping;\n              var argsArray = operatorList.argsArray;\n              var fnArray = operatorList.fnArray;\n              var opList = [];\n\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                var fnId = fnArray[i];\n                opList.push({\n                  fnId: fnId,\n                  fn: operatorIdMapping[fnId],\n                  args: argsArray[i]\n                });\n              }\n\n              return opListToTree(opList);\n            }\n          }, {\n            key: \"executeOpTree\",\n            value: function executeOpTree(opTree) {\n              var _iterator18 = _createForOfIteratorHelper(opTree),\n                  _step18;\n\n              try {\n                for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                  var opTreeElement = _step18.value;\n                  var fn = opTreeElement.fn;\n                  var fnId = opTreeElement.fnId;\n                  var args = opTreeElement.args;\n\n                  switch (fnId | 0) {\n                    case _util.OPS.beginText:\n                      this.beginText();\n                      break;\n\n                    case _util.OPS.dependency:\n                      break;\n\n                    case _util.OPS.setLeading:\n                      this.setLeading(args);\n                      break;\n\n                    case _util.OPS.setLeadingMoveText:\n                      this.setLeadingMoveText(args[0], args[1]);\n                      break;\n\n                    case _util.OPS.setFont:\n                      this.setFont(args);\n                      break;\n\n                    case _util.OPS.showText:\n                      this.showText(args[0]);\n                      break;\n\n                    case _util.OPS.showSpacedText:\n                      this.showText(args[0]);\n                      break;\n\n                    case _util.OPS.endText:\n                      this.endText();\n                      break;\n\n                    case _util.OPS.moveText:\n                      this.moveText(args[0], args[1]);\n                      break;\n\n                    case _util.OPS.setCharSpacing:\n                      this.setCharSpacing(args[0]);\n                      break;\n\n                    case _util.OPS.setWordSpacing:\n                      this.setWordSpacing(args[0]);\n                      break;\n\n                    case _util.OPS.setHScale:\n                      this.setHScale(args[0]);\n                      break;\n\n                    case _util.OPS.setTextMatrix:\n                      this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n\n                    case _util.OPS.setTextRise:\n                      this.setTextRise(args[0]);\n                      break;\n\n                    case _util.OPS.setTextRenderingMode:\n                      this.setTextRenderingMode(args[0]);\n                      break;\n\n                    case _util.OPS.setLineWidth:\n                      this.setLineWidth(args[0]);\n                      break;\n\n                    case _util.OPS.setLineJoin:\n                      this.setLineJoin(args[0]);\n                      break;\n\n                    case _util.OPS.setLineCap:\n                      this.setLineCap(args[0]);\n                      break;\n\n                    case _util.OPS.setMiterLimit:\n                      this.setMiterLimit(args[0]);\n                      break;\n\n                    case _util.OPS.setFillRGBColor:\n                      this.setFillRGBColor(args[0], args[1], args[2]);\n                      break;\n\n                    case _util.OPS.setStrokeRGBColor:\n                      this.setStrokeRGBColor(args[0], args[1], args[2]);\n                      break;\n\n                    case _util.OPS.setStrokeColorN:\n                      this.setStrokeColorN(args);\n                      break;\n\n                    case _util.OPS.setFillColorN:\n                      this.setFillColorN(args);\n                      break;\n\n                    case _util.OPS.shadingFill:\n                      this.shadingFill(args[0]);\n                      break;\n\n                    case _util.OPS.setDash:\n                      this.setDash(args[0], args[1]);\n                      break;\n\n                    case _util.OPS.setRenderingIntent:\n                      this.setRenderingIntent(args[0]);\n                      break;\n\n                    case _util.OPS.setFlatness:\n                      this.setFlatness(args[0]);\n                      break;\n\n                    case _util.OPS.setGState:\n                      this.setGState(args[0]);\n                      break;\n\n                    case _util.OPS.fill:\n                      this.fill();\n                      break;\n\n                    case _util.OPS.eoFill:\n                      this.eoFill();\n                      break;\n\n                    case _util.OPS.stroke:\n                      this.stroke();\n                      break;\n\n                    case _util.OPS.fillStroke:\n                      this.fillStroke();\n                      break;\n\n                    case _util.OPS.eoFillStroke:\n                      this.eoFillStroke();\n                      break;\n\n                    case _util.OPS.clip:\n                      this.clip(\"nonzero\");\n                      break;\n\n                    case _util.OPS.eoClip:\n                      this.clip(\"evenodd\");\n                      break;\n\n                    case _util.OPS.paintSolidColorImageMask:\n                      this.paintSolidColorImageMask();\n                      break;\n\n                    case _util.OPS.paintImageXObject:\n                      this.paintImageXObject(args[0]);\n                      break;\n\n                    case _util.OPS.paintInlineImageXObject:\n                      this.paintInlineImageXObject(args[0]);\n                      break;\n\n                    case _util.OPS.paintImageMaskXObject:\n                      this.paintImageMaskXObject(args[0]);\n                      break;\n\n                    case _util.OPS.paintFormXObjectBegin:\n                      this.paintFormXObjectBegin(args[0], args[1]);\n                      break;\n\n                    case _util.OPS.paintFormXObjectEnd:\n                      this.paintFormXObjectEnd();\n                      break;\n\n                    case _util.OPS.closePath:\n                      this.closePath();\n                      break;\n\n                    case _util.OPS.closeStroke:\n                      this.closeStroke();\n                      break;\n\n                    case _util.OPS.closeFillStroke:\n                      this.closeFillStroke();\n                      break;\n\n                    case _util.OPS.closeEOFillStroke:\n                      this.closeEOFillStroke();\n                      break;\n\n                    case _util.OPS.nextLine:\n                      this.nextLine();\n                      break;\n\n                    case _util.OPS.transform:\n                      this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n\n                    case _util.OPS.constructPath:\n                      this.constructPath(args[0], args[1]);\n                      break;\n\n                    case _util.OPS.endPath:\n                      this.endPath();\n                      break;\n\n                    case 92:\n                      this.group(opTreeElement.items);\n                      break;\n\n                    default:\n                      (0, _util.warn)(\"Unimplemented operator \".concat(fn));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator18.e(err);\n              } finally {\n                _iterator18.f();\n              }\n            }\n          }, {\n            key: \"setWordSpacing\",\n            value: function setWordSpacing(wordSpacing) {\n              this.current.wordSpacing = wordSpacing;\n            }\n          }, {\n            key: \"setCharSpacing\",\n            value: function setCharSpacing(charSpacing) {\n              this.current.charSpacing = charSpacing;\n            }\n          }, {\n            key: \"nextLine\",\n            value: function nextLine() {\n              this.moveText(0, this.current.leading);\n            }\n          }, {\n            key: \"setTextMatrix\",\n            value: function setTextMatrix(a, b, c, d, e, f) {\n              var current = this.current;\n              current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n              current.textMatrixScale = Math.sqrt(a * a + b * b);\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtElement.appendChild(current.tspan);\n            }\n          }, {\n            key: \"beginText\",\n            value: function beginText() {\n              var current = this.current;\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.textMatrix = _util.IDENTITY_MATRIX;\n              current.lineMatrix = _util.IDENTITY_MATRIX;\n              current.textMatrixScale = 1;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n          }, {\n            key: \"moveText\",\n            value: function moveText(x, y) {\n              var current = this.current;\n              current.x = current.lineX += x;\n              current.y = current.lineY += y;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n          }, {\n            key: \"showText\",\n            value: function showText(glyphs) {\n              var current = this.current;\n              var font = current.font;\n              var fontSize = current.fontSize;\n\n              if (fontSize === 0) {\n                return;\n              }\n\n              var fontSizeScale = current.fontSizeScale;\n              var charSpacing = current.charSpacing;\n              var wordSpacing = current.wordSpacing;\n              var fontDirection = current.fontDirection;\n              var textHScale = current.textHScale * fontDirection;\n              var vertical = font.vertical;\n              var spacingDir = vertical ? 1 : -1;\n              var defaultVMetrics = font.defaultVMetrics;\n              var widthAdvanceScale = fontSize * current.fontMatrix[0];\n              var x = 0;\n\n              var _iterator19 = _createForOfIteratorHelper(glyphs),\n                  _step19;\n\n              try {\n                for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                  var glyph = _step19.value;\n\n                  if (glyph === null) {\n                    x += fontDirection * wordSpacing;\n                    continue;\n                  } else if ((0, _util.isNum)(glyph)) {\n                    x += spacingDir * glyph * fontSize / 1000;\n                    continue;\n                  }\n\n                  var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                  var character = glyph.fontChar;\n                  var scaledX = void 0,\n                      scaledY = void 0;\n                  var width = glyph.width;\n\n                  if (vertical) {\n                    var vx = void 0;\n                    var vmetric = glyph.vmetric || defaultVMetrics;\n                    vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                    vx = -vx * widthAdvanceScale;\n                    var vy = vmetric[2] * widthAdvanceScale;\n                    width = vmetric ? -vmetric[0] : width;\n                    scaledX = vx / fontSizeScale;\n                    scaledY = (x + vy) / fontSizeScale;\n                  } else {\n                    scaledX = x / fontSizeScale;\n                    scaledY = 0;\n                  }\n\n                  if (glyph.isInFont || font.missingFile) {\n                    current.xcoords.push(current.x + scaledX);\n\n                    if (vertical) {\n                      current.ycoords.push(-current.y + scaledY);\n                    }\n\n                    current.tspan.textContent += character;\n                  } else {}\n\n                  var charWidth = void 0;\n\n                  if (vertical) {\n                    charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                  } else {\n                    charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                  }\n\n                  x += charWidth;\n                }\n              } catch (err) {\n                _iterator19.e(err);\n              } finally {\n                _iterator19.f();\n              }\n\n              current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n              if (vertical) {\n                current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n              } else {\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              }\n\n              if (vertical) {\n                current.y -= x;\n              } else {\n                current.x += x * textHScale;\n              }\n\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n\n              if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n                current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n              }\n\n              if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n                current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n              }\n\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                  current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                }\n\n                if (current.fillAlpha < 1) {\n                  current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                }\n              } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n                current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n              } else {\n                current.tspan.setAttributeNS(null, \"fill\", \"none\");\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                var lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n                this._setStrokeAttributes(current.tspan, lineWidthScale);\n              }\n\n              var textMatrix = current.textMatrix;\n\n              if (current.textRise !== 0) {\n                textMatrix = textMatrix.slice();\n                textMatrix[5] += current.textRise;\n              }\n\n              current.txtElement.setAttributeNS(null, \"transform\", \"\".concat(pm(textMatrix), \" scale(\").concat(pf(textHScale), \", -1)\"));\n              current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n              current.txtElement.appendChild(current.tspan);\n              current.txtgrp.appendChild(current.txtElement);\n\n              this._ensureTransformGroup().appendChild(current.txtElement);\n            }\n          }, {\n            key: \"setLeadingMoveText\",\n            value: function setLeadingMoveText(x, y) {\n              this.setLeading(-y);\n              this.moveText(x, y);\n            }\n          }, {\n            key: \"addFontStyle\",\n            value: function addFontStyle(fontObj) {\n              if (!fontObj.data) {\n                throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n              }\n\n              if (!this.cssStyle) {\n                this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                this.defs.appendChild(this.cssStyle);\n              }\n\n              var url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n              this.cssStyle.textContent += \"@font-face { font-family: \\\"\".concat(fontObj.loadedName, \"\\\";\") + \" src: url(\".concat(url, \"); }\\n\");\n            }\n          }, {\n            key: \"setFont\",\n            value: function setFont(details) {\n              var current = this.current;\n              var fontObj = this.commonObjs.get(details[0]);\n              var size = details[1];\n              current.font = fontObj;\n\n              if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n                this.addFontStyle(fontObj);\n                this.embeddedFonts[fontObj.loadedName] = fontObj;\n              }\n\n              current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n              var bold = \"normal\";\n\n              if (fontObj.black) {\n                bold = \"900\";\n              } else if (fontObj.bold) {\n                bold = \"bold\";\n              }\n\n              var italic = fontObj.italic ? \"italic\" : \"normal\";\n\n              if (size < 0) {\n                size = -size;\n                current.fontDirection = -1;\n              } else {\n                current.fontDirection = 1;\n              }\n\n              current.fontSize = size;\n              current.fontFamily = fontObj.loadedName;\n              current.fontWeight = bold;\n              current.fontStyle = italic;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n          }, {\n            key: \"endText\",\n            value: function endText() {\n              var current = this.current;\n\n              if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n                current.element = current.txtElement;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"setLineWidth\",\n            value: function setLineWidth(width) {\n              if (width > 0) {\n                this.current.lineWidth = width;\n              }\n            }\n          }, {\n            key: \"setLineCap\",\n            value: function setLineCap(style) {\n              this.current.lineCap = LINE_CAP_STYLES[style];\n            }\n          }, {\n            key: \"setLineJoin\",\n            value: function setLineJoin(style) {\n              this.current.lineJoin = LINE_JOIN_STYLES[style];\n            }\n          }, {\n            key: \"setMiterLimit\",\n            value: function setMiterLimit(limit) {\n              this.current.miterLimit = limit;\n            }\n          }, {\n            key: \"setStrokeAlpha\",\n            value: function setStrokeAlpha(strokeAlpha) {\n              this.current.strokeAlpha = strokeAlpha;\n            }\n          }, {\n            key: \"setStrokeRGBColor\",\n            value: function setStrokeRGBColor(r, g, b) {\n              this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n            }\n          }, {\n            key: \"setFillAlpha\",\n            value: function setFillAlpha(fillAlpha) {\n              this.current.fillAlpha = fillAlpha;\n            }\n          }, {\n            key: \"setFillRGBColor\",\n            value: function setFillRGBColor(r, g, b) {\n              this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n              this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              this.current.xcoords = [];\n              this.current.ycoords = [];\n            }\n          }, {\n            key: \"setStrokeColorN\",\n            value: function setStrokeColorN(args) {\n              this.current.strokeColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"setFillColorN\",\n            value: function setFillColorN(args) {\n              this.current.fillColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"shadingFill\",\n            value: function shadingFill(args) {\n              var width = this.viewport.width;\n              var height = this.viewport.height;\n\n              var inv = _util.Util.inverseTransform(this.transformMatrix);\n\n              var bl = _util.Util.applyTransform([0, 0], inv);\n\n              var br = _util.Util.applyTransform([0, height], inv);\n\n              var ul = _util.Util.applyTransform([width, 0], inv);\n\n              var ur = _util.Util.applyTransform([width, height], inv);\n\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", x0);\n              rect.setAttributeNS(null, \"y\", y0);\n              rect.setAttributeNS(null, \"width\", x1 - x0);\n              rect.setAttributeNS(null, \"height\", y1 - y0);\n              rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n              if (this.current.fillAlpha < 1) {\n                rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n              }\n\n              this._ensureTransformGroup().appendChild(rect);\n            }\n          }, {\n            key: \"_makeColorN_Pattern\",\n            value: function _makeColorN_Pattern(args) {\n              if (args[0] === \"TilingPattern\") {\n                return this._makeTilingPattern(args);\n              }\n\n              return this._makeShadingPattern(args);\n            }\n          }, {\n            key: \"_makeTilingPattern\",\n            value: function _makeTilingPattern(args) {\n              var color = args[1];\n              var operatorList = args[2];\n              var matrix = args[3] || _util.IDENTITY_MATRIX;\n\n              var _args$ = _slicedToArray(args[4], 4),\n                  x0 = _args$[0],\n                  y0 = _args$[1],\n                  x1 = _args$[2],\n                  y1 = _args$[3];\n\n              var xstep = args[5];\n              var ystep = args[6];\n              var paintType = args[7];\n              var tilingId = \"shading\".concat(shadingCount++);\n\n              var _util$Util$applyTrans = _util.Util.applyTransform([x0, y0], matrix),\n                  _util$Util$applyTrans2 = _slicedToArray(_util$Util$applyTrans, 2),\n                  tx0 = _util$Util$applyTrans2[0],\n                  ty0 = _util$Util$applyTrans2[1];\n\n              var _util$Util$applyTrans3 = _util.Util.applyTransform([x1, y1], matrix),\n                  _util$Util$applyTrans4 = _slicedToArray(_util$Util$applyTrans3, 2),\n                  tx1 = _util$Util$applyTrans4[0],\n                  ty1 = _util$Util$applyTrans4[1];\n\n              var _util$Util$singularVa = _util.Util.singularValueDecompose2dScale(matrix),\n                  _util$Util$singularVa2 = _slicedToArray(_util$Util$singularVa, 2),\n                  xscale = _util$Util$singularVa2[0],\n                  yscale = _util$Util$singularVa2[1];\n\n              var txstep = xstep * xscale;\n              var tystep = ystep * yscale;\n              var tiling = this.svgFactory.createElement(\"svg:pattern\");\n              tiling.setAttributeNS(null, \"id\", tilingId);\n              tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n              tiling.setAttributeNS(null, \"width\", txstep);\n              tiling.setAttributeNS(null, \"height\", tystep);\n              tiling.setAttributeNS(null, \"x\", \"\".concat(tx0));\n              tiling.setAttributeNS(null, \"y\", \"\".concat(ty0));\n              var svg = this.svg;\n              var transformMatrix = this.transformMatrix;\n              var fillColor = this.current.fillColor;\n              var strokeColor = this.current.strokeColor;\n              var bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n              this.svg = bbox;\n              this.transformMatrix = matrix;\n\n              if (paintType === 2) {\n                var _util$Util;\n\n                var cssColor = (_util$Util = _util.Util).makeCssRgb.apply(_util$Util, _toConsumableArray(color));\n\n                this.current.fillColor = cssColor;\n                this.current.strokeColor = cssColor;\n              }\n\n              this.executeOpTree(this.convertOpList(operatorList));\n              this.svg = svg;\n              this.transformMatrix = transformMatrix;\n              this.current.fillColor = fillColor;\n              this.current.strokeColor = strokeColor;\n              tiling.appendChild(bbox.childNodes[0]);\n              this.defs.appendChild(tiling);\n              return \"url(#\".concat(tilingId, \")\");\n            }\n          }, {\n            key: \"_makeShadingPattern\",\n            value: function _makeShadingPattern(args) {\n              switch (args[0]) {\n                case \"RadialAxial\":\n                  var shadingId = \"shading\".concat(shadingCount++);\n                  var colorStops = args[3];\n                  var gradient;\n\n                  switch (args[1]) {\n                    case \"axial\":\n                      var point0 = args[4];\n                      var point1 = args[5];\n                      gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"x1\", point0[0]);\n                      gradient.setAttributeNS(null, \"y1\", point0[1]);\n                      gradient.setAttributeNS(null, \"x2\", point1[0]);\n                      gradient.setAttributeNS(null, \"y2\", point1[1]);\n                      break;\n\n                    case \"radial\":\n                      var focalPoint = args[4];\n                      var circlePoint = args[5];\n                      var focalRadius = args[6];\n                      var circleRadius = args[7];\n                      gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                      gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                      gradient.setAttributeNS(null, \"r\", circleRadius);\n                      gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                      gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                      gradient.setAttributeNS(null, \"fr\", focalRadius);\n                      break;\n\n                    default:\n                      throw new Error(\"Unknown RadialAxial type: \".concat(args[1]));\n                  }\n\n                  var _iterator20 = _createForOfIteratorHelper(colorStops),\n                      _step20;\n\n                  try {\n                    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                      var colorStop = _step20.value;\n                      var stop = this.svgFactory.createElement(\"svg:stop\");\n                      stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                      stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                      gradient.appendChild(stop);\n                    }\n                  } catch (err) {\n                    _iterator20.e(err);\n                  } finally {\n                    _iterator20.f();\n                  }\n\n                  this.defs.appendChild(gradient);\n                  return \"url(#\".concat(shadingId, \")\");\n\n                case \"Mesh\":\n                  (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                  return null;\n\n                case \"Dummy\":\n                  return \"hotpink\";\n\n                default:\n                  throw new Error(\"Unknown IR type: \".concat(args[0]));\n              }\n            }\n          }, {\n            key: \"setDash\",\n            value: function setDash(dashArray, dashPhase) {\n              this.current.dashArray = dashArray;\n              this.current.dashPhase = dashPhase;\n            }\n          }, {\n            key: \"constructPath\",\n            value: function constructPath(ops, args) {\n              var current = this.current;\n              var x = current.x,\n                  y = current.y;\n              var d = [];\n              var j = 0;\n\n              var _iterator21 = _createForOfIteratorHelper(ops),\n                  _step21;\n\n              try {\n                for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                  var op = _step21.value;\n\n                  switch (op | 0) {\n                    case _util.OPS.rectangle:\n                      x = args[j++];\n                      y = args[j++];\n                      var width = args[j++];\n                      var height = args[j++];\n                      var xw = x + width;\n                      var yh = y + height;\n                      d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                      break;\n\n                    case _util.OPS.moveTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"M\", pf(x), pf(y));\n                      break;\n\n                    case _util.OPS.lineTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"L\", pf(x), pf(y));\n                      break;\n\n                    case _util.OPS.curveTo:\n                      x = args[j + 4];\n                      y = args[j + 5];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                      j += 6;\n                      break;\n\n                    case _util.OPS.curveTo2:\n                      d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      j += 4;\n                      break;\n\n                    case _util.OPS.curveTo3:\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                      j += 4;\n                      break;\n\n                    case _util.OPS.closePath:\n                      d.push(\"Z\");\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator21.e(err);\n              } finally {\n                _iterator21.f();\n              }\n\n              d = d.join(\" \");\n\n              if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n                d = current.path.getAttributeNS(null, \"d\") + d;\n              } else {\n                current.path = this.svgFactory.createElement(\"svg:path\");\n\n                this._ensureTransformGroup().appendChild(current.path);\n              }\n\n              current.path.setAttributeNS(null, \"d\", d);\n              current.path.setAttributeNS(null, \"fill\", \"none\");\n              current.element = current.path;\n              current.setCurrentPoint(x, y);\n            }\n          }, {\n            key: \"endPath\",\n            value: function endPath() {\n              var current = this.current;\n              current.path = null;\n\n              if (!this.pendingClip) {\n                return;\n              }\n\n              if (!current.element) {\n                this.pendingClip = null;\n                return;\n              }\n\n              var clipId = \"clippath\".concat(clipCount++);\n              var clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n              clipPath.setAttributeNS(null, \"id\", clipId);\n              clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              var clipElement = current.element.cloneNode(true);\n\n              if (this.pendingClip === \"evenodd\") {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n              } else {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n              }\n\n              this.pendingClip = null;\n              clipPath.appendChild(clipElement);\n              this.defs.appendChild(clipPath);\n\n              if (current.activeClipUrl) {\n                current.clipGroup = null;\n                this.extraStack.forEach(function (prev) {\n                  prev.clipGroup = null;\n                });\n                clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n              }\n\n              current.activeClipUrl = \"url(#\".concat(clipId, \")\");\n              this.tgrp = null;\n            }\n          }, {\n            key: \"clip\",\n            value: function clip(type) {\n              this.pendingClip = type;\n            }\n          }, {\n            key: \"closePath\",\n            value: function closePath() {\n              var current = this.current;\n\n              if (current.path) {\n                var d = \"\".concat(current.path.getAttributeNS(null, \"d\"), \"Z\");\n                current.path.setAttributeNS(null, \"d\", d);\n              }\n            }\n          }, {\n            key: \"setLeading\",\n            value: function setLeading(leading) {\n              this.current.leading = -leading;\n            }\n          }, {\n            key: \"setTextRise\",\n            value: function setTextRise(textRise) {\n              this.current.textRise = textRise;\n            }\n          }, {\n            key: \"setTextRenderingMode\",\n            value: function setTextRenderingMode(textRenderingMode) {\n              this.current.textRenderingMode = textRenderingMode;\n            }\n          }, {\n            key: \"setHScale\",\n            value: function setHScale(scale) {\n              this.current.textHScale = scale / 100;\n            }\n          }, {\n            key: \"setRenderingIntent\",\n            value: function setRenderingIntent(intent) {}\n          }, {\n            key: \"setFlatness\",\n            value: function setFlatness(flatness) {}\n          }, {\n            key: \"setGState\",\n            value: function setGState(states) {\n              var _iterator22 = _createForOfIteratorHelper(states),\n                  _step22;\n\n              try {\n                for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                  var _step22$value = _slicedToArray(_step22.value, 2),\n                      key = _step22$value[0],\n                      value = _step22$value[1];\n\n                  switch (key) {\n                    case \"LW\":\n                      this.setLineWidth(value);\n                      break;\n\n                    case \"LC\":\n                      this.setLineCap(value);\n                      break;\n\n                    case \"LJ\":\n                      this.setLineJoin(value);\n                      break;\n\n                    case \"ML\":\n                      this.setMiterLimit(value);\n                      break;\n\n                    case \"D\":\n                      this.setDash(value[0], value[1]);\n                      break;\n\n                    case \"RI\":\n                      this.setRenderingIntent(value);\n                      break;\n\n                    case \"FL\":\n                      this.setFlatness(value);\n                      break;\n\n                    case \"Font\":\n                      this.setFont(value);\n                      break;\n\n                    case \"CA\":\n                      this.setStrokeAlpha(value);\n                      break;\n\n                    case \"ca\":\n                      this.setFillAlpha(value);\n                      break;\n\n                    default:\n                      (0, _util.warn)(\"Unimplemented graphic state operator \".concat(key));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator22.e(err);\n              } finally {\n                _iterator22.f();\n              }\n            }\n          }, {\n            key: \"fill\",\n            value: function fill() {\n              var current = this.current;\n\n              if (current.element) {\n                current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"stroke\",\n            value: function stroke() {\n              var current = this.current;\n\n              if (current.element) {\n                this._setStrokeAttributes(current.element);\n\n                current.element.setAttributeNS(null, \"fill\", \"none\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"_setStrokeAttributes\",\n            value: function _setStrokeAttributes(element) {\n              var lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              var current = this.current;\n              var dashArray = current.dashArray;\n\n              if (lineWidthScale !== 1 && dashArray.length > 0) {\n                dashArray = dashArray.map(function (value) {\n                  return lineWidthScale * value;\n                });\n              }\n\n              element.setAttributeNS(null, \"stroke\", current.strokeColor);\n              element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n              element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n              element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n              element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n              element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n              element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n              element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n            }\n          }, {\n            key: \"eoFill\",\n            value: function eoFill() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n\n              this.fill();\n            }\n          }, {\n            key: \"fillStroke\",\n            value: function fillStroke() {\n              this.stroke();\n              this.fill();\n            }\n          }, {\n            key: \"eoFillStroke\",\n            value: function eoFillStroke() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeStroke\",\n            value: function closeStroke() {\n              this.closePath();\n              this.stroke();\n            }\n          }, {\n            key: \"closeFillStroke\",\n            value: function closeFillStroke() {\n              this.closePath();\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeEOFillStroke\",\n            value: function closeEOFillStroke() {\n              this.closePath();\n              this.eoFillStroke();\n            }\n          }, {\n            key: \"paintSolidColorImageMask\",\n            value: function paintSolidColorImageMask() {\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", \"1px\");\n              rect.setAttributeNS(null, \"height\", \"1px\");\n              rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n              this._ensureTransformGroup().appendChild(rect);\n            }\n          }, {\n            key: \"paintImageXObject\",\n            value: function paintImageXObject(objId) {\n              var imgData = this.objs.get(objId);\n\n              if (!imgData) {\n                (0, _util.warn)(\"Dependent image with object ID \".concat(objId, \" is not ready yet\"));\n                return;\n              }\n\n              this.paintInlineImageXObject(imgData);\n            }\n          }, {\n            key: \"paintInlineImageXObject\",\n            value: function paintInlineImageXObject(imgData, mask) {\n              var width = imgData.width;\n              var height = imgData.height;\n              var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n              var cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", \"0\");\n              cliprect.setAttributeNS(null, \"y\", \"0\");\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              var imgEl = this.svgFactory.createElement(\"svg:image\");\n              imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n              imgEl.setAttributeNS(null, \"x\", \"0\");\n              imgEl.setAttributeNS(null, \"y\", pf(-height));\n              imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n              imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n              imgEl.setAttributeNS(null, \"transform\", \"scale(\".concat(pf(1 / width), \" \").concat(pf(-1 / height), \")\"));\n\n              if (mask) {\n                mask.appendChild(imgEl);\n              } else {\n                this._ensureTransformGroup().appendChild(imgEl);\n              }\n            }\n          }, {\n            key: \"paintImageMaskXObject\",\n            value: function paintImageMaskXObject(imgData) {\n              var current = this.current;\n              var width = imgData.width;\n              var height = imgData.height;\n              var fillColor = current.fillColor;\n              current.maskId = \"mask\".concat(maskCount++);\n              var mask = this.svgFactory.createElement(\"svg:mask\");\n              mask.setAttributeNS(null, \"id\", current.maskId);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", pf(width));\n              rect.setAttributeNS(null, \"height\", pf(height));\n              rect.setAttributeNS(null, \"fill\", fillColor);\n              rect.setAttributeNS(null, \"mask\", \"url(#\".concat(current.maskId, \")\"));\n              this.defs.appendChild(mask);\n\n              this._ensureTransformGroup().appendChild(rect);\n\n              this.paintInlineImageXObject(imgData, mask);\n            }\n          }, {\n            key: \"paintFormXObjectBegin\",\n            value: function paintFormXObjectBegin(matrix, bbox) {\n              if (Array.isArray(matrix) && matrix.length === 6) {\n                this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n              }\n\n              if (bbox) {\n                var width = bbox[2] - bbox[0];\n                var height = bbox[3] - bbox[1];\n                var cliprect = this.svgFactory.createElement(\"svg:rect\");\n                cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                cliprect.setAttributeNS(null, \"width\", pf(width));\n                cliprect.setAttributeNS(null, \"height\", pf(height));\n                this.current.element = cliprect;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"paintFormXObjectEnd\",\n            value: function paintFormXObjectEnd() {}\n          }, {\n            key: \"_initialize\",\n            value: function _initialize(viewport) {\n              var svg = this.svgFactory.create(viewport.width, viewport.height);\n              var definitions = this.svgFactory.createElement(\"svg:defs\");\n              svg.appendChild(definitions);\n              this.defs = definitions;\n              var rootGroup = this.svgFactory.createElement(\"svg:g\");\n              rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n              svg.appendChild(rootGroup);\n              this.svg = rootGroup;\n              return svg;\n            }\n          }, {\n            key: \"_ensureClipGroup\",\n            value: function _ensureClipGroup() {\n              if (!this.current.clipGroup) {\n                var clipGroup = this.svgFactory.createElement(\"svg:g\");\n                clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                this.svg.appendChild(clipGroup);\n                this.current.clipGroup = clipGroup;\n              }\n\n              return this.current.clipGroup;\n            }\n          }, {\n            key: \"_ensureTransformGroup\",\n            value: function _ensureTransformGroup() {\n              if (!this.tgrp) {\n                this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n                if (this.current.activeClipUrl) {\n                  this._ensureClipGroup().appendChild(this.tgrp);\n                } else {\n                  this.svg.appendChild(this.tgrp);\n                }\n              }\n\n              return this.tgrp;\n            }\n          }]);\n\n          return SVGGraphics;\n        }();\n      }\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNodeStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _network_utils = __w_pdfjs_require__(20);\n\n      ;\n\n      var fs = require(\"fs\");\n\n      var http = require(\"http\");\n\n      var https = require(\"https\");\n\n      var url = require(\"url\");\n\n      var fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n      function parseUrl(sourceUrl) {\n        var parsedUrl = url.parse(sourceUrl);\n\n        if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n          return parsedUrl;\n        }\n\n        if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n          return url.parse(\"file:///\".concat(sourceUrl));\n        }\n\n        if (!parsedUrl.host) {\n          parsedUrl.protocol = \"file:\";\n        }\n\n        return parsedUrl;\n      }\n\n      var PDFNodeStream = /*#__PURE__*/function () {\n        function PDFNodeStream(source) {\n          _classCallCheck(this, PDFNodeStream);\n\n          this.source = source;\n          this.url = parseUrl(source.url);\n          this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n          this.isFsUrl = this.url.protocol === \"file:\";\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        _createClass(PDFNodeStream, [{\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n            this._rangeRequestReaders.push(rangeReader);\n\n            return rangeReader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            var readers = this._rangeRequestReaders.slice(0);\n\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n\n        return PDFNodeStream;\n      }();\n\n      exports.PDFNodeStream = PDFNodeStream;\n\n      var BaseFullReader = /*#__PURE__*/function () {\n        function BaseFullReader(stream) {\n          _classCallCheck(this, BaseFullReader);\n\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          var source = stream.source;\n          this._contentLength = source.length;\n          this._loaded = 0;\n          this._filename = null;\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._headersCapability = (0, _util.createPromiseCapability)();\n        }\n\n        _createClass(BaseFullReader, [{\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n              var chunk, buffer;\n              return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.next = 2;\n                      return this._readCapability.promise;\n\n                    case 2:\n                      if (!this._done) {\n                        _context9.next = 4;\n                        break;\n                      }\n\n                      return _context9.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 4:\n                      if (!this._storedError) {\n                        _context9.next = 6;\n                        break;\n                      }\n\n                      throw this._storedError;\n\n                    case 6:\n                      chunk = this._readableStream.read();\n\n                      if (!(chunk === null)) {\n                        _context9.next = 10;\n                        break;\n                      }\n\n                      this._readCapability = (0, _util.createPromiseCapability)();\n                      return _context9.abrupt(\"return\", this.read());\n\n                    case 10:\n                      this._loaded += chunk.length;\n\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded,\n                          total: this._contentLength\n                        });\n                      }\n\n                      buffer = new Uint8Array(chunk).buffer;\n                      return _context9.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n\n                    case 14:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, this);\n            }));\n\n            function read() {\n              return _read3.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this42 = this;\n\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this42._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this42._done = true;\n\n              _this42._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this42._error(reason);\n            });\n\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }]);\n\n        return BaseFullReader;\n      }();\n\n      var BaseRangeReader = /*#__PURE__*/function () {\n        function BaseRangeReader(stream) {\n          _classCallCheck(this, BaseRangeReader);\n\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          this._loaded = 0;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          var source = stream.source;\n          this._isStreamingSupported = !source.disableStream;\n        }\n\n        _createClass(BaseRangeReader, [{\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n              var chunk, buffer;\n              return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      _context10.next = 2;\n                      return this._readCapability.promise;\n\n                    case 2:\n                      if (!this._done) {\n                        _context10.next = 4;\n                        break;\n                      }\n\n                      return _context10.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 4:\n                      if (!this._storedError) {\n                        _context10.next = 6;\n                        break;\n                      }\n\n                      throw this._storedError;\n\n                    case 6:\n                      chunk = this._readableStream.read();\n\n                      if (!(chunk === null)) {\n                        _context10.next = 10;\n                        break;\n                      }\n\n                      this._readCapability = (0, _util.createPromiseCapability)();\n                      return _context10.abrupt(\"return\", this.read());\n\n                    case 10:\n                      this._loaded += chunk.length;\n\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded\n                        });\n                      }\n\n                      buffer = new Uint8Array(chunk).buffer;\n                      return _context10.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n\n                    case 14:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10, this);\n            }));\n\n            function read() {\n              return _read4.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this43 = this;\n\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this43._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this43._done = true;\n\n              _this43._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this43._error(reason);\n            });\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }]);\n\n        return BaseRangeReader;\n      }();\n\n      function createRequestOptions(parsedUrl, headers) {\n        return {\n          protocol: parsedUrl.protocol,\n          auth: parsedUrl.auth,\n          host: parsedUrl.hostname,\n          port: parsedUrl.port,\n          path: parsedUrl.path,\n          method: \"GET\",\n          headers: headers\n        };\n      }\n\n      var PDFNodeStreamFullReader = /*#__PURE__*/function (_BaseFullReader) {\n        _inherits(PDFNodeStreamFullReader, _BaseFullReader);\n\n        var _super34 = _createSuper(PDFNodeStreamFullReader);\n\n        function PDFNodeStreamFullReader(stream) {\n          var _this44;\n\n          _classCallCheck(this, PDFNodeStreamFullReader);\n\n          _this44 = _super34.call(this, stream);\n\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this44._url, \"\\\".\"));\n              _this44._storedError = error;\n\n              _this44._headersCapability.reject(error);\n\n              return;\n            }\n\n            _this44._headersCapability.resolve();\n\n            _this44._setReadableStream(response);\n\n            var getResponseHeader = function getResponseHeader(name) {\n              return _this44._readableStream.headers[name.toLowerCase()];\n            };\n\n            var _ref33 = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader: getResponseHeader,\n              isHttp: stream.isHttp,\n              rangeChunkSize: _this44._rangeChunkSize,\n              disableRange: _this44._disableRange\n            }),\n                allowRangeRequests = _ref33.allowRangeRequests,\n                suggestedLength = _ref33.suggestedLength;\n\n            _this44._isRangeSupported = allowRangeRequests;\n            _this44._contentLength = suggestedLength || _this44._contentLength;\n            _this44._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          };\n\n          _this44._request = null;\n\n          if (_this44._url.protocol === \"http:\") {\n            _this44._request = http.request(createRequestOptions(_this44._url, stream.httpHeaders), handleResponse);\n          } else {\n            _this44._request = https.request(createRequestOptions(_this44._url, stream.httpHeaders), handleResponse);\n          }\n\n          _this44._request.on(\"error\", function (reason) {\n            _this44._storedError = reason;\n\n            _this44._headersCapability.reject(reason);\n          });\n\n          _this44._request.end();\n\n          return _this44;\n        }\n\n        return _createClass(PDFNodeStreamFullReader);\n      }(BaseFullReader);\n\n      var PDFNodeStreamRangeReader = /*#__PURE__*/function (_BaseRangeReader) {\n        _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);\n\n        var _super35 = _createSuper(PDFNodeStreamRangeReader);\n\n        function PDFNodeStreamRangeReader(stream, start, end) {\n          var _this45;\n\n          _classCallCheck(this, PDFNodeStreamRangeReader);\n\n          _this45 = _super35.call(this, stream);\n          _this45._httpHeaders = {};\n\n          for (var property in stream.httpHeaders) {\n            var value = stream.httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            _this45._httpHeaders[property] = value;\n          }\n\n          _this45._httpHeaders.Range = \"bytes=\".concat(start, \"-\").concat(end - 1);\n\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this45._url, \"\\\".\"));\n              _this45._storedError = error;\n              return;\n            }\n\n            _this45._setReadableStream(response);\n          };\n\n          _this45._request = null;\n\n          if (_this45._url.protocol === \"http:\") {\n            _this45._request = http.request(createRequestOptions(_this45._url, _this45._httpHeaders), handleResponse);\n          } else {\n            _this45._request = https.request(createRequestOptions(_this45._url, _this45._httpHeaders), handleResponse);\n          }\n\n          _this45._request.on(\"error\", function (reason) {\n            _this45._storedError = reason;\n          });\n\n          _this45._request.end();\n\n          return _this45;\n        }\n\n        return _createClass(PDFNodeStreamRangeReader);\n      }(BaseRangeReader);\n\n      var PDFNodeStreamFsFullReader = /*#__PURE__*/function (_BaseFullReader2) {\n        _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);\n\n        var _super36 = _createSuper(PDFNodeStreamFsFullReader);\n\n        function PDFNodeStreamFsFullReader(stream) {\n          var _this46;\n\n          _classCallCheck(this, PDFNodeStreamFsFullReader);\n\n          _this46 = _super36.call(this, stream);\n          var path = decodeURIComponent(_this46._url.path);\n\n          if (fileUriRegex.test(_this46._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n\n          fs.lstat(path, function (error, stat) {\n            if (error) {\n              if (error.code === \"ENOENT\") {\n                error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(path, \"\\\".\"));\n              }\n\n              _this46._storedError = error;\n\n              _this46._headersCapability.reject(error);\n\n              return;\n            }\n\n            _this46._contentLength = stat.size;\n\n            _this46._setReadableStream(fs.createReadStream(path));\n\n            _this46._headersCapability.resolve();\n          });\n          return _this46;\n        }\n\n        return _createClass(PDFNodeStreamFsFullReader);\n      }(BaseFullReader);\n\n      var PDFNodeStreamFsRangeReader = /*#__PURE__*/function (_BaseRangeReader2) {\n        _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);\n\n        var _super37 = _createSuper(PDFNodeStreamFsRangeReader);\n\n        function PDFNodeStreamFsRangeReader(stream, start, end) {\n          var _this47;\n\n          _classCallCheck(this, PDFNodeStreamFsRangeReader);\n\n          _this47 = _super37.call(this, stream);\n          var path = decodeURIComponent(_this47._url.path);\n\n          if (fileUriRegex.test(_this47._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n\n          _this47._setReadableStream(fs.createReadStream(path, {\n            start: start,\n            end: end - 1\n          }));\n\n          return _this47;\n        }\n\n        return _createClass(PDFNodeStreamFsRangeReader);\n      }(BaseRangeReader);\n      /***/\n\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createResponseStatusError = createResponseStatusError;\n      exports.extractFilenameFromHeader = extractFilenameFromHeader;\n      exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n      exports.validateResponseStatus = validateResponseStatus;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _content_disposition = __w_pdfjs_require__(21);\n\n      function validateRangeRequestCapabilities(_ref34) {\n        var getResponseHeader = _ref34.getResponseHeader,\n            isHttp = _ref34.isHttp,\n            rangeChunkSize = _ref34.rangeChunkSize,\n            disableRange = _ref34.disableRange;\n        (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n        var returnValues = {\n          allowRangeRequests: false,\n          suggestedLength: undefined\n        };\n        var length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n        if (!Number.isInteger(length)) {\n          return returnValues;\n        }\n\n        returnValues.suggestedLength = length;\n\n        if (length <= 2 * rangeChunkSize) {\n          return returnValues;\n        }\n\n        if (disableRange || !isHttp) {\n          return returnValues;\n        }\n\n        if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n          return returnValues;\n        }\n\n        var contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n        if (contentEncoding !== \"identity\") {\n          return returnValues;\n        }\n\n        returnValues.allowRangeRequests = true;\n        return returnValues;\n      }\n\n      function extractFilenameFromHeader(getResponseHeader) {\n        var contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n        if (contentDisposition) {\n          var filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n          if (filename.includes(\"%\")) {\n            try {\n              filename = decodeURIComponent(filename);\n            } catch (ex) {}\n          }\n\n          if (/\\.pdf$/i.test(filename)) {\n            return filename;\n          }\n        }\n\n        return null;\n      }\n\n      function createResponseStatusError(status, url) {\n        if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n          return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n        }\n\n        return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n      }\n\n      function validateResponseStatus(status) {\n        return status === 200 || status === 206;\n      }\n      /***/\n\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n      function getFilenameFromContentDispositionHeader(contentDisposition) {\n        var needsEncodingFixup = true;\n        var tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n        if (tmp) {\n          tmp = tmp[1];\n          var filename = rfc2616unquote(tmp);\n          filename = unescape(filename);\n          filename = rfc5987decode(filename);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n\n        tmp = rfc2231getparam(contentDisposition);\n\n        if (tmp) {\n          var _filename = rfc2047decode(tmp);\n\n          return fixupEncoding(_filename);\n        }\n\n        tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n        if (tmp) {\n          tmp = tmp[1];\n\n          var _filename2 = rfc2616unquote(tmp);\n\n          _filename2 = rfc2047decode(_filename2);\n          return fixupEncoding(_filename2);\n        }\n\n        function toParamRegExp(attributePattern, flags) {\n          return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n        }\n\n        function textdecode(encoding, value) {\n          if (encoding) {\n            if (!/^[\\x00-\\xFF]+$/.test(value)) {\n              return value;\n            }\n\n            try {\n              var decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              var bytes = Array.from(value, function (ch) {\n                return ch.charCodeAt(0) & 0xff;\n              });\n              value = decoder.decode(new Uint8Array(bytes));\n              needsEncodingFixup = false;\n            } catch (e) {\n              if (/^utf-?8$/i.test(encoding)) {\n                try {\n                  value = decodeURIComponent(escape(value));\n                  needsEncodingFixup = false;\n                } catch (err) {}\n              }\n            }\n          }\n\n          return value;\n        }\n\n        function fixupEncoding(value) {\n          if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n            value = textdecode(\"utf-8\", value);\n\n            if (needsEncodingFixup) {\n              value = textdecode(\"iso-8859-1\", value);\n            }\n          }\n\n          return value;\n        }\n\n        function rfc2231getparam(contentDispositionStr) {\n          var matches = [];\n          var match;\n          var iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n          while ((match = iter.exec(contentDispositionStr)) !== null) {\n            var _match = match,\n                _match2 = _slicedToArray(_match, 4),\n                n = _match2[1],\n                quot = _match2[2],\n                part = _match2[3];\n\n            n = parseInt(n, 10);\n\n            if (n in matches) {\n              if (n === 0) {\n                break;\n              }\n\n              continue;\n            }\n\n            matches[n] = [quot, part];\n          }\n\n          var parts = [];\n\n          for (var _n = 0; _n < matches.length; ++_n) {\n            if (!(_n in matches)) {\n              break;\n            }\n\n            var _matches$_n = _slicedToArray(matches[_n], 2),\n                _quot = _matches$_n[0],\n                _part = _matches$_n[1];\n\n            _part = rfc2616unquote(_part);\n\n            if (_quot) {\n              _part = unescape(_part);\n\n              if (_n === 0) {\n                _part = rfc5987decode(_part);\n              }\n            }\n\n            parts.push(_part);\n          }\n\n          return parts.join(\"\");\n        }\n\n        function rfc2616unquote(value) {\n          if (value.startsWith('\"')) {\n            var parts = value.slice(1).split('\\\\\"');\n\n            for (var i = 0; i < parts.length; ++i) {\n              var quotindex = parts[i].indexOf('\"');\n\n              if (quotindex !== -1) {\n                parts[i] = parts[i].slice(0, quotindex);\n                parts.length = i + 1;\n              }\n\n              parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n            }\n\n            value = parts.join('\"');\n          }\n\n          return value;\n        }\n\n        function rfc5987decode(extvalue) {\n          var encodingend = extvalue.indexOf(\"'\");\n\n          if (encodingend === -1) {\n            return extvalue;\n          }\n\n          var encoding = extvalue.slice(0, encodingend);\n          var langvalue = extvalue.slice(encodingend + 1);\n          var value = langvalue.replace(/^[^']*'/, \"\");\n          return textdecode(encoding, value);\n        }\n\n        function rfc2047decode(value) {\n          if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n            return value;\n          }\n\n          return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n            if (encoding === \"q\" || encoding === \"Q\") {\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                return String.fromCharCode(parseInt(hex, 16));\n              });\n              return textdecode(charset, text);\n            }\n\n            try {\n              text = atob(text);\n            } catch (e) {}\n\n            return textdecode(charset, text);\n          });\n        }\n\n        return \"\";\n      }\n      /***/\n\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNetworkStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _network_utils = __w_pdfjs_require__(20);\n\n      ;\n      var OK_RESPONSE = 200;\n      var PARTIAL_CONTENT_RESPONSE = 206;\n\n      function getArrayBuffer(xhr) {\n        var data = xhr.response;\n\n        if (typeof data !== \"string\") {\n          return data;\n        }\n\n        var array = (0, _util.stringToBytes)(data);\n        return array.buffer;\n      }\n\n      var NetworkManager = /*#__PURE__*/function () {\n        function NetworkManager(url, args) {\n          _classCallCheck(this, NetworkManager);\n\n          this.url = url;\n          args = args || {};\n          this.isHttp = /^https?:/i.test(url);\n          this.httpHeaders = this.isHttp && args.httpHeaders || {};\n          this.withCredentials = args.withCredentials || false;\n\n          this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n            return new XMLHttpRequest();\n          };\n\n          this.currXhrId = 0;\n          this.pendingRequests = Object.create(null);\n        }\n\n        _createClass(NetworkManager, [{\n          key: \"requestRange\",\n          value: function requestRange(begin, end, listeners) {\n            var args = {\n              begin: begin,\n              end: end\n            };\n\n            for (var prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n\n            return this.request(args);\n          }\n        }, {\n          key: \"requestFull\",\n          value: function requestFull(listeners) {\n            return this.request(listeners);\n          }\n        }, {\n          key: \"request\",\n          value: function request(args) {\n            var xhr = this.getXhr();\n            var xhrId = this.currXhrId++;\n            var pendingRequest = this.pendingRequests[xhrId] = {\n              xhr: xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n\n            for (var property in this.httpHeaders) {\n              var value = this.httpHeaders[property];\n\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n\n              xhr.setRequestHeader(property, value);\n            }\n\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", \"bytes=\".concat(args.begin, \"-\").concat(args.end - 1));\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n\n            xhr.responseType = \"arraybuffer\";\n\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n        }, {\n          key: \"onProgress\",\n          value: function onProgress(xhrId, evt) {\n            var pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            if (pendingRequest.onProgress) {\n              pendingRequest.onProgress(evt);\n            }\n          }\n        }, {\n          key: \"onStateChange\",\n          value: function onStateChange(xhrId, evt) {\n            var pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            var xhr = pendingRequest.xhr;\n\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n\n            if (xhr.readyState !== 4) {\n              return;\n            }\n\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n\n            delete this.pendingRequests[xhrId];\n\n            if (xhr.status === 0 && this.isHttp) {\n              if (pendingRequest.onError) {\n                pendingRequest.onError(xhr.status);\n              }\n\n              return;\n            }\n\n            var xhrStatus = xhr.status || OK_RESPONSE;\n            var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              if (pendingRequest.onError) {\n                pendingRequest.onError(xhr.status);\n              }\n\n              return;\n            }\n\n            var chunk = getArrayBuffer(xhr);\n\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              var rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk: chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk: chunk\n              });\n            } else if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n          }\n        }, {\n          key: \"hasPendingRequests\",\n          value: function hasPendingRequests() {\n            for (var xhrId in this.pendingRequests) {\n              return true;\n            }\n\n            return false;\n          }\n        }, {\n          key: \"getRequestXhr\",\n          value: function getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n        }, {\n          key: \"isPendingRequest\",\n          value: function isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n        }, {\n          key: \"abortAllRequests\",\n          value: function abortAllRequests() {\n            for (var xhrId in this.pendingRequests) {\n              this.abortRequest(xhrId | 0);\n            }\n          }\n        }, {\n          key: \"abortRequest\",\n          value: function abortRequest(xhrId) {\n            var xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n        }]);\n\n        return NetworkManager;\n      }();\n\n      var PDFNetworkStream = /*#__PURE__*/function () {\n        function PDFNetworkStream(source) {\n          _classCallCheck(this, PDFNetworkStream);\n\n          this._source = source;\n          this._manager = new NetworkManager(source.url, {\n            httpHeaders: source.httpHeaders,\n            withCredentials: source.withCredentials\n          });\n          this._rangeChunkSize = source.rangeChunkSize;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        _createClass(PDFNetworkStream, [{\n          key: \"_onRangeRequestReaderClosed\",\n          value: function _onRangeRequestReaderClosed(reader) {\n            var i = this._rangeRequestReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            var readers = this._rangeRequestReaders.slice(0);\n\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n\n        return PDFNetworkStream;\n      }();\n\n      exports.PDFNetworkStream = PDFNetworkStream;\n\n      var PDFNetworkStreamFullRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamFullRequestReader(manager, source) {\n          _classCallCheck(this, PDFNetworkStreamFullRequestReader);\n\n          this._manager = manager;\n          var args = {\n            onHeadersReceived: this._onHeadersReceived.bind(this),\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = source.url;\n          this._fullRequestId = manager.requestFull(args);\n          this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._contentLength = source.length;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          this._isStreamingSupported = false;\n          this._isRangeSupported = false;\n          this._cachedChunks = [];\n          this._requests = [];\n          this._done = false;\n          this._storedError = undefined;\n          this._filename = null;\n          this.onProgress = null;\n        }\n\n        _createClass(PDFNetworkStreamFullRequestReader, [{\n          key: \"_onHeadersReceived\",\n          value: function _onHeadersReceived() {\n            var fullRequestXhrId = this._fullRequestId;\n\n            var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n            var getResponseHeader = function getResponseHeader(name) {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n\n            var _ref35 = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader: getResponseHeader,\n              isHttp: this._manager.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            }),\n                allowRangeRequests = _ref35.allowRangeRequests,\n                suggestedLength = _ref35.suggestedLength;\n\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n\n            this._headersReceivedCapability.resolve();\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(args) {\n            if (args) {\n              if (this._requests.length > 0) {\n                var requestCapability = this._requests.shift();\n\n                requestCapability.resolve({\n                  value: args.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(args.chunk);\n              }\n            }\n\n            this._done = true;\n\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n          }\n        }, {\n          key: \"_onError\",\n          value: function _onError(status) {\n            var url = this._url;\n            var exception = (0, _network_utils.createResponseStatusError)(status, url);\n            this._storedError = exception;\n\n            this._headersReceivedCapability.reject(exception);\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.reject(exception);\n            });\n\n            this._requests = [];\n            this._cachedChunks = [];\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(data) {\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: data.loaded,\n                total: data.lengthComputable ? data.total : this._contentLength\n              });\n            }\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReceivedCapability.promise;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      if (!this._storedError) {\n                        _context11.next = 2;\n                        break;\n                      }\n\n                      throw this._storedError;\n\n                    case 2:\n                      if (!(this._cachedChunks.length > 0)) {\n                        _context11.next = 5;\n                        break;\n                      }\n\n                      chunk = this._cachedChunks.shift();\n                      return _context11.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n\n                    case 5:\n                      if (!this._done) {\n                        _context11.next = 7;\n                        break;\n                      }\n\n                      return _context11.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 7:\n                      requestCapability = (0, _util.createPromiseCapability)();\n\n                      this._requests.push(requestCapability);\n\n                      return _context11.abrupt(\"return\", requestCapability.promise);\n\n                    case 10:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11, this);\n            }));\n\n            function read() {\n              return _read5.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n\n            this._headersReceivedCapability.reject(reason);\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n\n            this._fullRequestReader = null;\n          }\n        }]);\n\n        return PDFNetworkStreamFullRequestReader;\n      }();\n\n      var PDFNetworkStreamRangeRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n          _classCallCheck(this, PDFNetworkStreamRangeRequestReader);\n\n          this._manager = manager;\n          var args = {\n            onDone: this._onDone.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._requestId = manager.requestRange(begin, end, args);\n          this._requests = [];\n          this._queuedChunk = null;\n          this._done = false;\n          this.onProgress = null;\n          this.onClosed = null;\n        }\n\n        _createClass(PDFNetworkStreamRangeRequestReader, [{\n          key: \"_close\",\n          value: function _close() {\n            if (this.onClosed) {\n              this.onClosed(this);\n            }\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(data) {\n            var chunk = data.chunk;\n\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n\n            this._done = true;\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n\n            this._close();\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (!this.isStreamingSupported && this.onProgress) {\n              this.onProgress({\n                loaded: evt.loaded\n              });\n            }\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      if (!(this._queuedChunk !== null)) {\n                        _context12.next = 4;\n                        break;\n                      }\n\n                      chunk = this._queuedChunk;\n                      this._queuedChunk = null;\n                      return _context12.abrupt(\"return\", {\n                        value: chunk,\n                        done: false\n                      });\n\n                    case 4:\n                      if (!this._done) {\n                        _context12.next = 6;\n                        break;\n                      }\n\n                      return _context12.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 6:\n                      requestCapability = (0, _util.createPromiseCapability)();\n\n                      this._requests.push(requestCapability);\n\n                      return _context12.abrupt(\"return\", requestCapability.promise);\n\n                    case 9:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, this);\n            }));\n\n            function read() {\n              return _read6.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n\n            this._close();\n          }\n        }]);\n\n        return PDFNetworkStreamRangeRequestReader;\n      }();\n      /***/\n\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFetchStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _network_utils = __w_pdfjs_require__(20);\n\n      ;\n\n      function createFetchOptions(headers, withCredentials, abortController) {\n        return {\n          method: \"GET\",\n          headers: headers,\n          signal: abortController && abortController.signal,\n          mode: \"cors\",\n          credentials: withCredentials ? \"include\" : \"same-origin\",\n          redirect: \"follow\"\n        };\n      }\n\n      function createHeaders(httpHeaders) {\n        var headers = new Headers();\n\n        for (var property in httpHeaders) {\n          var value = httpHeaders[property];\n\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n\n          headers.append(property, value);\n        }\n\n        return headers;\n      }\n\n      var PDFFetchStream = /*#__PURE__*/function () {\n        function PDFFetchStream(source) {\n          _classCallCheck(this, PDFFetchStream);\n\n          this.source = source;\n          this.isHttp = /^https?:/i.test(source.url);\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        _createClass(PDFFetchStream, [{\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            var reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            var readers = this._rangeRequestReaders.slice(0);\n\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n\n        return PDFFetchStream;\n      }();\n\n      exports.PDFFetchStream = PDFFetchStream;\n\n      var PDFFetchStreamReader = /*#__PURE__*/function () {\n        function PDFFetchStreamReader(stream) {\n          var _this48 = this;\n\n          _classCallCheck(this, PDFFetchStreamReader);\n\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          this._filename = null;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._contentLength = source.length;\n          this._headersCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._headers = createHeaders(this._stream.httpHeaders);\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n\n            _this48._reader = response.body.getReader();\n\n            _this48._headersCapability.resolve();\n\n            var getResponseHeader = function getResponseHeader(name) {\n              return response.headers.get(name);\n            };\n\n            var _ref36 = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader: getResponseHeader,\n              isHttp: _this48._stream.isHttp,\n              rangeChunkSize: _this48._rangeChunkSize,\n              disableRange: _this48._disableRange\n            }),\n                allowRangeRequests = _ref36.allowRangeRequests,\n                suggestedLength = _ref36.suggestedLength;\n\n            _this48._isRangeSupported = allowRangeRequests;\n            _this48._contentLength = suggestedLength || _this48._contentLength;\n            _this48._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n            if (!_this48._isStreamingSupported && _this48._isRangeSupported) {\n              _this48.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n            }\n          }).catch(this._headersCapability.reject);\n          this.onProgress = null;\n        }\n\n        _createClass(PDFFetchStreamReader, [{\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n              var _yield$this$_reader$r, value, done, buffer;\n\n              return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return this._headersCapability.promise;\n\n                    case 2:\n                      _context13.next = 4;\n                      return this._reader.read();\n\n                    case 4:\n                      _yield$this$_reader$r = _context13.sent;\n                      value = _yield$this$_reader$r.value;\n                      done = _yield$this$_reader$r.done;\n\n                      if (!done) {\n                        _context13.next = 9;\n                        break;\n                      }\n\n                      return _context13.abrupt(\"return\", {\n                        value: value,\n                        done: done\n                      });\n\n                    case 9:\n                      this._loaded += value.byteLength;\n\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded,\n                          total: this._contentLength\n                        });\n                      }\n\n                      buffer = new Uint8Array(value).buffer;\n                      return _context13.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n\n                    case 13:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13, this);\n            }));\n\n            function read() {\n              return _read7.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n        }]);\n\n        return PDFFetchStreamReader;\n      }();\n\n      var PDFFetchStreamRangeReader = /*#__PURE__*/function () {\n        function PDFFetchStreamRangeReader(stream, begin, end) {\n          var _this49 = this;\n\n          _classCallCheck(this, PDFFetchStreamRangeReader);\n\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._isStreamingSupported = !source.disableStream;\n\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n\n          this._headers = createHeaders(this._stream.httpHeaders);\n\n          this._headers.append(\"Range\", \"bytes=\".concat(begin, \"-\").concat(end - 1));\n\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n\n            _this49._readCapability.resolve();\n\n            _this49._reader = response.body.getReader();\n          });\n          this.onProgress = null;\n        }\n\n        _createClass(PDFFetchStreamRangeReader, [{\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n              var _yield$this$_reader$r2, value, done, buffer;\n\n              return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.next = 2;\n                      return this._readCapability.promise;\n\n                    case 2:\n                      _context14.next = 4;\n                      return this._reader.read();\n\n                    case 4:\n                      _yield$this$_reader$r2 = _context14.sent;\n                      value = _yield$this$_reader$r2.value;\n                      done = _yield$this$_reader$r2.done;\n\n                      if (!done) {\n                        _context14.next = 9;\n                        break;\n                      }\n\n                      return _context14.abrupt(\"return\", {\n                        value: value,\n                        done: done\n                      });\n\n                    case 9:\n                      this._loaded += value.byteLength;\n\n                      if (this.onProgress) {\n                        this.onProgress({\n                          loaded: this._loaded\n                        });\n                      }\n\n                      buffer = new Uint8Array(value).buffer;\n                      return _context14.abrupt(\"return\", {\n                        value: buffer,\n                        done: false\n                      });\n\n                    case 13:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14, this);\n            }));\n\n            function read() {\n              return _read8.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n        }]);\n\n        return PDFFetchStreamRangeReader;\n      }();\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","i","l","modules","__w_pdfjs_require__","Object","enumerable","get","value","bind","key","pdfjsVersion","pdfjsBuild","require","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isValidFetchUrl","url","DEFAULT_LINK_REL","SVG_NS","DOMCanvasFactory","create","width","height","canvas","document","context","reset","canvasAndContext","destroy","DOMCMapReaderFactory","constructor","baseUrl","isCompressed","name","compressionType","CMapCompressionType","BINARY","NONE","isFetchSupported","baseURI","fetch","response","ok","statusText","Uint8Array","arrayBuffer","cMapData","stringToBytes","text","reason","request","XMLHttpRequest","DONE","responseText","resolve","reject","DOMSVGFactory","assert","svg","createElement","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateD","rotateA","rotateB","rotateC","offsetCanvasY","offsetCanvasX","Math","clone","slice","convertToViewportPoint","_util","transform","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","RenderingCancelledException","msg","LinkTarget","SELF","BLANK","PARENT","TOP","target","rel","enabled","urlNullRemoved","removeNullCharacters","link","targetStr","anchor","query","end","length","StatTimer","time","started","warn","Date","now","timeEnd","start","toString","outBuf","longest","times","duration","Response","prototype","protocol","script","src","documentElement","appendChild","console","details","pdfDateStringRegex","PDFDateString","isString","input","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","PermissionFlag","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","Number","level","cond","unreachable","base","origin","other","absoluteUrl","_isValidProtocol","configurable","writable","BaseException","message","Error","PasswordException","code","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","str","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","arr","undefined","byteLength","resultLength","arrayByteLength","pos","data","item","itemLength","buffer8","view32","buffer","IsLittleEndianCached","shadow","isLittleEndian","IsEvalSupportedCached","isEvalSupported","rgbBuf","Util","r","g","b","m1","m2","xt","p","m","yt","d","p1","p2","p3","p4","v","transpose","a","c","first","sx","sy","orderedX","rect1","rect2","compare","orderedY","result","PDFStringTranslateTable","decodeURIComponent","escape","unescape","encodeURIComponent","arr1","arr2","element","index","capability","isSettled","createObjectURL","digits","forceDataSchema","URL","blob","contentType","ii","b1","b2","b3","d1","d2","d3","d4","process","nw","electron","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","task","PDFDocumentLoadingTask","source","isArrayBuffer","PDFDataRangeTransport","range","rangeTransport","worker","window","location","href","pdfBytes","isNaN","_display_utils","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","setVerbosityLevel","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","initialData","progressiveDone","httpHeaders","withCredentials","rangeChunkSize","Promise","workerId","messageHandler","postMessageTransfers","transport","pdfDataRangeTransport","apiVersion","password","docBaseUrl","ignoreErrors","fontExtraProperties","nextDocumentId","promise","transportDestroyed","_transport","_worker","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","_rangeListeners","onDataProgress","_progressListeners","total","onDataProgressiveRead","_progressiveReadListeners","onDataProgressiveDone","_progressiveDoneListeners","transportReady","requestDataRange","abort","PDFDocumentProxy","pdfInfo","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getOpenActionDestination","deprecated","openAction","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","getDownloadInfo","getStats","cleanup","startCleanup","loadingParams","loadingTask","PDFPageProxy","pdfBug","pageIndex","pageInfo","commonObjs","PDFObjects","rotate","userUnit","view","getViewport","getAnnotations","intent","annotationsPromise","_pageIndex","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","_stats","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","complete","error","internalRenderTask","_tryCleanup","callback","objs","operatorList","useRequestAnimationFrame","_pdfBug","renderTasks","renderTask","transparency","pendingCleanup","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","done","styles","items","pump","getReader","_destroy","waitOn","force","renderCompleted","cancel","clear","resetStats","intentStates","_startRenderPage","_renderPageChunk","operatorListChunk","_pumpOperatorList","args","_abortOperatorList","streamReader","setTimeout","LoopbackPort","defer","postMessage","cloned","transferable","transfers","byteOffset","Array","desc","cloneValue","_defer","obj","WeakMap","e","addEventListener","removeEventListener","terminate","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","pdfjsFilePath","workerSrc","_is_node","mainWorkerMessageHandler","globalThis","WorkerMessageHandler","loader","getMainThreadWorkerMessageHandler","eval","getWorkerSrc","loadScript","wrapper","_initialize","_port","_messageHandler","_initializeFromPort","isSameOrigin","createCDNWrapper","terminateEarly","onWorkerError","_setupFakeWorker","_webWorker","supportTransfers","sendTest","testObj","info","setupFakeWorkerGlobal","workerHandler","WorkerTransport","onUnsupportedFeature","CMapReaderFactory","cMapUrl","cMapPacked","setupMessageHandler","destroyCapability","_passwordCapability","page","terminated","_networkStream","getFullReader","evt","loaded","sink","close","headersCapability","fullReader","_fullReader","isStreamingSupported","isRangeSupported","onProgress","_lastProgress","contentLength","rangeReader","begin","ex","exception","onPassword","updatePassword","exportedData","_params","exportedError","fontRegistry","registerFont","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","_onUnsupportedFeature","featureId","_numPages","pagePromises","results","metadata","contentDispositionFilename","filename","cleanupSuccessful","_ensureObj","objId","resolved","has","RenderTask","InternalRenderTask","canvasInRendering","WeakSet","initializeGraphics","cancelled","_canvas","StepperManager","getNextBreakPoint","graphicsReadyCallback","gfx","endDrawing","graphicsReady","_continueBound","stepper","running","_continue","onContinue","_scheduleNextBound","_scheduleNext","_useRequestAnimationFrame","operatorListIdx","version","build","BaseFontLoader","addNativeFontFace","nativeFontFace","insertRule","styleElement","styleSheet","sheet","remove","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","supported","fonts","_prepareFontLoadEvent","FontLoader","requests","nextRequestId","navigator","userAgent","otherRequest","shift","loadingContext","completeRequest","getLoadTestFont","atob","offset","chunk1","s","chunk2","ctx","called","isFontReady","loadTestFontId","_loadTestFont","COMMENT_OFFSET","spliceString","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","int32","string32","btoa","names","loadedName","div","span","FontFaceObject","translatedData","bytesToString","mimetype","getPathGenerator","character","current","cmds","js","cmd","compatibilityParams","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","mozCurrentTransform","translate","setTransform","_transformMatrix","f","ad_bc","bc_ad","old","_originalSave","prev","pop","_originalRestore","y","x","cosValue","angle","sinValue","CachedCanvases","getCanvas","canvasEntry","addContextCurrentTransform","cache","POINT_TO_PROCESS_LIMIT","imgData","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","j","j0","sum","steps","outlines","coords","p0","pp","step","drawOutline","beginPath","k","kk","o","ll","CanvasExtraState","setCurrentPoint","CanvasGraphics","EXECUTION_TIME","EXECUTION_STEPS","canvasCtx","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","destPos","dest","elemsInThisChunk","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","thisChunkHeight","srcDiff","kEnd","kEndUnrolled","srcByte","kind","properties","property","sourceCtx","destCtx","getLineDash","lineDashOffset","alpha","r0","g0","b0","alpha_","maskData","transferMap","layerData","hasBackdrop","backdrop","composeFn","subtype","composeSMaskLuminosity","composeSMaskAlpha","PIXELS_TO_PROCESS","chunkSize","row","chunkHeight","maskCtx","layerCtx","composeSMaskBackdrop","isEnabled","composed","layer","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","beginDrawing","transparentCanvas","resetCtxToDefault","beginLayout","executeOperatorList","executionStartIdx","argsArrayLen","chunkOperations","endTime","fnId","nextBreakPoint","continueCallback","depObjId","objsPool","endSMaskGroup","compositeCtx","endLayout","style","limit","dashArray","dashPhase","states","state","activeSMask","suspendSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","groupLevel","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","copyCtxState","composeSMask","deltaTransform","resumeSMaskGroup","resumeSMaskCtx","ops","getSinglePixelWidth","xw","yh","consumePath","strokeColor","strokeAlpha","lineWidth","fillAlpha","fillColor","isPatternFill","patternFill","needRestore","baseTransform","pendingEOFill","paths","pendingTextPaths","path","fontSize","spacing","leading","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","textRenderingMode","fontSizeScale","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","glyphs","charSpacing","wordSpacing","fontDirection","textHScale","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","textMatrix","textRise","textMatrixScale","glyph","isNum","restoreNeeded","fontChar","accent","scaledAccentY","vy","vmetric","vx","scaledX","scaledY","measuredWidth","isFontSubpixelAAEnabled","characterScaleX","scaledAccentX","charWidth","showType3Text","fontMatrix","isTextInvisible","spacingLength","operatorListId","transformed","urx","llx","ury","lly","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","getShadingPatternFromIR","arguments","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","img","processingType3","compileType3Glyph","compiled","maskCanvas","putBinaryImageMask","positions","images","image","map","w","h","widthScale","heightScale","tmpCanvas","HTMLElement","imgToPaint","tmpCtx","putBinaryImageData","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","left","top","entry","pendingClip","inverse","_cachedGetSinglePixelWidth","getCanvasPosition","op","ShadingIRs","region","Path2D","fromIR","raw","colorStops","r1","getPattern","applyBoundingBox","grad","createMeshCanvas","colors","rowSize","tmp","c1","c2","c3","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","cab","cbb","xa","car","cag","xb","cbr","cbg","x1_","x2_","ps","figure","cs","verticesPerRow","rows","cols","q","drawTriangle","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","combinesScale","paddedWidth","paddedHeight","backgroundColor","figures","cachedCanvases","drawFigure","owner","matrixScale","temporaryPatternCanvas","shadingIR","TilingPattern","PaintType","COLORED","UNCOLORED","createPatternCanvas","xstep","ystep","paintType","tilingType","curMatrixScale","combinedScale","dimx","dimy","graphics","getSizeAndScale","maxSize","realOutputSize","clipBbox","bboxWidth","bboxHeight","setFillAndStrokeStyleToContext","fillStyle","strokeStyle","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","MessageHandler","sourceName","targetName","comObj","event","stream","callbackId","wrapReason","action","cbSourceName","cbTargetName","streamId","_onComObjOnMessage","on","ah","actionHandler","actionName","handler","send","sendWithPromise","sendWithStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","_createStreamSink","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","onPull","onCancel","ready","success","_processStreamMessage","_postMessage","Metadata","parser","_xml_parser","xmlDocument","Map","_repair","codes","chars","substring","_parse","rdf","firstChild","nextSibling","nodeName","hasChildNodes","children","childNodes","jj","toLowerCase","trim","getAll","_metadataMap","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","ch","isWhitespace","XMLParserBase","_resolveEntities","entity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","ch2","pi","q2","complexDoctype","doctypeContent","content","onResolveEntity","onPi","onComment","onCdata","onDoctype","onText","onBeginElement","onEndElement","onError","SimpleDOMNode","nodeValue","child","SimpleXMLParser","parseFromString","_currentFragment","isWhitespaceString","node","lastElement","PDFDataTransportStream","_onProgressiveDone","_onReceiveData","_fullRequestReader","found","_loaded","_onProgress","firstReader","_removeRangeReader","queuedChunks","_queuedChunks","_progressiveDone","getRangeReader","_progressiveDataLength","cancelAllRequests","readers","PDFDataTransportStreamReader","_enqueue","_done","requestCapability","_headersReady","_filename","_isRangeSupported","_isStreamingSupported","_contentLength","PDFDataTransportStreamRangeReader","requestsCapability","_queuedChunk","WebGLContext","_enabled","WebGLUtils","tryInitGL","drawFigures","shader","gl","shaderType","COMPILE_STATUS","errorMsg","loadShader","VERTEX_SHADER","FRAGMENT_SHADER","program","createProgram","shaders","linked","LINK_STATUS","textureId","texture","createTexture","CLAMP_TO_EDGE","NEAREST","currentCanvas","currentGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","generateGL","vertexShader","createVertexShader","fragmentShader","createFragmentShader","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","STATIC_DRAW","initSmaskGL","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","colorLocation","AnnotationElementFactory","parameters","annotationType","fieldType","radioButton","checkBox","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","_createContainer","container","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","_createPopup","trigger","popupElement","title","modificationDate","contents","hideWrapper","popup","LinkAnnotationElement","addLinkAttributes","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindLink","destination","_bindNamedAction","TextAnnotationElement","JSON","hasPopup","WidgetAnnotationElement","TextWidgetAnnotationElement","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","readOnly","fieldName","maxLen","comb","fieldWidth","combWidth","textAlignment","_setTextStyle","fontFamily","CheckboxWidgetAnnotationElement","RadioButtonWidgetAnnotationElement","buttonValue","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","selectElement","combo","multiSelect","options","option","optionElement","displayValue","exportValue","PopupAnnotationElement","IGNORE_TYPES","parentType","selector","parentId","parentElement","parentLeft","parseFloat","parentWidth","PopupElement","BACKGROUND_ENLIGHT","dateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","lines","line","_toggle","pinned","_show","pin","_hide","unpin","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","borderWidth","square","CircleAnnotationElement","circle","PolylineAnnotationElement","containerClassName","vertices","coordinate","polyline","svgElementName","PolygonAnnotationElement","CaretAnnotationElement","InkAnnotationElement","inkLists","inkList","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","file","getFilenameFromUrl","eventBus","stringToPDFString","_download","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","renderTextLayer","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","geom","tx","fontName","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","PI","shouldScaleText","absScaleX","absScaleY","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","textDivs","_textDivs","_capability","textDivsLength","t","ts","_bounds","_viewport","expanded","expandBounds","divProperties","boxScale","findPositiveMin","boxes","box","x1New","x2New","expandBoundsLTR","fakeBoundary","Infinity","horizon","boundary","affectedBoundary","maxXNew","horizonPart","xNew","changedHorizon","lastBoundary","useBoundary","used","textContentStream","textContentItemsStr","enhanceTextSelection","_layoutTextCtx","TextLayerRenderTask","_reader","_renderTimer","_processItems","len","appendText","styleCache","_layoutText","_layoutTextLastFontFamily","_render","_textContent","textItems","textStyles","timeout","expandTextDivs","_renderingDone","expand","transformBuf","paddingBuf","divProps","renderParameters","SVGGraphics","opListToTree","opTree","opList","opListElement","fn","pf","pm","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc","body","crc32","deflateSyncUncompressed","literals","Buffer","output","__non_webpack_require__","maxBlockLength","deflateBlocks","idat","adler","adler32","colorType","bitDepth","offsetLiterals","offsetBytes","isMask","ihdr","deflateSync","pngLength","writePngChunk","encode","SVGExtraState","clipCount","maskCount","shadingCount","transformMatrix","loadDependencies","dependencies","getSVG","svgElement","convertOpList","operatorIdMapping","_operatorIdMapping","executeOpTree","opTreeElement","tspan","lineWidthScale","txtElement","addFontStyle","cssStyle","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","_makeShadingPattern","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","clipId","clipPath","clipElement","activeClipUrl","_setStrokeAttributes","miterLimit","lineCap","lineJoin","imgSrc","cliprect","imgEl","maskId","definitions","rootGroup","_ensureClipGroup","clipGroup","_ensureTransformGroup","tgrp","fs","http","https","fileUriRegex","parsedUrl","sourceUrl","host","parseUrl","BaseFullReader","_rangeChunkSize","_disableRange","_storedError","read","_readableStream","_error","_setReadableStream","BaseRangeReader","auth","hostname","method","headers","PDFNodeStreamFullReader","handleResponse","_url","getResponseHeader","isHttp","allowRangeRequests","suggestedLength","extractFilenameFromHeader","createRequestOptions","PDFNodeStreamRangeReader","PDFNodeStreamFsFullReader","stat","PDFNodeStreamFsRangeReader","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","flags","decoder","fatal","encoding","textdecode","match","iter","contentDispositionStr","n","quot","part","parts","quotindex","encodingend","extvalue","langvalue","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","array","NetworkManager","requestRange","listeners","prop","requestFull","getXhr","xhrId","currXhrId","pendingRequest","onHeadersReceived","onDone","onStateChange","pendingRequests","xhrStatus","ok_response_on_range_request","expectedStatus","getArrayBuffer","rangeHeader","hasPendingRequests","getRequestXhr","isPendingRequest","abortAllRequests","abortRequest","_onRangeRequestReaderClosed","_manager","_source","PDFNetworkStreamFullRequestReader","manager","_onHeadersReceived","fullRequestXhrId","_fullRequestId","fullRequestXhr","_onDone","_onError","createResponseStatusError","PDFNetworkStreamRangeRequestReader","_close","onClosed","_requestId","signal","abortController","credentials","redirect","Headers","PDFFetchStreamReader","AbortController","createHeaders","createFetchOptions","validateResponseStatus","_abortController","PDFFetchStreamRangeReader"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function (token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Provides support for TypedArray.prototype.slice in legacy browsers.\n  // Support: IE\n  (function checkTypedArraySlice() {\n    if (Uint8Array.prototype.slice) {\n      return;\n    }\n    require(\"core-js/es/typed-array/slice\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !process.versions.electron;\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences, or `null` when no viewer preferences are present\n   *   in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function (openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function () {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"]},"metadata":{},"sourceType":"script"}